# PySNMP SMI module. Autogenerated from smidump -f python NETSCREEN-SET-DNS-MIB
# by libsmi2pysnmp-0.1.3 at Fri May 30 14:12:56 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( netscreenSetting, netscreenSettingMibModule, ) = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenSetting", "netscreenSettingMibModule")
( Bits, Integer32, IpAddress, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

netscreenSetDnsMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 7, 0, 3)).setRevisions(("2004-05-03 20:22","2004-05-03 00:00","2004-03-03 00:00","2003-11-10 00:00","2001-09-28 00:00","2001-05-27 00:00",))
if mibBuilder.loadTexts: netscreenSetDnsMibModule.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: netscreenSetDnsMibModule.setContactInfo("Customer Support\n\n1194 North Mathilda Avenue \nSunnyvale, California 94089-1206\nUSA\n\nTel: 1-800-638-8296\nE-mail: customerservice@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: netscreenSetDnsMibModule.setDescription("This module defines the object that are used to monitor all\nthe configuration info")
nsSetDNS = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 7, 3))
nsConfigDnsPriSer = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 3, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsConfigDnsPriSer.setDescription("Primary DNS server ip address")
nsConfigDnsSecSer = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 3, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsConfigDnsSecSer.setDescription("Secondary DNS server ip address")
nsConfigDnsRefEnable = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 3, 3), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("disable", 0), ("enabled", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsConfigDnsRefEnable.setDescription("Enable refresh DNS every day.")
nsConfigDnsRefTime = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsConfigDnsRefTime.setDescription("DNS refresh time.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("NETSCREEN-SET-DNS-MIB", PYSNMP_MODULE_ID=netscreenSetDnsMibModule)

# Objects
mibBuilder.exportSymbols("NETSCREEN-SET-DNS-MIB", netscreenSetDnsMibModule=netscreenSetDnsMibModule, nsSetDNS=nsSetDNS, nsConfigDnsPriSer=nsConfigDnsPriSer, nsConfigDnsSecSer=nsConfigDnsSecSer, nsConfigDnsRefEnable=nsConfigDnsRefEnable, nsConfigDnsRefTime=nsConfigDnsRefTime)


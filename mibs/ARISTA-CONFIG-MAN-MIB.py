# PySNMP SMI module. Autogenerated from smidump -f python ARISTA-CONFIG-MAN-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:32 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( aristaMibs, ) = mibBuilder.importSymbols("ARISTA-SMI-MIB", "aristaMibs")
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( ModuleCompliance, NotificationGroup, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "TimeTicks", "Unsigned32")
( TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention")

# Types

class ConfigHistoryEventMedium(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(2,0,1,5,4,3,)
    namedValues = NamedValues(("none", 0), ("erase", 1), ("commandSource", 2), ("running", 3), ("startup", 4), ("url", 5), )
    

# Objects

aristaConfigManMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 30065, 3, 9)).setRevisions(("2012-08-23 13:00",))
if mibBuilder.loadTexts: aristaConfigManMIB.setOrganization("Arista Networks, Inc.")
if mibBuilder.loadTexts: aristaConfigManMIB.setContactInfo("Arista Networks, Inc.\n\nPostal: 5470 Great America Parkway\n        Santa Clara, CA 95054\n\nTel: +1 408 547-5500\n\nE-mail: snmp@aristanetworks.com")
if mibBuilder.loadTexts: aristaConfigManMIB.setDescription("This MIB provides notifications in case of configuration events.\nNotification to the managing device are sent (aristaConfigManEvent)\nin case of the occurence of a config event.\nThe config events can take place from any of the following sources:\n\ncli   commands issued via CLI\nsnmp  snmpsets via SNMP\n\naristaConfigManEvent would provide information about command source\nconfig source, config destination, config source URL (for instance flash,\nftp, http and so on) and config destination URL.            ")
aristaConfigManMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1))
aristaCmdHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1, 1))
aristaCmdHistoryRunningLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaCmdHistoryRunningLastChanged.setDescription("The value of sysUpTime when the running configuration\nwas last changed.")
aristaCmdHistoryEventTable = MibTable((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1, 1, 2))
if mibBuilder.loadTexts: aristaCmdHistoryEventTable.setDescription("A table of configuration events on this router.")
aristaCmdHistoryEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1, 1, 2, 1)).setIndexNames((0, "ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventIndex"))
if mibBuilder.loadTexts: aristaCmdHistoryEventEntry.setDescription("Information about a configuration event on this\nrouter.")
aristaCmdHistoryEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1, 1, 2, 1, 1), Unsigned32()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: aristaCmdHistoryEventIndex.setDescription("A monotonically increasing integer for the sole\npurpose of indexing events.")
aristaCmdHistoryEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1, 1, 2, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaCmdHistoryEventTime.setDescription("The value of sysUpTime when the configuration event occurred.")
aristaCmdHistoryEventCommandSource = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1, 1, 2, 1, 3), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("commandLine", 0), ("snmp", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaCmdHistoryEventCommandSource.setDescription("The source from where the config command was initiated.")
aristaCmdHistoryEventConfigSource = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1, 1, 2, 1, 4), ConfigHistoryEventMedium()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaCmdHistoryEventConfigSource.setDescription("The configuration data source for the event.")
aristaCmdHistoryEventConfigDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1, 1, 2, 1, 5), ConfigHistoryEventMedium()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaCmdHistoryEventConfigDestination.setDescription("The configuration data destination for the event.")
aristaCmdHistoryEventConfigSourceURLScheme = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaCmdHistoryEventConfigSourceURLScheme.setDescription("The config source URL scheme.")
aristaCmdHistoryEventConfigDestURLScheme = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 9, 1, 1, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaCmdHistoryEventConfigDestURLScheme.setDescription("The config destination URL scheme.")
aristaConfigManMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 9, 2))
aristaConfigManMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 9, 2, 1))
aristaConfigManMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 9, 2, 1, 2))
aristaConfigManMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 9, 3))
aristaConfigManMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 9, 3, 0))

# Augmentions

# Notifications

aristaConfigManEvent = NotificationType((1, 3, 6, 1, 4, 1, 30065, 3, 9, 3, 0, 1)).setObjects(*(("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventConfigSource"), ("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventConfigDestination"), ("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventConfigSourceURLScheme"), ("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventConfigDestURLScheme"), ("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventCommandSource"), ) )
if mibBuilder.loadTexts: aristaConfigManEvent.setDescription("Notification of a configuration management event as\nrecorded in aristaCmdHistoryEventTable.")

# Groups

aristaConfigEventDetailGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 30065, 3, 9, 2, 1, 2, 1)).setObjects(*(("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventConfigSource"), ("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventConfigDestination"), ("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventTime"), ("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventCommandSource"), ("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventConfigDestURLScheme"), ("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryRunningLastChanged"), ("ARISTA-CONFIG-MAN-MIB", "aristaCmdHistoryEventConfigSourceURLScheme"), ) )
if mibBuilder.loadTexts: aristaConfigEventDetailGroup.setDescription("The collection of objects that represent the redundancy\nstatus in the system.")
aristaConfigManMibNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 30065, 3, 9, 2, 1, 2, 2)).setObjects(*(("ARISTA-CONFIG-MAN-MIB", "aristaConfigManEvent"), ) )
if mibBuilder.loadTexts: aristaConfigManMibNotificationsGroup.setDescription("The collection of notifications generated by the system upon\nconfiguration events.")

# Compliances

aristaConfigManMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 30065, 3, 9, 2, 1, 1)).setObjects(*(("ARISTA-CONFIG-MAN-MIB", "aristaConfigEventDetailGroup"), ("ARISTA-CONFIG-MAN-MIB", "aristaConfigManMibNotificationsGroup"), ) )
if mibBuilder.loadTexts: aristaConfigManMibCompliance.setDescription("The compliance statement for Arista switches that\nsupport CONFIG-MAN-MIB.")

# Exports

# Module identity
mibBuilder.exportSymbols("ARISTA-CONFIG-MAN-MIB", PYSNMP_MODULE_ID=aristaConfigManMIB)

# Types
mibBuilder.exportSymbols("ARISTA-CONFIG-MAN-MIB", ConfigHistoryEventMedium=ConfigHistoryEventMedium)

# Objects
mibBuilder.exportSymbols("ARISTA-CONFIG-MAN-MIB", aristaConfigManMIB=aristaConfigManMIB, aristaConfigManMIBObjects=aristaConfigManMIBObjects, aristaCmdHistory=aristaCmdHistory, aristaCmdHistoryRunningLastChanged=aristaCmdHistoryRunningLastChanged, aristaCmdHistoryEventTable=aristaCmdHistoryEventTable, aristaCmdHistoryEventEntry=aristaCmdHistoryEventEntry, aristaCmdHistoryEventIndex=aristaCmdHistoryEventIndex, aristaCmdHistoryEventTime=aristaCmdHistoryEventTime, aristaCmdHistoryEventCommandSource=aristaCmdHistoryEventCommandSource, aristaCmdHistoryEventConfigSource=aristaCmdHistoryEventConfigSource, aristaCmdHistoryEventConfigDestination=aristaCmdHistoryEventConfigDestination, aristaCmdHistoryEventConfigSourceURLScheme=aristaCmdHistoryEventConfigSourceURLScheme, aristaCmdHistoryEventConfigDestURLScheme=aristaCmdHistoryEventConfigDestURLScheme, aristaConfigManMibConformance=aristaConfigManMibConformance, aristaConfigManMibCompliances=aristaConfigManMibCompliances, aristaConfigManMibGroups=aristaConfigManMibGroups, aristaConfigManMIBNotificationPrefix=aristaConfigManMIBNotificationPrefix, aristaConfigManMIBNotifications=aristaConfigManMIBNotifications)

# Notifications
mibBuilder.exportSymbols("ARISTA-CONFIG-MAN-MIB", aristaConfigManEvent=aristaConfigManEvent)

# Groups
mibBuilder.exportSymbols("ARISTA-CONFIG-MAN-MIB", aristaConfigEventDetailGroup=aristaConfigEventDetailGroup, aristaConfigManMibNotificationsGroup=aristaConfigManMibNotificationsGroup)

# Compliances
mibBuilder.exportSymbols("ARISTA-CONFIG-MAN-MIB", aristaConfigManMibCompliance=aristaConfigManMibCompliance)

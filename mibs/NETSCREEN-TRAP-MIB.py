# PySNMP SMI module. Autogenerated from smidump -f python NETSCREEN-TRAP-MIB
# by libsmi2pysnmp-0.1.3 at Fri May 30 14:12:57 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( netscreenTrap, netscreenTrapInfo, ) = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenTrap", "netscreenTrapInfo")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

netscreenTrapMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 2, 0)).setRevisions(("2008-03-17 00:00","2005-10-17 00:00","2005-03-03 20:22","2005-03-03 00:00","2004-09-10 00:00","2004-05-03 00:00","2004-03-03 00:00","2004-01-23 00:00","2001-09-28 00:00","2000-08-02 00:00",))
if mibBuilder.loadTexts: netscreenTrapMibModule.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: netscreenTrapMibModule.setContactInfo("Customer Support\n\n1194 North Mathilda Avenue \nSunnyvale, California 94089-1206\nUSA\n\nTel: 1-800-638-8296\nE-mail: customerservice@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: netscreenTrapMibModule.setDescription("Added trap types 15, it is still in use")
netscreenTrapDesc = MibScalar((1, 3, 6, 1, 4, 1, 3224, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: netscreenTrapDesc.setDescription("The textual description of the alarm")

# Augmentions

# Notifications

netscreenTrapHw = NotificationType((1, 3, 6, 1, 4, 1, 3224, 0, 100)).setObjects(*(("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ) )
if mibBuilder.loadTexts: netscreenTrapHw.setDescription("This trap indicates that some kind of hardware problem has\noccured.")
netscreenTrapFw = NotificationType((1, 3, 6, 1, 4, 1, 3224, 0, 200)).setObjects(*(("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ) )
if mibBuilder.loadTexts: netscreenTrapFw.setDescription("This trap indicates that some kind of firewall functions has\nbeen triggered.")
netscreenTrapSw = NotificationType((1, 3, 6, 1, 4, 1, 3224, 0, 300)).setObjects(*(("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ) )
if mibBuilder.loadTexts: netscreenTrapSw.setDescription("This trap indicates that some kind of software problem has\noccured.")
netscreenTrapTrf = NotificationType((1, 3, 6, 1, 4, 1, 3224, 0, 400)).setObjects(*(("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ) )
if mibBuilder.loadTexts: netscreenTrapTrf.setDescription("This trap indicates that some kind of traffic conditions has\nbeen triggered.")
netscreenTrapVpn = NotificationType((1, 3, 6, 1, 4, 1, 3224, 0, 500)).setObjects(*(("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ) )
if mibBuilder.loadTexts: netscreenTrapVpn.setDescription("This trap indicates that VPN tunnel status has occured.")
netscreenTrapNsrp = NotificationType((1, 3, 6, 1, 4, 1, 3224, 0, 600)).setObjects(*(("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ) )
if mibBuilder.loadTexts: netscreenTrapNsrp.setDescription("This trap indicates that NSRP status has occured.")
netscreenTrapGPRO = NotificationType((1, 3, 6, 1, 4, 1, 3224, 0, 700)).setObjects(*(("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ) )
if mibBuilder.loadTexts: netscreenTrapGPRO.setDescription("This trap indicates that some kind of Global PRO problems has\noccurred.")
netscreenTrapDrp = NotificationType((1, 3, 6, 1, 4, 1, 3224, 0, 800)).setObjects(*(("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ) )
if mibBuilder.loadTexts: netscreenTrapDrp.setDescription("This trap indicates that Drp status has occured.")
netscreenTrapIFFailover = NotificationType((1, 3, 6, 1, 4, 1, 3224, 0, 900)).setObjects(*(("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ) )
if mibBuilder.loadTexts: netscreenTrapIFFailover.setDescription("This trap indicates that interface fail over status has\noccured.")
netscreenTrapIDPAttack = NotificationType((1, 3, 6, 1, 4, 1, 3224, 0, 1000)).setObjects(*(("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ) )
if mibBuilder.loadTexts: netscreenTrapIDPAttack.setDescription("This trap indicates that IDP attack status has occured.")

# Exports

# Module identity
mibBuilder.exportSymbols("NETSCREEN-TRAP-MIB", PYSNMP_MODULE_ID=netscreenTrapMibModule)

# Objects
mibBuilder.exportSymbols("NETSCREEN-TRAP-MIB", netscreenTrapMibModule=netscreenTrapMibModule, netscreenTrapDesc=netscreenTrapDesc)

# Notifications
mibBuilder.exportSymbols("NETSCREEN-TRAP-MIB", netscreenTrapHw=netscreenTrapHw, netscreenTrapFw=netscreenTrapFw, netscreenTrapSw=netscreenTrapSw, netscreenTrapTrf=netscreenTrapTrf, netscreenTrapVpn=netscreenTrapVpn, netscreenTrapNsrp=netscreenTrapNsrp, netscreenTrapGPRO=netscreenTrapGPRO, netscreenTrapDrp=netscreenTrapDrp, netscreenTrapIFFailover=netscreenTrapIFFailover, netscreenTrapIDPAttack=netscreenTrapIDPAttack)


# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:54 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( InetAddress, InetAddressPrefixLength, InetAddressType, InetPortNumber, ) = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType", "InetPortNumber")
( Ipv6Address, Ipv6AddressIfIdentifier, Ipv6AddressPrefix, ) = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address", "Ipv6AddressIfIdentifier", "Ipv6AddressPrefix")
( jnxMobileGatewaySgw, ) = mibBuilder.importSymbols("JUNIPER-MBG-SMI", "jnxMobileGatewaySgw")
( EnabledStatus, ) = mibBuilder.importSymbols("JUNIPER-MIMSTP-MIB", "EnabledStatus")
( jnxMbgGwIndex, jnxMbgGwName, ) = mibBuilder.importSymbols("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex", "jnxMbgGwName")
( Bits, Counter32, Counter64, Integer32, Integer32, IpAddress, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Counter64", "Integer32", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( DisplayString, RowStatus, TextualConvention, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")

# Objects

jnxMbgSgwGtpMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2)).setRevisions(("2011-09-21 12:00",))
if mibBuilder.loadTexts: jnxMbgSgwGtpMib.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxMbgSgwGtpMib.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\nE-mail: support@juniper.net")
if mibBuilder.loadTexts: jnxMbgSgwGtpMib.setDescription("This module defines some sample objects pertaining to GTP protocol.")
jnxMbgSgwGtpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 0))
jnxMbgSgwGtpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1))
jnxMbgSgwGtpCPerPeerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1))
if mibBuilder.loadTexts: jnxMbgSgwGtpCPerPeerStatsTable.setDescription("Each entry corresponds to a GTP per peer level control statistic.")
jnxMbgSgwGtpPerPeerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1)).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), (0, "JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwPPGtpRmtAddr"), (0, "JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwPPGtpLclAddr"), (0, "JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwPPGtpRtgInst"))
if mibBuilder.loadTexts: jnxMbgSgwGtpPerPeerStatsEntry.setDescription("A specification of the GTPC peer level Statistics.")
jnxMbgSgwPPGtpRmtAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 1), IpAddress()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpRmtAddr.setDescription("The Remote IP address of this GTP peer entry.")
jnxMbgSgwPPGtpLclAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 2), IpAddress()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpLclAddr.setDescription("The Local IP address of this GTP peer entry.")
jnxMbgSgwPPGtpRtgInst = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 3), Unsigned32()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpRtgInst.setDescription("The Routing Instance for this Peer.")
jnxMbgSgwPPRxPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPRxPacketsDropped.setDescription("Number of Received Packets Dropped.")
jnxMbgSgwPPPacketAllocFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPPacketAllocFail.setDescription("Number of Packet allocation failures.")
jnxMbgSgwPPPacketSendFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPPacketSendFail.setDescription("Number of Packet Send failures.")
jnxMbgSgwPPIPVerErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPIPVerErrRx.setDescription("Number of IP Version Error Packets Received.")
jnxMbgSgwPPIPProtoErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPIPProtoErrRx.setDescription("Number of IP Protocol Error packets Received.")
jnxMbgSgwPPGTPPortErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGTPPortErrRx.setDescription("Number of  Port Error Packets Received.")
jnxMbgSgwPPGTPUnknVerRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGTPUnknVerRx.setDescription("Number of  Unknown Version Packets Received.")
jnxMbgSgwPPPcktLenErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPPcktLenErrRx.setDescription("Number of Packet Length Error Packets Received.")
jnxMbgSgwPPUnknMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPUnknMsgRx.setDescription("Number of  Unknown Messages Received.")
jnxMbgSgwPPProtocolErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPProtocolErrRx.setDescription("Number of GTPv2 Protocol Errors Received.")
jnxMbgSgwPPUnSupportedMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPUnSupportedMsgRx.setDescription("Number of GTPv2 Unsupported Messages received.")
jnxMbgSgwPPT3RespTmrExpRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPT3RespTmrExpRx.setDescription("Number of GTP V2 T3 timer expiries Received.")
jnxMbgSgwPPV2NumMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPV2NumMsgRx.setDescription("Number of GTPv2 messages received.")
jnxMbgSgwPPV2NumMsgTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPV2NumMsgTx.setDescription("Number of GTPV2 messages sent.")
jnxMbgSgwPPV2NumBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPV2NumBytesRx.setDescription("Number of GTPv2 bytes received.")
jnxMbgSgwPPV2NumBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPV2NumBytesTx.setDescription("Number of GTPV2 bytes sent.")
jnxMbgSgwPPV2EchoReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPV2EchoReqRx.setDescription("Number of GTP V2 Echo Request received.")
jnxMbgSgwPPV2EchoReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPV2EchoReqTx.setDescription("Number of GTP V2 Echo Request Sent.")
jnxMbgSgwPPV2EchoRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPV2EchoRespRx.setDescription("Number of GTP V2 Echo Response received.")
jnxMbgSgwPPV2EchoRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPV2EchoRespTx.setDescription("Number of GTP V2 Echo Response Sent.")
jnxMbgSgwPPV2VerNotSupRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPV2VerNotSupRx.setDescription("Number of GTP V2 Version Not supported messages received")
jnxMbgSgwPPV2VerNotSupTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPV2VerNotSupTx.setDescription("Number of GTP V2 Number of version not supported messages sent.")
jnxMbgSgwPPCreateSessReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCreateSessReqRx.setDescription("Number of GTP V2 Create Session Requests received.")
jnxMbgSgwPPCreateSessReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCreateSessReqTx.setDescription("Number of GTP V2 Create Session Requests Sent.")
jnxMbgSgwPPCreateSessRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCreateSessRspRx.setDescription("Number of GTP V2 Create Session Responses received.")
jnxMbgSgwPPCreateSessRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCreateSessRspTx.setDescription("Number of GTP V2 Create Session Responses Sent.")
jnxMbgSgwPPModBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPModBrReqRx.setDescription("Number of GTP V2 Modify Bearer Requests received.")
jnxMbgSgwPPModBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPModBrReqTx.setDescription("Number of GTP V2 Modify Bearer Requests Sent.")
jnxMbgSgwPPModBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPModBrRspRx.setDescription("Number of GTP V2 Modify Bearer Responses received.")
jnxMbgSgwPPModBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPModBrRspTx.setDescription("Number of GTP V2 Modify Bearer Responses Sent.")
jnxMbgSgwPPDelSessReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelSessReqRx.setDescription("Number of GTP V2 Delete Session Requests received.")
jnxMbgSgwPPDelSessReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelSessReqTx.setDescription("Number of GTP V2 Delete Session Requests Sent.")
jnxMbgSgwPPDelSessRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelSessRspRx.setDescription("Number of GTP V2 Delete Session Responses received.")
jnxMbgSgwPPDelSessRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelSessRspTx.setDescription("Number of GTP V2 Delete Session Responses Sent.")
jnxMbgSgwPPCrtBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCrtBrReqRx.setDescription("Number of GTP V2 Create Bearer Requests received.")
jnxMbgSgwPPCrtBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCrtBrReqTx.setDescription("Number of GTP V2 Create Bearer Requests Sent.")
jnxMbgSgwPPCrtBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCrtBrRspRx.setDescription("Number of GTP V2 Create Bearer Response received.")
jnxMbgSgwPPCrtBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCrtBrRspTx.setDescription("Number of GTP V2 Create Bearer Response Sent.")
jnxMbgSgwPPUpdBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPUpdBrReqRx.setDescription("Number of GTP V2 Update Bearer Request received.")
jnxMbgSgwPPUpdBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPUpdBrReqTx.setDescription("Number of GTP V2 Update Bearer Request Sent.")
jnxMbgSgwPPUpdBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPUpdBrRspRx.setDescription("Number of GTP V2 Update Bearer Response received.")
jnxMbgSgwPPUpdBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPUpdBrRspTx.setDescription("Number of GTP V2 Update Bearer Response Sent.")
jnxMbgSgwPPDelBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelBrReqRx.setDescription("Number of GTP V2 Delete Bearer Request received.")
jnxMbgSgwPPDelBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelBrReqTx.setDescription("Number of GTP V2 Delete Bearer Request Sent.")
jnxMbgSgwPPDelBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelBrRspRx.setDescription("Number of GTP V2 Delete Bearer Response received.")
jnxMbgSgwPPDelBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelBrRspTx.setDescription("Number of GTP V2 Delete Bearer Response Sent.")
jnxMbgSgwPPDelConnSetReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelConnSetReqRx.setDescription("Number of GTP V2 Delete PDN connection set Request received.")
jnxMbgSgwPPDelConnSetReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelConnSetReqTx.setDescription("Number of GTP V2 Delete PDN connection set Request Sent.")
jnxMbgSgwPPDelConnSetRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelConnSetRspRx.setDescription("Number of GTP V2 Delete PDN connection set Response received.")
jnxMbgSgwPPDelConnSetRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelConnSetRspTx.setDescription("Number of GTP V2 Delete PDN connection set Response Sent.")
jnxMbgSgwPPUpdConnSetReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPUpdConnSetReqRx.setDescription("Number of GTP V2 Update Connection set Request received.")
jnxMbgSgwPPUpdConnSetReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPUpdConnSetReqTx.setDescription("Number of GTP V2 Update Connection set Request Sent.")
jnxMbgSgwPPUpdConnSetRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPUpdConnSetRspRx.setDescription("Number of GTP V2 Update Connection set Response received.")
jnxMbgSgwPPUpdConnSetRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPUpdConnSetRspTx.setDescription("Number of GTP V2 Update Connection set Response Sent.")
jnxMbgSgwPPModBrCmdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPModBrCmdRx.setDescription("Number of GTP V2 Modify Bearer Command received.")
jnxMbgSgwPPModBrCmdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPModBrCmdTx.setDescription("Number of GTP V2 Modify Bearer Command Sent.")
jnxMbgSgwPPModBrFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPModBrFlrIndRx.setDescription("Number of GTP V2 Modify Bearer Failure received.")
jnxMbgSgwPPModBrFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPModBrFlrIndTx.setDescription("Number of GTP V2 Modify Bearer Failure Sent.")
jnxMbgSgwPPDelBrCmdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelBrCmdRx.setDescription("Number of GTP V2 Delete Bearer Command received.")
jnxMbgSgwPPDelBrCmdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelBrCmdTx.setDescription("Number of GTP V2 Delete Bearer Command Sent.")
jnxMbgSgwPPDelBrFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelBrFlrIndRx.setDescription("Number of GTP V2 Delete Bearer Failure received.")
jnxMbgSgwPPDelBrFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelBrFlrIndTx.setDescription("Number of GTP V2 Delete Bearer Failure Sent.")
jnxMbgSgwPPBrResCmdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPBrResCmdRx.setDescription("Number of GTP V2 Bearer Response Command received.")
jnxMbgSgwPPBrResCmdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPBrResCmdTx.setDescription("Number of GTP V2 Bearer Response Command Sent.")
jnxMbgSgwPPBrResFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPBrResFlrIndRx.setDescription("Number of GTP V2 Bearer Resource Failure received.")
jnxMbgSgwPPBrResFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPBrResFlrIndTx.setDescription("Number of GTP V2 Bearer Resource Failure Sent.")
jnxMbgSgwPPRelAcsBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPRelAcsBrReqRx.setDescription("Number of GTP V2 Release Access Bearer Requests received.")
jnxMbgSgwPPRelAcsBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPRelAcsBrReqTx.setDescription("Number of GTP V2 Release Access Bearer Requests sent.")
jnxMbgSgwPPRelAcsBrRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPRelAcsBrRespRx.setDescription("Number of GTP V2 Release Access Bearer Response received.")
jnxMbgSgwPPRelAcsBrRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPRelAcsBrRespTx.setDescription("Number of GTP V2 Release Access Bearer Response sent.")
jnxMbgSgwPPCrIndTunReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCrIndTunReqRx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Request Received")
jnxMbgSgwPPCrIndTunReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCrIndTunReqTx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Request sent")
jnxMbgSgwPPCrIndTunRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCrIndTunRespRx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Response Received")
jnxMbgSgwPPCrIndTunRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPCrIndTunRespTx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Response sent")
jnxMbgSgwPPDelIndTunReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelIndTunReqRx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Request Received")
jnxMbgSgwPPDelIndTunReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 79), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelIndTunReqTx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Request sent.")
jnxMbgSgwPPDelIndTunRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelIndTunRespRx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Response Received")
jnxMbgSgwPPDelIndTunRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDelIndTunRespTx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Response sent.")
jnxMbgSgwPPDlDataNotifRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDlDataNotifRx.setDescription("Number of GTP V2 Downlink Data Notify received.")
jnxMbgSgwPPDlDataNotifTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDlDataNotifTx.setDescription("Number of GTP V2 Downlink Data Notify Sent.")
jnxMbgSgwPPDlDataAckRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDlDataAckRx.setDescription("Number of GTP V2 Downlink Data Notify Acknowledgement received.")
jnxMbgSgwPPDlDataAckTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDlDataAckTx.setDescription("Number of GTP V2 Downlink Data Notify Acknowledgement Sent.")
jnxMbgSgwPPDlDataNotiFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 86), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDlDataNotiFlrIndRx.setDescription("Number of GTP V2 Downlink Data Notification fail received.")
jnxMbgSgwPPDlDataNotiFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 87), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPDlDataNotiFlrIndTx.setDescription("Number of GTP V2 Downlink Data Notification fail Sent.")
jnxMbgSgwPPStopPagingIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 88), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPStopPagingIndRx.setDescription("Number of GTP V2 Number of Stop Paging Indication Messages Received.")
jnxMbgSgwPPStopPagingIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 89), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPStopPagingIndTx.setDescription("Number of GTP V2 Number of Stop Paging Indicaton messages sent")
jnxMbgSgwPPGtpV2ICsPageRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsPageRx.setDescription("Number of GTPV2 packets received with cause Page.")
jnxMbgSgwPPGtpV2ICsPageTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 91), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsPageTx.setDescription("Number of GTP packets sent with cause Page.")
jnxMbgSgwPPGtpV2ICsReqAcceptRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 92), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsReqAcceptRx.setDescription("Number of GTPV2 packets received with cause Request Accept.")
jnxMbgSgwPPGtpV2ICsReqAcceptTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 93), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsReqAcceptTx.setDescription("Number of GTP packets sent with cause Request Accept.")
jnxMbgSgwPPGtpV2ICsAcceptPartRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 94), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsAcceptPartRx.setDescription("Number of GTPV2 packets received with cause Accept Partial.")
jnxMbgSgwPPGtpV2ICsAcceptPartTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 95), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsAcceptPartTx.setDescription("Number of GTP packets sent with cause Accept Partial.")
jnxMbgSgwPPGtpV2ICsNewPTNPrefRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 96), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsNewPTNPrefRx.setDescription("Number of GTPV2 packets received with cause New PDN type due to Network Preference.")
jnxMbgSgwPPGtpV2ICsNewPTNPrefTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 97), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsNewPTNPrefTx.setDescription("Number of GTP packets sent with cause New PDN type due to Network Preference.")
jnxMbgSgwPPGtpV2ICsNPTSIAdbrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 98), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsNPTSIAdbrRx.setDescription("Number of GTPV2 packets received with cause New PDN type due to Single Address Bearer.")
jnxMbgSgwPPGtpV2ICsNPTSIAdbrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 99), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsNPTSIAdbrTx.setDescription("Number of GTP packets sent with cause New PDN type due to Single Address Bearer.")
jnxMbgSgwPPGtpV2ICsCtxNotFndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 100), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsCtxNotFndRx.setDescription("Number of GTPV2 packets received with cause Context not found.")
jnxMbgSgwPPGtpV2ICsCtxNotFndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 101), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsCtxNotFndTx.setDescription("Number of GTP packets sent with cause Context not found.")
jnxMbgSgwPPGtpV2ICsInvMsgFmtRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 102), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsInvMsgFmtRx.setDescription("Number of GTPV2 packets received with cause Invalid Message Format.")
jnxMbgSgwPPGtpV2ICsInvMsgFmtTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 103), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsInvMsgFmtTx.setDescription("Number of GTP packets sent with cause Invalid Message Format.")
jnxMbgSgwPPGtpV2ICsVerNotSuppRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 104), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsVerNotSuppRx.setDescription("Number of GTPV2 packets received with cause Version not Supported.")
jnxMbgSgwPPGtpV2ICsVerNotSuppTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 105), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsVerNotSuppTx.setDescription("Number of GTP packets sent with cause Version not Supported.")
jnxMbgSgwPPGtpV2ICsInvLenRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 106), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsInvLenRx.setDescription("Number of GTPV2 packets received with cause Invalid Length.")
jnxMbgSgwPPGtpV2ICsInvLenTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 107), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsInvLenTx.setDescription("Number of GTP packets sent with cause Invalid Length.")
jnxMbgSgwPPGtpV2ICsServNotSupRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 108), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsServNotSupRx.setDescription("Number of GTPV2 packets received with cause Service Not supported.")
jnxMbgSgwPPGtpV2ICsServNotSupTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 109), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsServNotSupTx.setDescription("Number of GTP packets sent with cause Service Not supported.")
jnxMbgSgwPPGtpV2ICsManIEIncorRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 110), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsManIEIncorRx.setDescription("Number of GTPV2 packets received with cause Mandatory IE incorrect.")
jnxMbgSgwPPGtpV2ICsManIEIncorTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 111), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsManIEIncorTx.setDescription("Number of GTP packets sent with cause Mandatory IE incorrect.")
jnxMbgSgwPPGtpV2ICsManIEMissRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 112), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsManIEMissRx.setDescription("Number of GTPV2 packets received with cause Mandatory IE Missing.")
jnxMbgSgwPPGtpV2ICsManIEMissTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 113), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsManIEMissTx.setDescription("Number of GTP packets sent with cause Mandatory IE Missing.")
jnxMbgSgwPPGtpV2ICsOptIEIncorRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 114), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsOptIEIncorRx.setDescription("Number of GTPV2 packets received with cause Optional IE Incorrect.")
jnxMbgSgwPPGtpV2ICsOptIEIncorTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 115), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsOptIEIncorTx.setDescription("Number of GTP packets sent with cause Optional IE Incorrect.")
jnxMbgSgwPPGtpV2ICsSysFailRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 116), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsSysFailRx.setDescription("Number of GTPV2 packets received with cause System Failure.")
jnxMbgSgwPPGtpV2ICsSysFailTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 117), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsSysFailTx.setDescription("Number of GTP packets sent with cause System Failure.")
jnxMbgSgwPPGtpV2ICsNoResRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 118), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsNoResRx.setDescription("Number of GTPV2 packets received with cause No Resource.")
jnxMbgSgwPPGtpV2ICsNoResTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 119), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsNoResTx.setDescription("Number of GTP packets sent with cause No Resource.")
jnxMbgSgwPPGtpV2ICsTFTSMANTErRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 120), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsTFTSMANTErRx.setDescription("Number of GTPV2 packets received with cause TFT Symantic Error.")
jnxMbgSgwPPGtpV2ICsTFTSMANTErTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 121), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsTFTSMANTErTx.setDescription("Number of GTP packets sent with cause TFT Symantic Error.")
jnxMbgSgwPPGtpV2ICsTFTSysErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 122), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsTFTSysErrRx.setDescription("Number of GTPV2 packets received with cause TFT System Error.")
jnxMbgSgwPPGtpV2ICsTFTSysErrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 123), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsTFTSysErrTx.setDescription("Number of GTP packets sent with cause TFT System Error.")
jnxMbgSgwPPGtpV2ICsPkFltManErRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 124), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsPkFltManErRx.setDescription("Number of GTPV2 packets received with cause Packet Filter Symantic Error.")
jnxMbgSgwPPGtpV2ICsPkFltManErTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 125), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsPkFltManErTx.setDescription("Number of GTP packets sent with cause Packet Filter Symantic Error.")
jnxMbgSgwPPGtpV2ICsPkFltSynErRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 126), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsPkFltSynErRx.setDescription("Number of GTPV2 packets received with cause Packet Filter Syntax Error.")
jnxMbgSgwPPGtpV2ICsPkFltSynErTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 127), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsPkFltSynErTx.setDescription("Number of GTP packets sent with cause Packet Filter Syntax Error.")
jnxMbgSgwPPGtpV2ICsMisUnknAPNRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 128), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsMisUnknAPNRx.setDescription("Number of GTPV2 packets received with cause Unknown APN.")
jnxMbgSgwPPGtpV2ICsMisUnknAPNTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 129), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsMisUnknAPNTx.setDescription("Number of GTP packets sent with cause Unknown APN.")
jnxMbgSgwPPGtpV2ICsUnexpRptIERx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 130), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUnexpRptIERx.setDescription("Number of GTPV2 packets received with cause Unexpected Repeated IE.")
jnxMbgSgwPPGtpV2ICsUnexpRptIETx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 131), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUnexpRptIETx.setDescription("Number of GTP packets sent with cause Unexpected Repeated IE.")
jnxMbgSgwPPGtpV2ICsGREKeyNtFdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 132), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsGREKeyNtFdRx.setDescription("Number of GTPV2 packets received with cause GRE Key Not Found.")
jnxMbgSgwPPGtpV2ICsGREKeyNtFdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 133), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsGREKeyNtFdTx.setDescription("Number of GTP packets sent with cause GRE Key Not Found.")
jnxMbgSgwPPGtpV2ICsRelocFailRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 134), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsRelocFailRx.setDescription("Number of GTPV2 packets received with cause Relocation Failed.")
jnxMbgSgwPPGtpV2ICsRelocFailTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 135), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsRelocFailTx.setDescription("Number of GTP packets sent with cause Relocation Failed.")
jnxMbgSgwPPGtpV2ICsDenINRatRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 136), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsDenINRatRx.setDescription("Number of GTPV2 packets received with cause Denied in RAT.")
jnxMbgSgwPPGtpV2ICsDenINRatTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 137), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsDenINRatTx.setDescription("Number of GTP packets sent with cause Denied in RAT.")
jnxMbgSgwPPGtpV2ICsPTNotSuppRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 138), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsPTNotSuppRx.setDescription("Number of GTPV2 packets received with cause PDN Type Not Supported.")
jnxMbgSgwPPGtpV2ICsPTNotSuppTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 139), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsPTNotSuppTx.setDescription("Number of GTP packets sent with cause PDN Type Not Supported.")
jnxMbgSgwPPGtpV2ICsAllDynAdOcRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 140), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsAllDynAdOcRx.setDescription("Number of GTPV2 packets received with cause Allocated Dynamic Address Occupied.")
jnxMbgSgwPPGtpV2ICsAllDynAdOcTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 141), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsAllDynAdOcTx.setDescription("Number of GTP packets sent with cause Allocated Dynamic Address Occupied.")
jnxMbgSgwPPGtpV2ICsNOTFTUECTXRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 142), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsNOTFTUECTXRx.setDescription("Number of GTPV2 packets received with cause UE Context Without TFT Exists.")
jnxMbgSgwPPGtpV2ICsNOTFTUECTXTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 143), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsNOTFTUECTXTx.setDescription("Number of GTP packets sent with cause UE Context Without TFT Exists.")
jnxMbgSgwPPGtpV2ICsProtoNtSupRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 144), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsProtoNtSupRx.setDescription("Number of GTPV2 packets received with cause Protocol Not Supported.")
jnxMbgSgwPPGtpV2ICsProtoNtSupTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 145), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsProtoNtSupTx.setDescription("Number of GTP packets sent with cause Protocol Not Supported.")
jnxMbgSgwPPGtpV2ICsUENotRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 146), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUENotRespRx.setDescription("Number of GTPV2 packets received with cause UE Not Responding.")
jnxMbgSgwPPGtpV2ICsUENotRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 147), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUENotRespTx.setDescription("Number of GTP packets sent with cause UE Not Responding.")
jnxMbgSgwPPGtpV2ICsUERefusesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 148), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUERefusesRx.setDescription("Number of GTPV2 packets received with cause UE Refuses.")
jnxMbgSgwPPGtpV2ICsUERefusesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 149), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUERefusesTx.setDescription("Number of GTP packets sent with cause UE Refuses.")
jnxMbgSgwPPGtpV2ICsServDeniedRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 150), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsServDeniedRx.setDescription("Number of GTPV2 packets received with cause Service Denied.")
jnxMbgSgwPPGtpV2ICsServDeniedTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 151), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsServDeniedTx.setDescription("Number of GTP packets sent with cause Service Denied.")
jnxMbgSgwPPGtpV2ICsUnabPageUERx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 152), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUnabPageUERx.setDescription("Number of GTPV2 packets received with cause Unable to Page UE.")
jnxMbgSgwPPGtpV2ICsUnabPageUETx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 153), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUnabPageUETx.setDescription("Number of GTP packets sent with cause Unable to Page UE.")
jnxMbgSgwPPGtpV2ICsNoMemRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 154), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsNoMemRx.setDescription("Number of GTPV2 packets received with cause No Memory.")
jnxMbgSgwPPGtpV2ICsNoMemTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 155), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsNoMemTx.setDescription("Number of GTP packets sent with cause No Memory.")
jnxMbgSgwPPGtpV2ICsUserAUTHFlRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 156), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUserAUTHFlRx.setDescription("Number of GTPV2 packets received with cause User AUTH Failed.")
jnxMbgSgwPPGtpV2ICsUserAUTHFlTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 157), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUserAUTHFlTx.setDescription("Number of GTP packets sent with cause User AUTH Failed.")
jnxMbgSgwPPGtpV2ICsAPNAcsDenRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 158), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsAPNAcsDenRx.setDescription("Number of GTPV2 packets received with cause APN Access Denied.")
jnxMbgSgwPPGtpV2ICsAPNAcsDenTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 159), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsAPNAcsDenTx.setDescription("Number of GTP packets sent with cause APN Access Denied.")
jnxMbgSgwPPGtpV2ICsReqRejRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 160), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsReqRejRx.setDescription("Number of GTPV2 packets received with cause Request Rejected.")
jnxMbgSgwPPGtpV2ICsReqRejTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 161), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsReqRejTx.setDescription("Number of GTP packets sent with cause Request Rejected.")
jnxMbgSgwPPGtpV2ICsPTMSISigMMRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 162), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsPTMSISigMMRx.setDescription("Number of GTPV2 packets received with cause P-TMSI Signature Mismatch.")
jnxMbgSgwPPGtpV2ICsPTMSISigMMTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 163), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsPTMSISigMMTx.setDescription("Number of GTP packets sent with cause P-TMSI Signature Mismatch.")
jnxMbgSgwPPGtpV2ICsIMSINotKnRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 164), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsIMSINotKnRx.setDescription("Number of GTPV2 packets received with cause IMSI Not Known.")
jnxMbgSgwPPGtpV2ICsIMSINotKnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 165), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsIMSINotKnTx.setDescription("Number of GTP packets sent with cause IMSI Not Known.")
jnxMbgSgwPPGtpV2ICsCondIEMsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 166), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsCondIEMsRx.setDescription("Number of GTPV2 packets received with cause Conditional IE Missing.")
jnxMbgSgwPPGtpV2ICsCondIEMsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 167), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsCondIEMsTx.setDescription("Number of GTP packets sent with cause Conditional IE Missing.")
jnxMbgSgwPPGtpV2ICsAPNResTIncRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 168), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsAPNResTIncRx.setDescription("Number of GTPV2 packets received with cause APN Restriction Type Incompatible.")
jnxMbgSgwPPGtpV2ICsAPNResTIncTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 169), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsAPNResTIncTx.setDescription("Number of GTP packets sent with cause APN Restriction Type Incompatible.")
jnxMbgSgwPPGtpV2ICsUnknownRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 170), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUnknownRx.setDescription("Number of GTPV2 packets received with cause Unknown.")
jnxMbgSgwPPGtpV2ICsUnknownTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 171), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUnknownTx.setDescription("Number of GTP packets sent with cause Unknown.")
jnxMbgSgwPPGtpV2ICsLclDetRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 172), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsLclDetRx.setDescription("Number of GTP packets received with cause Local Detach.")
jnxMbgSgwPPGtpV2ICsLclDetTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 173), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsLclDetTx.setDescription("Number of GTP packets sent with cause Local Detach.")
jnxMbgSgwPPGtpV2ICsCmpDetRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 174), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsCmpDetRx.setDescription("Number of GTP packets received with cause Complete Detach.")
jnxMbgSgwPPGtpV2ICsCmpDetTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 175), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsCmpDetTx.setDescription("Number of GTP packets sent with cause Complete Detach.")
jnxMbgSgwPPGtpV2ICsRATChgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 176), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsRATChgRx.setDescription("Number of GTP packets received with cause RAT changed from 3GPP to non 3GPP.")
jnxMbgSgwPPGtpV2ICsRATChgTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 177), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsRATChgTx.setDescription("Number of GTP packets sent with cause RAT changed from 3GPP to non 3GPP.")
jnxMbgSgwPPGtpV2ICsISRDeactRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 178), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsISRDeactRx.setDescription("Number of GTP packets received with cause ISR Deactivated.")
jnxMbgSgwPPGtpV2ICsISRDeactTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 179), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsISRDeactTx.setDescription("Number of GTP packets sent with cause ISR Deactivated.")
jnxMbgSgwPPGtpV2ICsEIFRNCEnRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 180), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsEIFRNCEnRx.setDescription("Number of GTP packets received with cause Error Indication from RNC eNodeB.")
jnxMbgSgwPPGtpV2ICsEIFRNCEnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 181), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsEIFRNCEnTx.setDescription("Number of GTP packets sent with cause Error Indication from RNC eNodeB.")
jnxMbgSgwPPGtpV2ICsSemErTADRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 182), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsSemErTADRx.setDescription("Number of GTP packets received with cause Semantic Error in TAD Operation.")
jnxMbgSgwPPGtpV2ICsSemErTADTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 183), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsSemErTADTx.setDescription("Number of GTP packets sent with cause Semantic Error in TAD Operation.")
jnxMbgSgwPPGtpV2ICsSynErTADRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 184), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsSynErTADRx.setDescription("Number of GTP packets received with cause Syntactic Error in TAD Operation.")
jnxMbgSgwPPGtpV2ICsSynErTADTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 185), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsSynErTADTx.setDescription("Number of GTP packets sent with cause Syntactic Error in TAD Operation.")
jnxMbgSgwPPGtpV2ICsRMValRcvRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 186), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsRMValRcvRx.setDescription("Number of GTP packets received with cause Reserved Message Value Received.")
jnxMbgSgwPPGtpV2ICsRMValRcvTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 187), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsRMValRcvTx.setDescription("Number of GTP packets sent with cause Reserved Message Value Received.")
jnxMbgSgwPPGtpV2ICsRPrNtRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 188), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsRPrNtRspRx.setDescription("Number of GTP packets received with cause Remote peer not responding.")
jnxMbgSgwPPGtpV2ICsRPrNtRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 189), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsRPrNtRspTx.setDescription("Number of GTP packets sent with cause Remote peer not responding.")
jnxMbgSgwPPGtpV2ICsColNWReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 190), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsColNWReqRx.setDescription("Number of GTP packets received with cause Collision with network initiated request.")
jnxMbgSgwPPGtpV2ICsColNWReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 191), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsColNWReqTx.setDescription("Number of GTP packets sent with cause Collision with network initiated request.")
jnxMbgSgwPPGtpV2ICsUnPgUESusRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 192), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUnPgUESusRx.setDescription("Number of GTP packets received with cause Unable to page UE due to suspension.")
jnxMbgSgwPPGtpV2ICsUnPgUESusTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 193), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsUnPgUESusTx.setDescription("Number of GTP packets sent with cause Unable to page UE due to suspension.")
jnxMbgSgwPPGtpV2ICsInvTotLenRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 194), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsInvTotLenRx.setDescription("Number of GTP packets received with cause Invalid total len.")
jnxMbgSgwPPGtpV2ICsInvTotLenTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 195), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsInvTotLenTx.setDescription("Number of GTP packets sent with cause Invalid total len.")
jnxMbgSgwPPGtpV2ICsDtForNtSupRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 196), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsDtForNtSupRx.setDescription("Number of GTP packets received with cause Data forwarding not supported.")
jnxMbgSgwPPGtpV2ICsDtForNtSupTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 197), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsDtForNtSupTx.setDescription("Number of GTP packets sent with cause Data forwarding not supported.")
jnxMbgSgwPPGtpV2ICsInReFRePrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 198), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsInReFRePrRx.setDescription("Number of GTP packets received with cause Invalid Reply from Remote peer.")
jnxMbgSgwPPGtpV2ICsInReFRePrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 199), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsInReFRePrTx.setDescription("Number of GTP packets sent with cause Invalid Reply from Remote peer.")
jnxMbgSgwPPGtpV2ICsInvPrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 200), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsInvPrRx.setDescription("Number of GTP packets received with cause Invalid peer.")
jnxMbgSgwPPGtpV2ICsInvPrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 201), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV2ICsInvPrTx.setDescription("Number of GTP packets sent with cause Invalid peer.")
jnxMbgSgwPPGtpV1ProtocolErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 202), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV1ProtocolErrRx.setDescription("Number of GTPv1 Protocol Errors Received.")
jnxMbgSgwPPGtpV1UnSupMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 203), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV1UnSupMsgRx.setDescription("Number of GTPv1 Unsupported Messages received.")
jnxMbgSgwPPGtpV1T3RespTmrExpRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 204), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV1T3RespTmrExpRx.setDescription("Number of GTP V1 T3 timer expiries Received.")
jnxMbgSgwPPGtpV1EndMarkerRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 205), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV1EndMarkerRx.setDescription("Number of GTP V1 end marker packets received.")
jnxMbgSgwPPGtpV1EndMarkerTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 206), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV1EndMarkerTx.setDescription("Number of GTP V1 end marker packets sent.")
jnxMbgSgwPPGtpV1EchoReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 207), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV1EchoReqRx.setDescription("Number of GTP V1 echo request packets received.")
jnxMbgSgwPPGtpV1EchoReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 208), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV1EchoReqTx.setDescription("Number of GTP iV1 echo request packets sent.")
jnxMbgSgwPPGtpV1EchoRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 209), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV1EchoRespRx.setDescription("Number of GTP V1 echo response packets received.")
jnxMbgSgwPPGtpV1EchoRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 210), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV1EchoRespTx.setDescription("Number of GTP V1 echo response packets sent.")
jnxMbgSgwPPGtpV1ErrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 211), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV1ErrIndRx.setDescription("Number of GTP V1 Error Indication packets received.")
jnxMbgSgwPPGtpV1ErrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 212), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPGtpV1ErrIndTx.setDescription("Number of GTP V1 Error Indication packets sent.")
jnxMbgSgwPPSuspNotifRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 213), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPSuspNotifRx.setDescription("Number of GTPv2 Suspend Notification messages received.")
jnxMbgSgwPPSuspNotifTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 214), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPSuspNotifTx.setDescription("Number of GTPv2 Suspend Notification messages sent.")
jnxMbgSgwPPSuspAckRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 215), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPSuspAckRx.setDescription("Number of GTPv2 Suspend Acknowledgement messages received.")
jnxMbgSgwPPSuspAckTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 216), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPSuspAckTx.setDescription("Number of GTPv2 Suspend Acknowledgement messages sent.")
jnxMbgSgwPPResumeNotifRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 217), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPResumeNotifRx.setDescription("Number of GTPv2 Resume Notification messages received.")
jnxMbgSgwPPResumeNotifTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 218), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPResumeNotifTx.setDescription("Number of GTPv2 Resume Notification messages sent.")
jnxMbgSgwPPResumeAckRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 219), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPResumeAckRx.setDescription("Number of GTPv2 Resume Acknowledgement messages received.")
jnxMbgSgwPPResumeAckTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 220), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPResumeAckTx.setDescription("Number of GTPv2 Resume Acknowledgement messages sent.")
jnxMbgSgwPPPiggybackMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 221), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPPiggybackMsgRx.setDescription("Number of GTPv2 Piggyback messages received.")
jnxMbgSgwPPPiggybackMsgTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 1, 1, 222), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPPPiggybackMsgTx.setDescription("Number of GTPv2 S11 Piggyback messages sent.")
jnxMbgSgwGtpCGlbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2))
if mibBuilder.loadTexts: jnxMbgSgwGtpCGlbStatsTable.setDescription("Each entry corresponds to a gateway level GTP Control statistic.")
jnxMbgSgwGtpGlbStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1)).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgSgwGtpGlbStatsEntry.setDescription("A specification of the GTP gateway level control Statistics.")
jnxMbgSgwRxPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwRxPacketsDropped.setDescription("Number of Received Packets Dropped.")
jnxMbgSgwPacketAllocFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPacketAllocFail.setDescription("Number of Packet allocation failures.")
jnxMbgSgwPacketSendFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPacketSendFail.setDescription("Number of Packet Send failures.")
jnxMbgSgwIPVerErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIPVerErrRx.setDescription("Number of IP Version Error Packets Received.")
jnxMbgSgwIPProtoErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIPProtoErrRx.setDescription("Number of IP protocol Error packets Received.")
jnxMbgSgwGTPPortErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGTPPortErrRx.setDescription("Number of  Port Error Packets Received.")
jnxMbgSgwGTPUnknVerRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGTPUnknVerRx.setDescription("Number of  Unknown Version Packets Received.")
jnxMbgSgwPcktLenErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPcktLenErrRx.setDescription("Number of Packet Length Error Packets Received.")
jnxMbgSgwUnknMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwUnknMsgRx.setDescription("Number of  Unknown Messages Received.")
jnxMbgSgwProtocolErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwProtocolErrRx.setDescription("Number of GTPv2 Protocol Errors Received.")
jnxMbgSgwUnSupportedMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwUnSupportedMsgRx.setDescription("Number of GTPv2 Unsupported Messages received.")
jnxMbgSgwT3RespTmrExpRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwT3RespTmrExpRx.setDescription("Number of GTP V2 T3 timer expiries Received.")
jnxMbgSgwV2NumMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwV2NumMsgRx.setDescription("Number of GTPv2 messages received.")
jnxMbgSgwV2NumMsgTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwV2NumMsgTx.setDescription("Number of V2 messages sent.")
jnxMbgSgwV2NumBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwV2NumBytesRx.setDescription("Number of GTPv2 bytes received.")
jnxMbgSgwV2NumBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwV2NumBytesTx.setDescription("Number of V2 bytes sent.")
jnxMbgSgwV2EchoReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwV2EchoReqRx.setDescription("Number of GTP V2 Echo Request received.")
jnxMbgSgwV2EchoReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwV2EchoReqTx.setDescription("Number of GTP V2 Echo Request Sent.")
jnxMbgSgwV2EchoRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwV2EchoRespRx.setDescription("Number of GTP V2 Echo Response received.")
jnxMbgSgwV2EchoRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwV2EchoRespTx.setDescription("Number of GTP V2 Echo Response Sent.")
jnxMbgSgwV2VerNotSupRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwV2VerNotSupRx.setDescription("Number of GTP V2 Version Not supported messages received")
jnxMbgSgwV2VerNotSupTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwV2VerNotSupTx.setDescription("Number of GTP V2 version not supported messages sent.")
jnxMbgSgwCreateSessReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCreateSessReqRx.setDescription("Number of GTP V2 Create Session Requests received.")
jnxMbgSgwCreateSessReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCreateSessReqTx.setDescription("Number of GTP V2 Create Session Requests Sent.")
jnxMbgSgwCreateSessRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCreateSessRspRx.setDescription("Number of GTP V2 Create Session Responses received.")
jnxMbgSgwCreateSessRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCreateSessRspTx.setDescription("Number of GTP V2 Create Session Responses Sent.")
jnxMbgSgwModBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwModBrReqRx.setDescription("Number of GTP V2 Modify Bearer Requests received.")
jnxMbgSgwModBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwModBrReqTx.setDescription("Number of GTP V2 Modify Bearer Requests Sent.")
jnxMbgSgwModBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwModBrRspRx.setDescription("Number of GTP V2 Modify Bearer Responses received.")
jnxMbgSgwModBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwModBrRspTx.setDescription("Number of GTP V2 Modify Bearer Responses Sent.")
jnxMbgSgwDelSessReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelSessReqRx.setDescription("Number of GTP V2 Delete Session Requests received.")
jnxMbgSgwDelSessReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelSessReqTx.setDescription("Number of GTP V2 Delete Session Requests Sent.")
jnxMbgSgwDelSessRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelSessRspRx.setDescription("Number of GTP V2 Delete Session Responses received.")
jnxMbgSgwDelSessRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelSessRspTx.setDescription("Number of GTP V2 Delete Session Responses Sent.")
jnxMbgSgwCrtBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCrtBrReqRx.setDescription("Number of GTP V2 Create Bearer Requests received.")
jnxMbgSgwCrtBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCrtBrReqTx.setDescription("Number of GTP V2 Create Bearer Requests Sent.")
jnxMbgSgwCrtBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCrtBrRspRx.setDescription("Number of GTP V2 Create Bearer Response received.")
jnxMbgSgwCrtBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCrtBrRspTx.setDescription("Number of GTP V2 Create Bearer Response Sent.")
jnxMbgSgwUpdBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwUpdBrReqRx.setDescription("Number of GTP V2 Update Bearer Request received.")
jnxMbgSgwUpdBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwUpdBrReqTx.setDescription("Number of GTP V2 Update Bearer Request Sent.")
jnxMbgSgwUpdBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwUpdBrRspRx.setDescription("Number of GTP V2 Update Bearer Response received.")
jnxMbgSgwUpdBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwUpdBrRspTx.setDescription("Number of GTP V2 Update Bearer Response Sent.")
jnxMbgSgwDelBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelBrReqRx.setDescription("Number of GTP V2 Delete Bearer Request received.")
jnxMbgSgwDelBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelBrReqTx.setDescription("Number of GTP V2 Delete Bearer Request Sent.")
jnxMbgSgwDelBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelBrRspRx.setDescription("Number of GTP V2 Delete Bearer Response received.")
jnxMbgSgwDelBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelBrRspTx.setDescription("Number of GTP V2 Delete Bearer Response Sent.")
jnxMbgSgwDelConnSetReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelConnSetReqRx.setDescription("Number of GTP V2 Delete PDN connection set Request received.")
jnxMbgSgwDelConnSetReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelConnSetReqTx.setDescription("Number of GTP V2 Delete PDN connection set Request Sent.")
jnxMbgSgwDelConnSetRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelConnSetRspRx.setDescription("Number of GTP V2 Delete PDN connection set Response received.")
jnxMbgSgwDelConnSetRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelConnSetRspTx.setDescription("Number of GTP V2 Delete PDN connection set Response Sent.")
jnxMbgSgwUpdConnSetReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwUpdConnSetReqRx.setDescription("Number of GTP V2 Update Connection set Request received.")
jnxMbgSgwUpdConnSetReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwUpdConnSetReqTx.setDescription("Number of GTP V2 Update Connection set Request Sent.")
jnxMbgSgwUpdConnSetRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwUpdConnSetRspRx.setDescription("Number of GTP V2 Update Connection set Response received.")
jnxMbgSgwUpdConnSetRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwUpdConnSetRspTx.setDescription("Number of GTP V2 Update Connection set Response Sent.")
jnxMbgSgwModBrCmdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwModBrCmdRx.setDescription("Number of GTP V2 Modify Bearer Command received.")
jnxMbgSgwModBrCmdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwModBrCmdTx.setDescription("Number of GTP V2 Modify Bearer Command Sent.")
jnxMbgSgwModBrFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwModBrFlrIndRx.setDescription("Number of GTP V2 Modify Bearer Failure received.")
jnxMbgSgwModBrFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwModBrFlrIndTx.setDescription("Number of GTP V2 Modify Bearer Failure Sent.")
jnxMbgSgwDelBrCmdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelBrCmdRx.setDescription("Number of GTP V2 Delete Bearer Command received.")
jnxMbgSgwDelBrCmdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelBrCmdTx.setDescription("Number of GTP V2 Delete Bearer Command Sent.")
jnxMbgSgwDelBrFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelBrFlrIndRx.setDescription("Number of GTP V2 Delete Bearer Failure received.")
jnxMbgSgwDelBrFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelBrFlrIndTx.setDescription("Number of GTP V2 Delete Bearer Failure Sent.")
jnxMbgSgwBrResCmdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwBrResCmdRx.setDescription("Number of GTP V2 Bearer Response Command received.")
jnxMbgSgwBrResCmdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwBrResCmdTx.setDescription("Number of GTP V2 Bearer Response Command Sent.")
jnxMbgSgwBrResFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwBrResFlrIndRx.setDescription("Number of GTP V2 Bearer Resource Failure received.")
jnxMbgSgwBrResFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwBrResFlrIndTx.setDescription("Number of GTP V2 Bearer Resource Failure Sent.")
jnxMbgSgwRelAcsBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwRelAcsBrReqRx.setDescription("Number of GTP V2 Release Access Bearer Requests received.")
jnxMbgSgwRelAcsBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwRelAcsBrReqTx.setDescription("Number of GTP V2 Release Access Bearer Requests sent.")
jnxMbgSgwRelAcsBrRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwRelAcsBrRespRx.setDescription("Number of GTP V2 Release Access Bearer Response received.")
jnxMbgSgwRelAcsBrRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwRelAcsBrRespTx.setDescription("Number of GTP V2 Release Access Bearer Response sent.")
jnxMbgSgwCrIndTunReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCrIndTunReqRx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Request Received")
jnxMbgSgwCrIndTunReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCrIndTunReqTx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Request sent")
jnxMbgSgwCrIndTunRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCrIndTunRespRx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Response Received")
jnxMbgSgwCrIndTunRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCrIndTunRespTx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Response sent")
jnxMbgSgwDelIndTunReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelIndTunReqRx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Request Received")
jnxMbgSgwDelIndTunReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelIndTunReqTx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Request sent.")
jnxMbgSgwDelIndTunRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 79), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelIndTunRespRx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Response Received")
jnxMbgSgwDelIndTunRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDelIndTunRespTx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Response sent.")
jnxMbgSgwDlDataNotifRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDlDataNotifRx.setDescription("Number of GTP V2 Downlink Data Notify received.")
jnxMbgSgwDlDataNotifTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDlDataNotifTx.setDescription("Number of GTP V2 Downlink Data Notify Sent.")
jnxMbgSgwDlDataAckRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDlDataAckRx.setDescription("Number of GTP V2 Downlink Data Notify Acknowledgement received.")
jnxMbgSgwDlDataAckTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDlDataAckTx.setDescription("Number of GTP V2 Downlink Data Notify Acknowledgement Sent.")
jnxMbgSgwDlDataNotiFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDlDataNotiFlrIndRx.setDescription("Number of GTP V2 Downlink Data Notification fail received.")
jnxMbgSgwDlDataNotiFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 86), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDlDataNotiFlrIndTx.setDescription("Number of GTP V2 Downlink Data Notification fail Sent.")
jnxMbgSgwStopPagingIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 87), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwStopPagingIndRx.setDescription("Number of GTP V2 Number of Stop Paging Indication Messages Received.")
jnxMbgSgwStopPagingIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 88), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwStopPagingIndTx.setDescription("Number of GTP V2 Number of Stop Paging Indicaton messages sent")
jnxMbgSgwGtpV2ICsPageRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 89), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsPageRx.setDescription("Number of GTPV2 packets received with cause Page.")
jnxMbgSgwGtpV2ICsPageTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsPageTx.setDescription("Number of GTP packets sent with cause Page.")
jnxMbgSgwGtpV2ICsReqAcceptRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 91), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsReqAcceptRx.setDescription("Number of GTPV2 packets received with cause Request Accept.")
jnxMbgSgwGtpV2ICsReqAcceptTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 92), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsReqAcceptTx.setDescription("Number of GTP packets sent with cause Request Accept.")
jnxMbgSgwGtpV2ICsAcceptPartRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 93), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsAcceptPartRx.setDescription("Number of GTPV2 packets received with cause Accept Partial.")
jnxMbgSgwGtpV2ICsAcceptPartTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 94), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsAcceptPartTx.setDescription("Number of GTP packets sent with cause Accept Partial.")
jnxMbgSgwGtpV2ICsNewPTNPrefRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 95), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsNewPTNPrefRx.setDescription("Number of GTPV2 packets received with cause New PDN type due to Network Preference.")
jnxMbgSgwGtpV2ICsNewPTNPrefTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 96), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsNewPTNPrefTx.setDescription("Number of GTP packets sent with cause New PDN type due to Network Preference")
jnxMbgSgwGtpV2ICsNewPTSIAdbrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 97), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsNewPTSIAdbrRx.setDescription("Number of GTPV2 packets received with cause New PDN type due to Single Address Bearer.")
jnxMbgSgwGtpV2ICsNewPTSIAdbrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 98), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsNewPTSIAdbrTx.setDescription("Number of GTP packets sent with cause New PDN type due to Single Address Bearer.")
jnxMbgSgwGtpV2ICsCtxNotFndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 99), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsCtxNotFndRx.setDescription("Number of GTPV2 packets received with cause Context not found.")
jnxMbgSgwGtpV2ICsCtxNotFndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 100), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsCtxNotFndTx.setDescription("Number of GTP packets sent with cause Context not found.")
jnxMbgSgwGtpV2ICsInvMsgFmtRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 101), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsInvMsgFmtRx.setDescription("Number of GTPV2 packets received with cause Invalid Message Format.")
jnxMbgSgwGtpV2ICsInvMsgFmtTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 102), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsInvMsgFmtTx.setDescription("Number of GTP packets sent with cause Invalid Message Format.")
jnxMbgSgwGtpV2ICsVerNotSuppRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 103), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsVerNotSuppRx.setDescription("Number of GTPV2 packets received with cause Version not Supported.")
jnxMbgSgwGtpV2ICsVerNotSuppTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 104), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsVerNotSuppTx.setDescription("Number of GTP packets sent with cause Version not Supported.")
jnxMbgSgwGtpV2ICsInvLenRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 105), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsInvLenRx.setDescription("Number of GTPV2 packets received with cause Invalid Length.")
jnxMbgSgwGtpV2ICsInvLenTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 106), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsInvLenTx.setDescription("Number of GTP packets sent with cause Invalid Length.")
jnxMbgSgwGtpV2ICsServNotSuppRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 107), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsServNotSuppRx.setDescription("Number of GTPV2 packets received with cause Service Not supported.")
jnxMbgSgwGtpV2ICsServNotSuppTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 108), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsServNotSuppTx.setDescription("Number of GTP packets sent with cause Service Not supported.")
jnxMbgSgwGtpV2ICsManIEIncorrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 109), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsManIEIncorrRx.setDescription("Number of GTPV2 packets received with cause Mandatory IE incorrect.")
jnxMbgSgwGtpV2ICsManIEIncorrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 110), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsManIEIncorrTx.setDescription("Number of GTP packets sent with cause Mandatory IE incorrect.")
jnxMbgSgwGtpV2ICsManIEMissRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 111), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsManIEMissRx.setDescription("Number of GTPV2 packets received with cause Mandatory IE Missing.")
jnxMbgSgwGtpV2ICsManIEMissTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 112), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsManIEMissTx.setDescription("Number of GTP packets sent with cause Mandatory IE Missing.")
jnxMbgSgwGtpV2ICsOptIEIncorrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 113), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsOptIEIncorrRx.setDescription("Number of GTPV2 packets received with cause Optional IE Incorrect.")
jnxMbgSgwGtpV2ICsOptIEIncorrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 114), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsOptIEIncorrTx.setDescription("Number of GTP packets sent with cause Optional IE Incorrect.")
jnxMbgSgwGtpV2ICsSysFailRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 115), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsSysFailRx.setDescription("Number of GTPV2 packets received with cause System Failure.")
jnxMbgSgwGtpV2ICsSysFailTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 116), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsSysFailTx.setDescription("Number of GTP packets sent with cause System Failure.")
jnxMbgSgwGtpV2ICsNoResRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 117), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsNoResRx.setDescription("Number of GTPV2 packets received with cause No Resource.")
jnxMbgSgwGtpV2ICsNoResTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 118), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsNoResTx.setDescription("Number of GTP packets sent with cause No Resource.")
jnxMbgSgwGtpV2ICsTFTSMANTErRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 119), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsTFTSMANTErRx.setDescription("Number of GTPV2 packets received with cause TFT Symantic Error.")
jnxMbgSgwGtpV2ICsTFTSMANTErTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 120), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsTFTSMANTErTx.setDescription("Number of GTP packets sent with cause TFT Symantic Error.")
jnxMbgSgwGtpV2ICsTFTSysErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 121), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsTFTSysErrRx.setDescription("Number of GTPV2 packets received with cause TFT System Error.")
jnxMbgSgwGtpV2ICsTFTSysErrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 122), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsTFTSysErrTx.setDescription("Number of GTP packets sent with cause TFT System Error.")
jnxMbgSgwGtpV2ICsPkFltManErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 123), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsPkFltManErrRx.setDescription("Number of GTPV2 packets received with cause Packet Filter Symantic Error.")
jnxMbgSgwGtpV2ICsPkFltManErrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 124), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsPkFltManErrTx.setDescription("Number of GTP packets sent with cause Packet Filter Symantic Error.")
jnxMbgSgwGtpV2ICsPkFltSynErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 125), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsPkFltSynErrRx.setDescription("Number of GTPV2 packets received with cause Packet Filter Syntax Error.")
jnxMbgSgwGtpV2ICsPkFltSynErrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 126), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsPkFltSynErrTx.setDescription("Number of GTP packets sent with cause Packet Filter Syntax Error.")
jnxMbgSgwGtpV2ICsMisUnknAPNRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 127), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsMisUnknAPNRx.setDescription("Number of GTPV2 packets received with cause Unknown APN.")
jnxMbgSgwGtpV2ICsMisUnknAPNTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 128), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsMisUnknAPNTx.setDescription("Number of GTP packets sent with cause Unknown APN.")
jnxMbgSgwGtpV2ICsUnexpRptIERx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 129), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUnexpRptIERx.setDescription("Number of GTPV2 packets received with cause Unexpected Repeated IE.")
jnxMbgSgwGtpV2ICsUnexpRptIETx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 130), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUnexpRptIETx.setDescription("Number of GTP packets sent with cause Unexpected Repeated IE.")
jnxMbgSgwGtpV2ICsGREKeyNtFdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 131), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsGREKeyNtFdRx.setDescription("Number of GTPV2 packets received with cause GRE Key Not Found.")
jnxMbgSgwGtpV2ICsGREKeyNtFdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 132), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsGREKeyNtFdTx.setDescription("Number of GTP packets sent with cause GRE Key Not Found.")
jnxMbgSgwGtpV2ICsRelocFailRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 133), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsRelocFailRx.setDescription("Number of GTPV2 packets received with cause Relocation Failed.")
jnxMbgSgwGtpV2ICsRelocFailTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 134), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsRelocFailTx.setDescription("Number of GTP packets sent with cause Relocation Failed.")
jnxMbgSgwGtpV2ICsDeniedINRatRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 135), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsDeniedINRatRx.setDescription("Number of GTPV2 packets received with cause Denied in RAT.")
jnxMbgSgwGtpV2ICsDeniedINRatTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 136), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsDeniedINRatTx.setDescription("Number of GTP packets sent with cause Denied in RAT.")
jnxMbgSgwGtpV2ICsPTNotSuppRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 137), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsPTNotSuppRx.setDescription("Number of GTPV2 packets received with cause PDN Type Not Supported.")
jnxMbgSgwGtpV2ICsPTNotSuppTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 138), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsPTNotSuppTx.setDescription("Number of GTP packets sent with cause PDN Type Not Supported.")
jnxMbgSgwGtpV2ICsAllDynAdOccRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 139), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsAllDynAdOccRx.setDescription("Number of GTPV2 packets received with cause Allocated Dynamic Address Occupied.")
jnxMbgSgwGtpV2ICsAllDynAdOccTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 140), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsAllDynAdOccTx.setDescription("Number of GTP packets sent with cause Allocated Dynamic Address Occupied.")
jnxMbgSgwGtpV2ICsNOTFTUECTXRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 141), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsNOTFTUECTXRx.setDescription("Number of GTPV2 packets received with cause UE Context Without TFT Exists.")
jnxMbgSgwGtpV2ICsNOTFTUECTXTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 142), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsNOTFTUECTXTx.setDescription("Number of GTP packets sent with cause UE Context Without TFT Exists.")
jnxMbgSgwGtpV2ICsProtoNtSupRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 143), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsProtoNtSupRx.setDescription("Number of GTPV2 packets received with cause Protocol Not Supported.")
jnxMbgSgwGtpV2ICsProtoNtSupTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 144), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsProtoNtSupTx.setDescription("Number of GTP packets sent with cause Protocol Not Supported.")
jnxMbgSgwGtpV2ICsUENotRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 145), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUENotRespRx.setDescription("Number of GTPV2 packets received with cause UE Not Responding.")
jnxMbgSgwGtpV2ICsUENotRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 146), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUENotRespTx.setDescription("Number of GTP packets sent with cause UE Not Responding.")
jnxMbgSgwGtpV2ICsUERefusesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 147), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUERefusesRx.setDescription("Number of GTPV2 packets received with cause UE Refuses.")
jnxMbgSgwGtpV2ICsUERefusesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 148), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUERefusesTx.setDescription("Number of GTP packets sent with cause UE Refuses.")
jnxMbgSgwGtpV2ICsServDeniedRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 149), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsServDeniedRx.setDescription("Number of GTPV2 packets received with cause Service Denied.")
jnxMbgSgwGtpV2ICsServDeniedTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 150), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsServDeniedTx.setDescription("Number of GTP packets sent with cause Service Denied.")
jnxMbgSgwGtpV2ICsUnabPageUERx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 151), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUnabPageUERx.setDescription("Number of GTPV2 packets received with cause Unable to Page UE.")
jnxMbgSgwGtpV2ICsUnabPageUETx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 152), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUnabPageUETx.setDescription("Number of GTP packets sent with cause Unable to Page UE.")
jnxMbgSgwGtpV2ICsNoMemRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 153), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsNoMemRx.setDescription("Number of GTPV2 packets received with cause No Memory.")
jnxMbgSgwGtpV2ICsNoMemTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 154), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsNoMemTx.setDescription("Number of GTP packets sent with cause No Memory.")
jnxMbgSgwGtpV2ICsUserAUTHFlRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 155), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUserAUTHFlRx.setDescription("Number of GTPV2 packets received with cause User AUTH Failed.")
jnxMbgSgwGtpV2ICsUserAUTHFlTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 156), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUserAUTHFlTx.setDescription("Number of GTP packets sent with cause User AUTH Failed.")
jnxMbgSgwGtpV2ICsAPNAcsDenRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 157), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsAPNAcsDenRx.setDescription("Number of GTPV2 packets received with cause APN Access Denied.")
jnxMbgSgwGtpV2ICsAPNAcsDenTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 158), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsAPNAcsDenTx.setDescription("Number of GTP packets sent with cause APN Access Denied.")
jnxMbgSgwGtpV2ICsReqRejRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 159), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsReqRejRx.setDescription("Number of GTPV2 packets received with cause Request Rejected.")
jnxMbgSgwGtpV2ICsReqRejTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 160), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsReqRejTx.setDescription("Number of GTP packets sent with cause Request Rejected.")
jnxMbgSgwGtpV2ICsPTMSISigMMRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 161), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsPTMSISigMMRx.setDescription("Number of GTPV2 packets received with cause P-TMSI Signature Mismatch.")
jnxMbgSgwGtpV2ICsPTMSISigMMTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 162), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsPTMSISigMMTx.setDescription("Number of GTP packets sent with cause P-TMSI Signature Mismatch")
jnxMbgSgwGtpV2ICsIMSINotKnRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 163), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsIMSINotKnRx.setDescription("Number of GTPV2 packets received with cause IMSI Not Known.")
jnxMbgSgwGtpV2ICsIMSINotKnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 164), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsIMSINotKnTx.setDescription("Number of GTP packets sent with cause IMSI Not Known.")
jnxMbgSgwGtpV2ICsCondIEMsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 165), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsCondIEMsRx.setDescription("Number of GTPV2 packets received with cause Conditional IE Missing.")
jnxMbgSgwGtpV2ICsCondIEMsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 166), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsCondIEMsTx.setDescription("Number of GTP packets sent with cause Conditional IE Missing.")
jnxMbgSgwGtpV2ICsAPNResTIncRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 167), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsAPNResTIncRx.setDescription("Number of GTPV2 packets received with cause APN Restriction Type Incompatible.")
jnxMbgSgwGtpV2ICsAPNResTIncTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 168), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsAPNResTIncTx.setDescription("Number of GTP packets sent with cause APN Restriction Type Incompatible.")
jnxMbgSgwGtpV2ICsUnknownRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 169), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUnknownRx.setDescription("Number of GTPV2 packets received with cause Unknown.")
jnxMbgSgwGtpV2ICsUnknownTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 170), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUnknownTx.setDescription("Number of GTP packets sent with cause Unknown.")
jnxMbgSgwGtpV2ICsLclDetRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 171), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsLclDetRx.setDescription("Number of GTP packets received with cause Local Detach.")
jnxMbgSgwGtpV2ICsLclDetTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 172), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsLclDetTx.setDescription("Number of GTP packets sent with cause Local Detach.")
jnxMbgSgwGtpV2ICsCmpDetRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 173), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsCmpDetRx.setDescription("Number of GTP packets received with cause Complete Detach.")
jnxMbgSgwGtpV2ICsCmpDetTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 174), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsCmpDetTx.setDescription("Number of GTP packets sent with cause Complete Detach.")
jnxMbgSgwGtpV2ICsRATChgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 175), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsRATChgRx.setDescription("Number of GTP packets received with cause RAT changed from 3GPP to non 3GPP.")
jnxMbgSgwGtpV2ICsRATChgTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 176), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsRATChgTx.setDescription("Number of GTP packets sent with cause RAT changed from 3GPP to non 3GPP.")
jnxMbgSgwGtpV2ICsISRDeactRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 177), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsISRDeactRx.setDescription("Number of GTP packets received with cause ISR Deactivated.")
jnxMbgSgwGtpV2ICsISRDeactTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 178), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsISRDeactTx.setDescription("Number of GTP packets sent with cause ISR Deactivated.")
jnxMbgSgwGtpV2ICsEIFRNCEnRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 179), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsEIFRNCEnRx.setDescription("Number of GTP packets received with cause Error Indication from RNC eNodeB.")
jnxMbgSgwGtpV2ICsEIFRNCEnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 180), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsEIFRNCEnTx.setDescription("Number of GTP packets sent with cause Error Indication from RNC eNodeB.")
jnxMbgSgwGtpV2ICsSemErTADRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 181), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsSemErTADRx.setDescription("Number of GTP packets received with cause Semantic Error in TAD Operation.")
jnxMbgSgwGtpV2ICsSemErTADTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 182), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsSemErTADTx.setDescription("Number of GTP packets sent with cause Semantic Error in TAD Operation.")
jnxMbgSgwGtpV2ICsSynErTADRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 183), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsSynErTADRx.setDescription("Number of GTP packets received with cause Syntactic Error in TAD Operation.")
jnxMbgSgwGtpV2ICsSynErTADTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 184), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsSynErTADTx.setDescription("Number of GTP packets sent with cause Syntactic Error in TAD Operation.")
jnxMbgSgwGtpV2ICsRMValRcvRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 185), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsRMValRcvRx.setDescription("Number of GTP packets received with cause Reserved Message Value Received.")
jnxMbgSgwGtpV2ICsRMValRcvTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 186), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsRMValRcvTx.setDescription("Number of GTP packets sent with cause Reserved Message Value Received.")
jnxMbgSgwGtpV2ICsRPrNtRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 187), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsRPrNtRspRx.setDescription("Number of GTP packets received with cause Remote peer not responding.")
jnxMbgSgwGtpV2ICsRPrNtRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 188), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsRPrNtRspTx.setDescription("Number of GTP packets sent with cause Remote peer not responding.")
jnxMbgSgwGtpV2ICsColNWReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 189), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsColNWReqRx.setDescription("Number of GTP packets received with cause Collision with network initiated request.")
jnxMbgSgwGtpV2ICsColNWReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 190), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsColNWReqTx.setDescription("Number of GTP packets sent with cause Collision with network initiated request.")
jnxMbgSgwGtpV2ICsUnPgUESusRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 191), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUnPgUESusRx.setDescription("Number of GTP packets received with cause Unable to page UE due to suspension.")
jnxMbgSgwGtpV2ICsUnPgUESusTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 192), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsUnPgUESusTx.setDescription("Number of GTP packets sent with cause Unable to page UE due to suspension.")
jnxMbgSgwGtpV2ICsInvTotLenRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 193), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsInvTotLenRx.setDescription("Number of GTP packets received with cause Invalid total len.")
jnxMbgSgwGtpV2ICsInvTotLenTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 194), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsInvTotLenTx.setDescription("Number of GTP packets sent with cause Invalid total len.")
jnxMbgSgwGtpV2ICsDtForNtSupRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 195), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsDtForNtSupRx.setDescription("Number of GTP packets received with cause Data forwarding not supported.")
jnxMbgSgwGtpV2ICsDtForNtSupTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 196), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsDtForNtSupTx.setDescription("Number of GTP packets sent with cause Data forwarding not supported.")
jnxMbgSgwGtpV2ICsInReFRePrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 197), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsInReFRePrRx.setDescription("Number of GTP packets received with cause Invalid Reply from Remote peer.")
jnxMbgSgwGtpV2ICsInReFRePrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 198), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsInReFRePrTx.setDescription("Number of GTP packets sent with cause Invalid Reply from Remote peer.")
jnxMbgSgwGtpV2ICsInvPrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 199), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsInvPrRx.setDescription("Number of GTP packets received with cause Invalid peer.")
jnxMbgSgwGtpV2ICsInvPrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 200), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV2ICsInvPrTx.setDescription("Number of GTP packets sent with cause Invalid peer.")
jnxMbgSgwGtpV1ProtocolErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 201), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV1ProtocolErrRx.setDescription("Number of GTPv1 Protocol Errors Received.")
jnxMbgSgwGtpV1UnSupMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 202), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV1UnSupMsgRx.setDescription("Number of GTPv1 Unsupported Messages received.")
jnxMbgSgwGtpV1T3RespTmrExpRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 203), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV1T3RespTmrExpRx.setDescription("Number of GTP V1 T3 timer expiries Received.")
jnxMbgSgwGtpV1EndMarkerRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 204), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV1EndMarkerRx.setDescription("Number of GTP V1 end marker packets received.")
jnxMbgSgwGtpV1EndMarkerTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 205), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV1EndMarkerTx.setDescription("Number of GTP V1 end marker packets sent.")
jnxMbgSgwGtpV1EchoReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 206), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV1EchoReqRx.setDescription("Number of GTP V1 echo request packets received.")
jnxMbgSgwGtpV1EchoReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 207), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV1EchoReqTx.setDescription("Number of GTP V1 echo request packets sent.")
jnxMbgSgwGtpV1EchoRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 208), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV1EchoRespRx.setDescription("Number of GTP V1 echo response packets received.")
jnxMbgSgwGtpV1EchoRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 209), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV1EchoRespTx.setDescription("Number of GTP V1 echo response packets sent.")
jnxMbgSgwGtpV1ErrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 210), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV1ErrIndRx.setDescription("Number of GTP V1 Error Indication packets received.")
jnxMbgSgwGtpV1ErrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 211), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpV1ErrIndTx.setDescription("Number of GTP V1 Error Indication packets sent.")
jnxMbgSgwSuspNotifRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 212), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuspNotifRx.setDescription("Number of GTPv2 Suspend Notification messages received.")
jnxMbgSgwSuspNotifTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 213), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuspNotifTx.setDescription("Number of GTPv2 Suspend Notification messages sent.")
jnxMbgSgwSuspAckRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 214), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuspAckRx.setDescription("Number of GTPv2 Suspend Acknowledgement messages received.")
jnxMbgSgwSuspAckTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 215), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuspAckTx.setDescription("Number of GTPv2 Suspend Acknowledgement messages sent.")
jnxMbgSgwResumeNotifRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 216), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwResumeNotifRx.setDescription("Number of GTPv2 Resume Notification messages received.")
jnxMbgSgwResumeNotifTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 217), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwResumeNotifTx.setDescription("Number of GTPv2 Resume Notification messages sent.")
jnxMbgSgwResumeAckRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 218), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwResumeAckRx.setDescription("Number of GTPv2 Resume Acknowledgement messages received.")
jnxMbgSgwResumeAckTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 219), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwResumeAckTx.setDescription("Number of GTPv2 Resume Acknowledgement messages sent.")
jnxMbgSgwS11PiggybackMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 220), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwS11PiggybackMsgRx.setDescription("Number of GTPv2 S11 Piggyback messages received.")
jnxMbgSgwS11PiggybackMsgTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 221), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwS11PiggybackMsgTx.setDescription("Number of GTPv2 S11 Piggyback messages sent.")
jnxMbgSgwS4PiggybackMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 222), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwS4PiggybackMsgRx.setDescription("Number of GTPv2 S4 Piggyback messages received.")
jnxMbgSgwS4PiggybackMsgTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 223), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwS4PiggybackMsgTx.setDescription("Number of GTPv2 S4 Piggyback messages sent.")
jnxMbgSgwS5PiggybackMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 224), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwS5PiggybackMsgRx.setDescription("Number of GTPv2 S5 Piggyback messages received.")
jnxMbgSgwS5PiggybackMsgTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 2, 1, 225), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwS5PiggybackMsgTx.setDescription("Number of GTPv2 S5 Piggyback messages sent.")
jnxMbgSgwGtpNotificationVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 3))
jnxMbgSgwGtpPeerName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 3, 1), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpPeerName.setDescription("GTP Peer Name/IP")
jnxMbgSgwGtpAlarmStatCounter = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 3, 2), Unsigned32()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpAlarmStatCounter.setDescription("Current Value of (Alarm) Statistics Counter\neg: in jnxMbgSgwGtpPrDNTPerPrAlrmActv it spefies the number\n    of times peer is down with in the monitoring interval")
jnxMbgSgwGtpInterfaceType = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 3, 3), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpInterfaceType.setDescription("GTP Interface Type which can be one of S5/S8/S11/S1U/S12/S4")
jnxMbgSgwGtpGwName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 3, 4), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpGwName.setDescription("A string that indicates the gateway name")
jnxMbgSgwGtpGwIndex = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 3, 5), Unsigned32()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpGwIndex.setDescription("Current Gateway ID value")
jnxMbgSgwGtpIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4))
if mibBuilder.loadTexts: jnxMbgSgwGtpIfStatsTable.setDescription("Each entry corresponds to an interface level GTP statistic.")
jnxMbgSgwGtpIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1)).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), (0, "JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwIfIndex"))
if mibBuilder.loadTexts: jnxMbgSgwGtpIfStatsEntry.setDescription("A specification of the GTP interface level control Statistics.")
jnxMbgSgwIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 1), Unsigned32()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxMbgSgwIfIndex.setDescription("GTP Interface Index")
jnxMbgSgwIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfType.setDescription("Interface Name.")
jnxMbgSgwIfRxPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfRxPacketsDropped.setDescription("Number of Received GTP Packets Dropped by the Gateway.")
jnxMbgSgwIfPacketAllocFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfPacketAllocFail.setDescription("Number of Packet allocation failures in the Gateway.")
jnxMbgSgwIfPacketSendFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfPacketSendFail.setDescription("Number of GTP Packet Send failures in the Gateway.")
jnxMbgSgwIfIPVerErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfIPVerErrRx.setDescription("Number of IP Version Error Packets Received.")
jnxMbgSgwIfIPProtoErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfIPProtoErrRx.setDescription("Number of  IP Protocol Error packets Received.")
jnxMbgSgwIfGTPPortErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGTPPortErrRx.setDescription("Number of  Port Error Packets Received.")
jnxMbgSgwIfGTPUnknVerRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGTPUnknVerRx.setDescription("Number of  Unknown Version Packets Received.")
jnxMbgSgwIfPcktLenErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfPcktLenErrRx.setDescription("Number of Packet Length Error Packets Received.")
jnxMbgSgwIfUnknMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfUnknMsgRx.setDescription("Number of  Unknown Messages Received.")
jnxMbgSgwIfProtocolErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfProtocolErrRx.setDescription("Number of GTPv2 Protocol Errors Received.")
jnxMbgSgwIfUnSupportedMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfUnSupportedMsgRx.setDescription("Number of GTPv2 Unsupported Messages received.")
jnxMbgSgwIfT3RespTmrExpRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfT3RespTmrExpRx.setDescription("Number of GTP V2 T3 timer expiries Received.")
jnxMbgSgwIfV2NumMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfV2NumMsgRx.setDescription("Number of GTPv2 messages received.")
jnxMbgSgwIfV2NumMsgTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfV2NumMsgTx.setDescription("Number of V2 messages sent.")
jnxMbgSgwIfV2NumBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfV2NumBytesRx.setDescription("Number of GTPv2 bytes received.")
jnxMbgSgwIfV2NumBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfV2NumBytesTx.setDescription("Number of V2 bytes sent.")
jnxMbgSgwIfV2EchoReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfV2EchoReqRx.setDescription("Number of GTP V2 Echo Request received.")
jnxMbgSgwIfV2EchoReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfV2EchoReqTx.setDescription("Number of GTP V2 Echo Request Sent.")
jnxMbgSgwIfV2EchoRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfV2EchoRespRx.setDescription("Number of GTP V2 Echo Response received.")
jnxMbgSgwIfV2EchoRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfV2EchoRespTx.setDescription("Number of GTP V2 Echo Response Sent.")
jnxMbgSgwIfV2VerNotSupRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfV2VerNotSupRx.setDescription("Number of GTP V2 Version Not supported messages received")
jnxMbgSgwIfV2VerNotSupTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfV2VerNotSupTx.setDescription("Number of GTP V2 version not supported messages sent.")
jnxMbgSgwIfCreateSessReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCreateSessReqRx.setDescription("Number of GTP V2 Create Session Requests received.")
jnxMbgSgwIfCreateSessReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCreateSessReqTx.setDescription("Number of GTP V2 Create Session Requests Sent.")
jnxMbgSgwIfCreateSessRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCreateSessRspRx.setDescription("Number of GTP V2 Create Session Responses received.")
jnxMbgSgwIfCreateSessRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCreateSessRspTx.setDescription("Number of GTP V2 Create Session Responses Sent.")
jnxMbgSgwIfModBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfModBrReqRx.setDescription("Number of GTP V2 Modify Bearer Requests received.")
jnxMbgSgwIfModBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfModBrReqTx.setDescription("Number of GTP V2 Modify Bearer Requests Sent.")
jnxMbgSgwIfModBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfModBrRspRx.setDescription("Number of GTP V2 Modify Bearer Responses received.")
jnxMbgSgwIfModBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfModBrRspTx.setDescription("Number of GTP V2 Modify Bearer Responses Sent.")
jnxMbgSgwIfDelSessReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelSessReqRx.setDescription("Number of GTP V2 Delete Session Requests received.")
jnxMbgSgwIfDelSessReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelSessReqTx.setDescription("Number of GTP V2 Delete Session Requests Sent.")
jnxMbgSgwIfDelSessRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelSessRspRx.setDescription("Number of GTP V2 Delete Session Responses received.")
jnxMbgSgwIfDelSessRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelSessRspTx.setDescription("Number of GTP V2 Delete Session Responses Sent.")
jnxMbgSgwIfCrtBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCrtBrReqRx.setDescription("Number of GTP V2 Create Bearer Requests received.")
jnxMbgSgwIfCrtBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCrtBrReqTx.setDescription("Number of GTP V2 Create Bearer Requests Sent.")
jnxMbgSgwIfCrtBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCrtBrRspRx.setDescription("Number of GTP V2 Create Bearer Response received.")
jnxMbgSgwIfCrtBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCrtBrRspTx.setDescription("Number of GTP V2 Create Bearer Response Sent.")
jnxMbgSgwIfUpdBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfUpdBrReqRx.setDescription("Number of GTP V2 Update Bearer Request received.")
jnxMbgSgwIfUpdBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfUpdBrReqTx.setDescription("Number of GTP V2 Update Bearer Request Sent.")
jnxMbgSgwIfUpdBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfUpdBrRspRx.setDescription("Number of GTP V2 Update Bearer Response received.")
jnxMbgSgwIfUpdBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfUpdBrRspTx.setDescription("Number of GTP V2 Update Bearer Response Sent.")
jnxMbgSgwIfDelBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelBrReqRx.setDescription("Number of GTP V2 Delete Bearer Request received.")
jnxMbgSgwIfDelBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelBrReqTx.setDescription("Number of GTP V2 Delete Bearer Request Sent.")
jnxMbgSgwIfDelBrRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelBrRspRx.setDescription("Number of GTP V2 Delete Bearer Response received.")
jnxMbgSgwIfDelBrRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelBrRspTx.setDescription("Number of GTP V2 Delete Bearer Response Sent.")
jnxMbgSgwIfDelConnSetReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelConnSetReqRx.setDescription("Number of GTP V2 Delete PDN connection set Request received.")
jnxMbgSgwIfDelConnSetReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelConnSetReqTx.setDescription("Number of GTP V2 Delete PDN connection set Request Sent.")
jnxMbgSgwIfDelConnSetRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelConnSetRspRx.setDescription("Number of GTP V2 Delete PDN connection set Response received.")
jnxMbgSgwIfDelConnSetRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelConnSetRspTx.setDescription("Number of GTP V2 Delete PDN connection set Response Sent.")
jnxMbgSgwIfUpdConnSetReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfUpdConnSetReqRx.setDescription("Number of GTP V2 Update Connection set Request received.")
jnxMbgSgwIfUpdConnSetReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfUpdConnSetReqTx.setDescription("Number of GTP V2 Update Connection set Request Sent.")
jnxMbgSgwIfUpdConnSetRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfUpdConnSetRspRx.setDescription("Number of GTP V2 Update Connection set Response received.")
jnxMbgSgwIfUpdConnSetRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfUpdConnSetRspTx.setDescription("Number of GTP V2 Update Connection set Response Sent.")
jnxMbgSgwIfModBrCmdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfModBrCmdRx.setDescription("Number of GTP V2 Modify Bearer Command received.")
jnxMbgSgwIfModBrCmdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfModBrCmdTx.setDescription("Number of GTP V2 Modify Bearer Command Sent.")
jnxMbgSgwIfModBrFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfModBrFlrIndRx.setDescription("Number of GTP V2 Modify Bearer Failure received.")
jnxMbgSgwIfModBrFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfModBrFlrIndTx.setDescription("Number of GTP V2 Modify Bearer Failure Sent.")
jnxMbgSgwIfDelBrCmdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelBrCmdRx.setDescription("Number of GTP V2 Delete Bearer Command received.")
jnxMbgSgwIfDelBrCmdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelBrCmdTx.setDescription("Number of GTP V2 Delete Bearer Command Sent.")
jnxMbgSgwIfDelBrFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelBrFlrIndRx.setDescription("Number of GTP V2 Delete Bearer Failure received.")
jnxMbgSgwIfDelBrFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelBrFlrIndTx.setDescription("Number of GTP V2 Delete Bearer Failure Sent.")
jnxMbgSgwIfBrResCmdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfBrResCmdRx.setDescription("Number of GTP V2 Bearer Response Command received.")
jnxMbgSgwIfBrResCmdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfBrResCmdTx.setDescription("Number of GTP V2 Bearer Response Command Sent.")
jnxMbgSgwIfBrResFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfBrResFlrIndRx.setDescription("Number of GTP V2 Bearer Resource Failure received.")
jnxMbgSgwIfBrResFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfBrResFlrIndTx.setDescription("Number of GTP V2 Bearer Resource Failure Sent.")
jnxMbgSgwIfRelAcsBrReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfRelAcsBrReqRx.setDescription("Number of GTP V2 Release Access Bearer Requests received.")
jnxMbgSgwIfRelAcsBrReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfRelAcsBrReqTx.setDescription("Number of GTP V2 Release Access Bearer Requests sent.")
jnxMbgSgwIfRelAcsBrRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfRelAcsBrRespRx.setDescription("Number of GTP V2 Release Access Bearer Response received.")
jnxMbgSgwIfRelAcsBrRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfRelAcsBrRespTx.setDescription("Number of GTP V2 Release Access Bearer Response sent.")
jnxMbgSgwIfCrIndTunReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCrIndTunReqRx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Request Received")
jnxMbgSgwIfCrIndTunReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCrIndTunReqTx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Request sent")
jnxMbgSgwIfCrIndTunRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCrIndTunRespRx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Response Received")
jnxMbgSgwIfCrIndTunRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfCrIndTunRespTx.setDescription("Number of GTP V2 Create Indirect Tunnel Forward Response sent")
jnxMbgSgwIfDelIndTunReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelIndTunReqRx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Request Received")
jnxMbgSgwIfDelIndTunReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelIndTunReqTx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Request sent.")
jnxMbgSgwIfDelIndTunRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 79), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelIndTunRespRx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Response Received")
jnxMbgSgwIfDelIndTunRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDelIndTunRespTx.setDescription("Number of GTP V2 Delete Indirect Tunnel Forward Response sent.")
jnxMbgSgwIfDlDataNotifRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDlDataNotifRx.setDescription("Number of GTP V2 Downlink Data Notify received.")
jnxMbgSgwIfDlDataNotifTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDlDataNotifTx.setDescription("Number of GTP V2 Downlink Data Notify Sent.")
jnxMbgSgwIfDlDataAckRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDlDataAckRx.setDescription("Number of GTP V2 Downlink Data Notify Acknowledgement received.")
jnxMbgSgwIfDlDataAckTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDlDataAckTx.setDescription("Number of GTP V2 Downlink Data Notify Acknowledgement Sent.")
jnxMbgSgwIfDlDataNotiFlrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDlDataNotiFlrIndRx.setDescription("Number of GTP V2 Downlink Data Notification fail received.")
jnxMbgSgwIfDlDataNotiFlrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 86), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfDlDataNotiFlrIndTx.setDescription("Number of GTP V2 Downlink Data Notification fail Sent.")
jnxMbgSgwIfStopPagingIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 87), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfStopPagingIndRx.setDescription("Number of GTP V2 Number of Stop Paging Indication Messages Received.")
jnxMbgSgwIfStopPagingIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 88), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfStopPagingIndTx.setDescription("Number of GTP V2 Number of Stop Paging Indicaton messages sent")
jnxMbgSgwIfGtpV2ICsReqAcceptRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 89), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsReqAcceptRx.setDescription("Number of GTPV2 packets received with cause Request Accept.")
jnxMbgSgwIfGtpV2ICsReqAcceptTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsReqAcceptTx.setDescription("Number of GTP packets sent with cause Request Accept.")
jnxMbgSgwIfGtpV2ICsAcceptPartRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 91), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsAcceptPartRx.setDescription("Number of GTPV2 packets received with cause Accept Partial.")
jnxMbgSgwIfGtpV2ICsAcceptPartTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 92), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsAcceptPartTx.setDescription("Number of GTP packets sent with cause Accept Partial.")
jnxMbgSgwIfGtpV2ICsNewPTNPrefRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 93), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsNewPTNPrefRx.setDescription("Number of GTPV2 packets received with cause New PDN type due to Network Preference.")
jnxMbgSgwIfGtpV2ICsNewPTNPrefTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 94), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsNewPTNPrefTx.setDescription("Number of GTP packets sent with cause New PDN type due to Network Preference")
jnxMbgSgwIfGtpV2ICsNPTSIAdbrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 95), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsNPTSIAdbrRx.setDescription("Number of GTPV2 packets received with cause New PDN type due to Single Address Bearer.")
jnxMbgSgwIfGtpV2ICsNPTSIAdbrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 96), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsNPTSIAdbrTx.setDescription("Number of GTP packets sent with cause New PDN type due to Single Address Bearer.")
jnxMbgSgwIfGtpV2ICsCtxNotFndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 97), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsCtxNotFndRx.setDescription("Number of GTPV2 packets received with cause Context not found.")
jnxMbgSgwIfGtpV2ICsCtxNotFndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 98), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsCtxNotFndTx.setDescription("Number of GTP packets sent with cause Context not found.")
jnxMbgSgwIfGtpV2ICsInvMsgFmtRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 99), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsInvMsgFmtRx.setDescription("Number of GTPV2 packets received with cause Invalid Message Format.")
jnxMbgSgwIfGtpV2ICsInvMsgFmtTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 100), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsInvMsgFmtTx.setDescription("Number of GTP packets sent with cause Invalid Message Format.")
jnxMbgSgwIfGtpV2ICsVerNotSuppRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 101), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsVerNotSuppRx.setDescription("Number of GTPV2 packets received with cause Version not Supported.")
jnxMbgSgwIfGtpV2ICsVerNotSuppTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 102), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsVerNotSuppTx.setDescription("Number of GTP packets sent with cause Version not Supported.")
jnxMbgSgwIfGtpV2ICsInvLenRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 103), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsInvLenRx.setDescription("Number of GTPV2 packets received with cause Invalid Length.")
jnxMbgSgwIfGtpV2ICsInvLenTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 104), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsInvLenTx.setDescription("Number of GTP packets sent with cause Invalid Length.")
jnxMbgSgwIfGtpV2ICsSrvNotSuppRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 105), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsSrvNotSuppRx.setDescription("Number of GTPV2 packets received with cause Service Not supported.")
jnxMbgSgwIfGtpV2ICsSrvNotSuppTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 106), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsSrvNotSuppTx.setDescription("Number of GTP packets sent with cause Service Not supported.")
jnxMbgSgwIfGtpV2ICsManIEIncorRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 107), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsManIEIncorRx.setDescription("Number of GTPV2 packets received with cause Mandatory IE incorrect.")
jnxMbgSgwIfGtpV2ICsManIEIncorTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 108), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsManIEIncorTx.setDescription("Number of GTP packets sent with cause Mandatory IE incorrect.")
jnxMbgSgwIfGtpV2ICsManIEMissRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 109), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsManIEMissRx.setDescription("Number of GTPV2 packets received with cause Mandatory IE Missing.")
jnxMbgSgwIfGtpV2ICsManIEMissTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 110), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsManIEMissTx.setDescription("Number of GTP packets sent with cause Mandatory IE Missing.")
jnxMbgSgwIfGtpV2ICsOptIEIncorRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 111), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsOptIEIncorRx.setDescription("Number of GTPV2 packets received with cause Optional IE Incorrect.")
jnxMbgSgwIfGtpV2ICsOptIEIncorTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 112), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsOptIEIncorTx.setDescription("Number of GTP packets sent with cause Optional IE Incorrect.")
jnxMbgSgwIfGtpV2ICsSysFailRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 113), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsSysFailRx.setDescription("Number of GTPV2 packets received with cause System Failure.")
jnxMbgSgwIfGtpV2ICsSysFailTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 114), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsSysFailTx.setDescription("Number of GTP packets sent with cause System Failure.")
jnxMbgSgwIfGtpV2ICsNoResRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 115), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsNoResRx.setDescription("Number of GTPV2 packets received with cause No Resource.")
jnxMbgSgwIfGtpV2ICsNoResTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 116), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsNoResTx.setDescription("Number of GTP packets sent with cause No Resource.")
jnxMbgSgwIfGtpV2ICsTFTSMANTErRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 117), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsTFTSMANTErRx.setDescription("Number of GTPV2 packets received with cause TFT Symantic Error.")
jnxMbgSgwIfGtpV2ICsTFTSMANTErTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 118), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsTFTSMANTErTx.setDescription("Number of GTP packets sent with cause TFT Symantic Error.")
jnxMbgSgwIfGtpV2ICsTFTSysErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 119), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsTFTSysErrRx.setDescription("Number of GTPV2 packets received with cause TFT System Error.")
jnxMbgSgwIfGtpV2ICsTFTSysErrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 120), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsTFTSysErrTx.setDescription("Number of GTP packets sent with cause TFT System Error.")
jnxMbgSgwIfGtpV2ICsPkFltManErRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 121), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsPkFltManErRx.setDescription("Number of GTPV2 packets received with cause Packet Filter Symantic Error.")
jnxMbgSgwIfGtpV2ICsPkFltManErTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 122), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsPkFltManErTx.setDescription("Number of GTP packets sent with cause Packet Filter Symantic Error.")
jnxMbgSgwIfGtpV2ICsPkFltSynErRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 123), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsPkFltSynErRx.setDescription("Number of GTPV2 packets received with cause Packet Filter Syntax Error.")
jnxMbgSgwIfGtpV2ICsPkFltSynErTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 124), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsPkFltSynErTx.setDescription("Number of GTP packets sent with cause Packet Filter Syntax Error.")
jnxMbgSgwIfGtpV2ICsMisUnknAPNRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 125), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsMisUnknAPNRx.setDescription("Number of GTPV2 packets received with cause Unknown APN.")
jnxMbgSgwIfGtpV2ICsMisUnknAPNTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 126), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsMisUnknAPNTx.setDescription("Number of GTP packets sent with cause Unknown APN.")
jnxMbgSgwIfGtpV2ICsUnexpRptIERx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 127), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUnexpRptIERx.setDescription("Number of GTPV2 packets received with cause Unexpected Repeated IE.")
jnxMbgSgwIfGtpV2ICsUnexpRptIETx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 128), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUnexpRptIETx.setDescription("Number of GTP packets sent with cause Unexpected Repeated IE.")
jnxMbgSgwIfGtpV2ICsGREKeyNtFdRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 129), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsGREKeyNtFdRx.setDescription("Number of GTPV2 packets received with cause GRE Key Not Found.")
jnxMbgSgwIfGtpV2ICsGREKeyNtFdTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 130), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsGREKeyNtFdTx.setDescription("Number of GTP packets sent with cause GRE Key Not Found.")
jnxMbgSgwIfGtpV2ICsRelocFailRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 131), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsRelocFailRx.setDescription("Number of GTPV2 packets received with cause Relocation Failed.")
jnxMbgSgwIfGtpV2ICsRelocFailTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 132), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsRelocFailTx.setDescription("Number of GTP packets sent with cause Relocation Failed.")
jnxMbgSgwIfGtpV2ICsDenINRatRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 133), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsDenINRatRx.setDescription("Number of GTPV2 packets received with cause Denied in RAT.")
jnxMbgSgwIfGtpV2ICsDenINRatTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 134), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsDenINRatTx.setDescription("Number of GTP packets sent with cause Denied in RAT.")
jnxMbgSgwIfGtpV2ICsPTNotSuppRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 135), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsPTNotSuppRx.setDescription("Number of GTPV2 packets received with cause PDN Type Not Supported.")
jnxMbgSgwIfGtpV2ICsPTNotSuppTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 136), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsPTNotSuppTx.setDescription("Number of GTP packets sent with cause PDN Type Not Supported.")
jnxMbgSgwIfGtpV2ICsAlDynAdOccRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 137), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsAlDynAdOccRx.setDescription("Number of GTPV2 packets received with cause Allocated Dynamic Address Occupied.")
jnxMbgSgwIfGtpV2ICsAlDynAdOccTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 138), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsAlDynAdOccTx.setDescription("Number of GTP packets sent with cause Allocated Dynamic Address Occupied.")
jnxMbgSgwIfGtpV2ICsNOTFTUECTXRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 139), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsNOTFTUECTXRx.setDescription("Number of GTPV2 packets received with cause UE Context Without TFT Exists.")
jnxMbgSgwIfGtpV2ICsNOTFTUECTXTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 140), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsNOTFTUECTXTx.setDescription("Number of GTP packets sent with cause UE Context Without TFT Exists.")
jnxMbgSgwIfGtpV2ICsProtoNtSupRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 141), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsProtoNtSupRx.setDescription("Number of GTPV2 packets received with cause Protocol Not Supported.")
jnxMbgSgwIfGtpV2ICsProtoNtSupTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 142), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsProtoNtSupTx.setDescription("Number of GTP packets sent with cause Protocol Not Supported.")
jnxMbgSgwIfGtpV2ICsUENotRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 143), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUENotRespRx.setDescription("Number of GTPV2 packets received with cause UE Not Responding.")
jnxMbgSgwIfGtpV2ICsUENotRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 144), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUENotRespTx.setDescription("Number of GTP packets sent with cause UE Not Responding.")
jnxMbgSgwIfGtpV2ICsUERefusesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 145), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUERefusesRx.setDescription("Number of GTPV2 packets received with cause UE Refuses.")
jnxMbgSgwIfGtpV2ICsUERefusesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 146), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUERefusesTx.setDescription("Number of GTP packets sent with cause UE Refuses.")
jnxMbgSgwIfGtpV2ICsServDeniedRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 147), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsServDeniedRx.setDescription("Number of GTPV2 packets received with cause Service Denied.")
jnxMbgSgwIfGtpV2ICsServDeniedTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 148), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsServDeniedTx.setDescription("Number of GTP packets sent with cause Service Denied.")
jnxMbgSgwIfGtpV2ICsUnabPageUERx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 149), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUnabPageUERx.setDescription("Number of GTPV2 packets received with cause Unable to Page UE.")
jnxMbgSgwIfGtpV2ICsUnabPageUETx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 150), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUnabPageUETx.setDescription("Number of GTP packets sent with cause Unable to Page UE.")
jnxMbgSgwIfGtpV2ICsNoMemRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 151), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsNoMemRx.setDescription("Number of GTPV2 packets received with cause No Memory.")
jnxMbgSgwIfGtpV2ICsNoMemTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 152), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsNoMemTx.setDescription("Number of GTP packets sent with cause No Memory.")
jnxMbgSgwIfGtpV2ICsUserAUTHFlRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 153), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUserAUTHFlRx.setDescription("Number of GTPV2 packets received with cause User AUTH Failed.")
jnxMbgSgwIfGtpV2ICsUserAUTHFlTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 154), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUserAUTHFlTx.setDescription("Number of GTP packets sent with cause User AUTH Failed.")
jnxMbgSgwIfGtpV2ICsAPNAcsDenRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 155), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsAPNAcsDenRx.setDescription("Number of GTPV2 packets received with cause APN Access Denied.")
jnxMbgSgwIfGtpV2ICsAPNAcsDenTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 156), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsAPNAcsDenTx.setDescription("Number of GTP packets sent with cause APN Access Denied.")
jnxMbgSgwIfGtpV2ICsReqRejRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 157), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsReqRejRx.setDescription("Number of GTPV2 packets received with cause Request Rejected.")
jnxMbgSgwIfGtpV2ICsReqRejTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 158), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsReqRejTx.setDescription("Number of GTP packets sent with cause Request Rejected.")
jnxMbgSgwIfGtpV2ICsPTMSISigMMRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 159), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsPTMSISigMMRx.setDescription("Number of GTPV2 packets received with cause P-TMSI Signature Mismatch.")
jnxMbgSgwIfGtpV2ICsPTMSISigMMTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 160), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsPTMSISigMMTx.setDescription("Number of GTP packets sent with cause P-TMSI Signature Mismatch")
jnxMbgSgwIfGtpV2ICsIMSINotKnRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 161), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsIMSINotKnRx.setDescription("Number of GTPV2 packets received with cause IMSI Not Known.")
jnxMbgSgwIfGtpV2ICsIMSINotKnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 162), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsIMSINotKnTx.setDescription("Number of GTP packets sent with cause IMSI Not Known.")
jnxMbgSgwIfGtpV2ICsCondIEMsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 163), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsCondIEMsRx.setDescription("Number of GTPV2 packets received with cause Conditional IE Missing.")
jnxMbgSgwIfGtpV2ICsCondIEMsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 164), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsCondIEMsTx.setDescription("Number of GTP packets sent with cause Conditional IE Missing.")
jnxMbgSgwIfGtpV2ICsAPNResTIncRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 165), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsAPNResTIncRx.setDescription("Number of GTPV2 packets received with cause APN Restriction Type Incompatible.")
jnxMbgSgwIfGtpV2ICsAPNResTIncTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 166), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsAPNResTIncTx.setDescription("Number of GTP packets sent with cause APN Restriction Type Incompatible.")
jnxMbgSgwIfGtpV2ICsUnknownRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 167), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUnknownRx.setDescription("Number of GTPV2 packets received with cause Unknown.")
jnxMbgSgwIfGtpV2ICsUnknownTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 168), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUnknownTx.setDescription("Number of GTP packets sent with cause Unknown.")
jnxMbgSgwIfGtpV2ICsLclDetRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 169), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsLclDetRx.setDescription("Number of GTP packets received with cause Local Detach.")
jnxMbgSgwIfGtpV2ICsLclDetTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 170), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsLclDetTx.setDescription("Number of GTP packets sent with cause Local Detach.")
jnxMbgSgwIfGtpV2ICsCmpDetRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 171), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsCmpDetRx.setDescription("Number of GTP packets received with cause Complete Detach.")
jnxMbgSgwIfGtpV2ICsCmpDetTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 172), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsCmpDetTx.setDescription("Number of GTP packets sent with cause Complete Detach.")
jnxMbgSgwIfGtpV2ICsRATChgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 173), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsRATChgRx.setDescription("Number of GTP packets received with cause RAT changed from 3GPP to non 3GPP.")
jnxMbgSgwIfGtpV2ICsRATChgTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 174), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsRATChgTx.setDescription("Number of GTP packets sent with cause RAT changed from 3GPP to non 3GPP.")
jnxMbgSgwIfGtpV2ICsISRDeactRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 175), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsISRDeactRx.setDescription("Number of GTP packets received with cause ISR Deactivated.")
jnxMbgSgwIfGtpV2ICsISRDeactTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 176), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsISRDeactTx.setDescription("Number of GTP packets sent with cause ISR Deactivated.")
jnxMbgSgwIfGtpV2ICsEIFRNCEnRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 177), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsEIFRNCEnRx.setDescription("Number of GTP packets received with cause Error Indication from RNC eNodeB.")
jnxMbgSgwIfGtpV2ICsEIFRNCEnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 178), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsEIFRNCEnTx.setDescription("Number of GTP packets sent with cause Error Indication from RNC eNodeB.")
jnxMbgSgwIfGtpV2ICsSemErTADRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 179), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsSemErTADRx.setDescription("Number of GTP packets received with cause Semantic Error in TAD Operation.")
jnxMbgSgwIfGtpV2ICsSemErTADTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 180), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsSemErTADTx.setDescription("Number of GTP packets sent with cause Semantic Error in TAD Operation.")
jnxMbgSgwIfGtpV2ICsSynErTADRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 181), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsSynErTADRx.setDescription("Number of GTP packets received with cause Syntactic Error in TAD Operation.")
jnxMbgSgwIfGtpV2ICsSynErTADTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 182), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsSynErTADTx.setDescription("Number of GTP packets sent with cause Syntactic Error in TAD Operation.")
jnxMbgSgwIfGtpV2ICsRMValRcvRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 183), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsRMValRcvRx.setDescription("Number of GTP packets received with cause Reserved Message Value Received.")
jnxMbgSgwIfGtpV2ICsRMValRcvTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 184), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsRMValRcvTx.setDescription("Number of GTP packets sent with cause Reserved Message Value Received.")
jnxMbgSgwIfGtpV2ICsRPrNtRspRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 185), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsRPrNtRspRx.setDescription("Number of GTP packets received with cause Remote peer not responding.")
jnxMbgSgwIfGtpV2ICsRPrNtRspTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 186), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsRPrNtRspTx.setDescription("Number of GTP packets sent with cause Remote peer not responding.")
jnxMbgSgwIfGtpV2ICsColNWReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 187), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsColNWReqRx.setDescription("Number of GTP packets received with cause Collision with network initiated request.")
jnxMbgSgwIfGtpV2ICsColNWReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 188), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsColNWReqTx.setDescription("Number of GTP packets sent with cause Collision with network initiated request.")
jnxMbgSgwIfGtpV2ICsUnPgUESusRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 189), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUnPgUESusRx.setDescription("Number of GTP packets received with cause Unable to page UE due to suspension.")
jnxMbgSgwIfGtpV2ICsUnPgUESusTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 190), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsUnPgUESusTx.setDescription("Number of GTP packets sent with cause Unable to page UE due to suspension.")
jnxMbgSgwIfGtpV2ICsInvTotLenRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 191), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsInvTotLenRx.setDescription("Number of GTP packets received with cause Invalid total len.")
jnxMbgSgwIfGtpV2ICsInvTotLenTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 192), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsInvTotLenTx.setDescription("Number of GTP packets sent with cause Invalid total len.")
jnxMbgSgwIfGtpV2ICsDtForNtSupRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 193), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsDtForNtSupRx.setDescription("Number of GTP packets received with cause Data forwarding not supported.")
jnxMbgSgwIfGtpV2ICsDtForNtSupTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 194), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsDtForNtSupTx.setDescription("Number of GTP packets sent with cause Data forwarding not supported.")
jnxMbgSgwIfGtpV2ICsInReFRePrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 195), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsInReFRePrRx.setDescription("Number of GTP packets received with cause Invalid Reply from Remote peer.")
jnxMbgSgwIfGtpV2ICsInReFRePrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 196), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsInReFRePrTx.setDescription("Number of GTP packets sent with cause Invalid Reply from Remote peer.")
jnxMbgSgwIfGtpV2ICsInvPrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 197), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsInvPrRx.setDescription("Number of GTP packets received with cause Invalid peer.")
jnxMbgSgwIfGtpV2ICsInvPrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 198), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV2ICsInvPrTx.setDescription("Number of GTP packets sent with cause Invalid peer.")
jnxMbgSgwIfGtpV1ProtocolErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 199), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV1ProtocolErrRx.setDescription("Number of GTPv1 Protocol Errors Received.")
jnxMbgSgwIfGtpV1UnSupMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 200), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV1UnSupMsgRx.setDescription("Number of GTPv1 Unsupported Messages received.")
jnxMbgSgwIfGtpV1T3RespTmrExpRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 201), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV1T3RespTmrExpRx.setDescription("Number of GTP V1 T3 timer expiries Received.")
jnxMbgSgwIfGtpV1EndMarkerRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 202), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV1EndMarkerRx.setDescription("Number of GTP V1 end marker packets received.")
jnxMbgSgwIfGtpV1EndMarkerTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 203), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV1EndMarkerTx.setDescription("Number of GTP V1 end marker packets sent.")
jnxMbgSgwIfGtpV1EchoReqRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 204), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV1EchoReqRx.setDescription("Number of GTP V1 echo request packets received.")
jnxMbgSgwIfGtpV1EchoReqTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 205), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV1EchoReqTx.setDescription("Number of GTP V1 echo request packets sent.")
jnxMbgSgwIfGtpV1EchoRespRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 206), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV1EchoRespRx.setDescription("Number of GTP V1 echo response packets received.")
jnxMbgSgwIfGtpV1EchoRespTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 207), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV1EchoRespTx.setDescription("Number of GTP V1 echo response packets sent.")
jnxMbgSgwIfGtpV1ErrIndRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 208), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV1ErrIndRx.setDescription("Number of GTP packets V1 Error Indication packets received.")
jnxMbgSgwIfGtpV1ErrIndTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 209), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfGtpV1ErrIndTx.setDescription("Number of GTP packets V1 Error Indication packets sent.")
jnxMbgSgwIfSuspNotifRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 210), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfSuspNotifRx.setDescription("Number of GTPv2 Suspend Notification messages received.")
jnxMbgSgwIfSuspNotifTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 211), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfSuspNotifTx.setDescription("Number of GTPv2 Suspend Notification messages sent.")
jnxMbgSgwIfSuspAckRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 212), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfSuspAckRx.setDescription("Number of GTPv2 Suspend Acknowledgement messages received.")
jnxMbgSgwIfSuspAckTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 213), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfSuspAckTx.setDescription("Number of GTPv2 Suspend Acknowledgement messages sent.")
jnxMbgSgwIfResumeNotifRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 214), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfResumeNotifRx.setDescription("Number of GTPv2 Resume Notification messages received.")
jnxMbgSgwIfResumeNotifTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 215), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfResumeNotifTx.setDescription("Number of GTPv2 Resume Notification messages sent.")
jnxMbgSgwIfResumeAckRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 216), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfResumeAckRx.setDescription("Number of GTPv2 Resume Acknowledgement messages received.")
jnxMbgSgwIfResumeAckTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 217), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfResumeAckTx.setDescription("Number of GTPv2 Resume Acknowledgement messages sent.")
jnxMbgSgwIfPiggybackMsgRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 218), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfPiggybackMsgRx.setDescription("Number of GTPv2 Piggyback messages received.")
jnxMbgSgwIfPiggybackMsgTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 1, 4, 1, 219), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIfPiggybackMsgTx.setDescription("Number of GTPv2 S11 Piggyback messages sent.")

# Augmentions

# Notifications

jnxMbgSgwGtpPeerGwUpNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 0, 1)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpInterfaceType"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpPeerName"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpGwName"), ) )
if mibBuilder.loadTexts: jnxMbgSgwGtpPeerGwUpNotif.setDescription("GTPC Peer UP Notification. This trap is sent when a new peer is added\nor an existing peer goes down and comes back up.")
jnxMbgSgwGtpPeerGwDnNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 0, 2)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpInterfaceType"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpPeerName"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpGwName"), ) )
if mibBuilder.loadTexts: jnxMbgSgwGtpPeerGwDnNotif.setDescription("GTPC Peer Down Notification. This trap is sent when a peer connection \ngoes down.")
jnxMbgSgwGtpPrDnTPerPrAlrmActv = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 0, 3)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpAlarmStatCounter"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpInterfaceType"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpPeerName"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpGwName"), ) )
if mibBuilder.loadTexts: jnxMbgSgwGtpPrDnTPerPrAlrmActv.setDescription("Peer down Threshold trap Active. This is sent when a peer connection\nflaps for more than a higher threshold number of times with in a\nmonitor interval.")
jnxMbgSgwGtpPrDnTPerPrAlrmClr = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 2, 0, 4)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpAlarmStatCounter"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpInterfaceType"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpPeerName"), ("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", "jnxMbgSgwGtpGwName"), ) )
if mibBuilder.loadTexts: jnxMbgSgwGtpPrDnTPerPrAlrmClr.setDescription("Peer down Threshold trap Cleared. This is sent when the number of \ntimes a peer connection flaps in a monitor interval come down below\nthe lower threshold.")

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", PYSNMP_MODULE_ID=jnxMbgSgwGtpMib)

# Objects
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", jnxMbgSgwGtpMib=jnxMbgSgwGtpMib, jnxMbgSgwGtpNotifications=jnxMbgSgwGtpNotifications, jnxMbgSgwGtpObjects=jnxMbgSgwGtpObjects, jnxMbgSgwGtpCPerPeerStatsTable=jnxMbgSgwGtpCPerPeerStatsTable, jnxMbgSgwGtpPerPeerStatsEntry=jnxMbgSgwGtpPerPeerStatsEntry, jnxMbgSgwPPGtpRmtAddr=jnxMbgSgwPPGtpRmtAddr, jnxMbgSgwPPGtpLclAddr=jnxMbgSgwPPGtpLclAddr, jnxMbgSgwPPGtpRtgInst=jnxMbgSgwPPGtpRtgInst, jnxMbgSgwPPRxPacketsDropped=jnxMbgSgwPPRxPacketsDropped, jnxMbgSgwPPPacketAllocFail=jnxMbgSgwPPPacketAllocFail, jnxMbgSgwPPPacketSendFail=jnxMbgSgwPPPacketSendFail, jnxMbgSgwPPIPVerErrRx=jnxMbgSgwPPIPVerErrRx, jnxMbgSgwPPIPProtoErrRx=jnxMbgSgwPPIPProtoErrRx, jnxMbgSgwPPGTPPortErrRx=jnxMbgSgwPPGTPPortErrRx, jnxMbgSgwPPGTPUnknVerRx=jnxMbgSgwPPGTPUnknVerRx, jnxMbgSgwPPPcktLenErrRx=jnxMbgSgwPPPcktLenErrRx, jnxMbgSgwPPUnknMsgRx=jnxMbgSgwPPUnknMsgRx, jnxMbgSgwPPProtocolErrRx=jnxMbgSgwPPProtocolErrRx, jnxMbgSgwPPUnSupportedMsgRx=jnxMbgSgwPPUnSupportedMsgRx, jnxMbgSgwPPT3RespTmrExpRx=jnxMbgSgwPPT3RespTmrExpRx, jnxMbgSgwPPV2NumMsgRx=jnxMbgSgwPPV2NumMsgRx, jnxMbgSgwPPV2NumMsgTx=jnxMbgSgwPPV2NumMsgTx, jnxMbgSgwPPV2NumBytesRx=jnxMbgSgwPPV2NumBytesRx, jnxMbgSgwPPV2NumBytesTx=jnxMbgSgwPPV2NumBytesTx, jnxMbgSgwPPV2EchoReqRx=jnxMbgSgwPPV2EchoReqRx, jnxMbgSgwPPV2EchoReqTx=jnxMbgSgwPPV2EchoReqTx, jnxMbgSgwPPV2EchoRespRx=jnxMbgSgwPPV2EchoRespRx, jnxMbgSgwPPV2EchoRespTx=jnxMbgSgwPPV2EchoRespTx, jnxMbgSgwPPV2VerNotSupRx=jnxMbgSgwPPV2VerNotSupRx, jnxMbgSgwPPV2VerNotSupTx=jnxMbgSgwPPV2VerNotSupTx, jnxMbgSgwPPCreateSessReqRx=jnxMbgSgwPPCreateSessReqRx, jnxMbgSgwPPCreateSessReqTx=jnxMbgSgwPPCreateSessReqTx, jnxMbgSgwPPCreateSessRspRx=jnxMbgSgwPPCreateSessRspRx, jnxMbgSgwPPCreateSessRspTx=jnxMbgSgwPPCreateSessRspTx, jnxMbgSgwPPModBrReqRx=jnxMbgSgwPPModBrReqRx, jnxMbgSgwPPModBrReqTx=jnxMbgSgwPPModBrReqTx, jnxMbgSgwPPModBrRspRx=jnxMbgSgwPPModBrRspRx, jnxMbgSgwPPModBrRspTx=jnxMbgSgwPPModBrRspTx, jnxMbgSgwPPDelSessReqRx=jnxMbgSgwPPDelSessReqRx, jnxMbgSgwPPDelSessReqTx=jnxMbgSgwPPDelSessReqTx, jnxMbgSgwPPDelSessRspRx=jnxMbgSgwPPDelSessRspRx, jnxMbgSgwPPDelSessRspTx=jnxMbgSgwPPDelSessRspTx, jnxMbgSgwPPCrtBrReqRx=jnxMbgSgwPPCrtBrReqRx, jnxMbgSgwPPCrtBrReqTx=jnxMbgSgwPPCrtBrReqTx, jnxMbgSgwPPCrtBrRspRx=jnxMbgSgwPPCrtBrRspRx, jnxMbgSgwPPCrtBrRspTx=jnxMbgSgwPPCrtBrRspTx, jnxMbgSgwPPUpdBrReqRx=jnxMbgSgwPPUpdBrReqRx, jnxMbgSgwPPUpdBrReqTx=jnxMbgSgwPPUpdBrReqTx, jnxMbgSgwPPUpdBrRspRx=jnxMbgSgwPPUpdBrRspRx, jnxMbgSgwPPUpdBrRspTx=jnxMbgSgwPPUpdBrRspTx, jnxMbgSgwPPDelBrReqRx=jnxMbgSgwPPDelBrReqRx, jnxMbgSgwPPDelBrReqTx=jnxMbgSgwPPDelBrReqTx, jnxMbgSgwPPDelBrRspRx=jnxMbgSgwPPDelBrRspRx, jnxMbgSgwPPDelBrRspTx=jnxMbgSgwPPDelBrRspTx, jnxMbgSgwPPDelConnSetReqRx=jnxMbgSgwPPDelConnSetReqRx, jnxMbgSgwPPDelConnSetReqTx=jnxMbgSgwPPDelConnSetReqTx, jnxMbgSgwPPDelConnSetRspRx=jnxMbgSgwPPDelConnSetRspRx, jnxMbgSgwPPDelConnSetRspTx=jnxMbgSgwPPDelConnSetRspTx, jnxMbgSgwPPUpdConnSetReqRx=jnxMbgSgwPPUpdConnSetReqRx, jnxMbgSgwPPUpdConnSetReqTx=jnxMbgSgwPPUpdConnSetReqTx, jnxMbgSgwPPUpdConnSetRspRx=jnxMbgSgwPPUpdConnSetRspRx, jnxMbgSgwPPUpdConnSetRspTx=jnxMbgSgwPPUpdConnSetRspTx, jnxMbgSgwPPModBrCmdRx=jnxMbgSgwPPModBrCmdRx, jnxMbgSgwPPModBrCmdTx=jnxMbgSgwPPModBrCmdTx, jnxMbgSgwPPModBrFlrIndRx=jnxMbgSgwPPModBrFlrIndRx, jnxMbgSgwPPModBrFlrIndTx=jnxMbgSgwPPModBrFlrIndTx, jnxMbgSgwPPDelBrCmdRx=jnxMbgSgwPPDelBrCmdRx, jnxMbgSgwPPDelBrCmdTx=jnxMbgSgwPPDelBrCmdTx, jnxMbgSgwPPDelBrFlrIndRx=jnxMbgSgwPPDelBrFlrIndRx, jnxMbgSgwPPDelBrFlrIndTx=jnxMbgSgwPPDelBrFlrIndTx, jnxMbgSgwPPBrResCmdRx=jnxMbgSgwPPBrResCmdRx, jnxMbgSgwPPBrResCmdTx=jnxMbgSgwPPBrResCmdTx, jnxMbgSgwPPBrResFlrIndRx=jnxMbgSgwPPBrResFlrIndRx, jnxMbgSgwPPBrResFlrIndTx=jnxMbgSgwPPBrResFlrIndTx, jnxMbgSgwPPRelAcsBrReqRx=jnxMbgSgwPPRelAcsBrReqRx, jnxMbgSgwPPRelAcsBrReqTx=jnxMbgSgwPPRelAcsBrReqTx, jnxMbgSgwPPRelAcsBrRespRx=jnxMbgSgwPPRelAcsBrRespRx, jnxMbgSgwPPRelAcsBrRespTx=jnxMbgSgwPPRelAcsBrRespTx, jnxMbgSgwPPCrIndTunReqRx=jnxMbgSgwPPCrIndTunReqRx, jnxMbgSgwPPCrIndTunReqTx=jnxMbgSgwPPCrIndTunReqTx, jnxMbgSgwPPCrIndTunRespRx=jnxMbgSgwPPCrIndTunRespRx, jnxMbgSgwPPCrIndTunRespTx=jnxMbgSgwPPCrIndTunRespTx, jnxMbgSgwPPDelIndTunReqRx=jnxMbgSgwPPDelIndTunReqRx, jnxMbgSgwPPDelIndTunReqTx=jnxMbgSgwPPDelIndTunReqTx, jnxMbgSgwPPDelIndTunRespRx=jnxMbgSgwPPDelIndTunRespRx, jnxMbgSgwPPDelIndTunRespTx=jnxMbgSgwPPDelIndTunRespTx, jnxMbgSgwPPDlDataNotifRx=jnxMbgSgwPPDlDataNotifRx, jnxMbgSgwPPDlDataNotifTx=jnxMbgSgwPPDlDataNotifTx, jnxMbgSgwPPDlDataAckRx=jnxMbgSgwPPDlDataAckRx, jnxMbgSgwPPDlDataAckTx=jnxMbgSgwPPDlDataAckTx, jnxMbgSgwPPDlDataNotiFlrIndRx=jnxMbgSgwPPDlDataNotiFlrIndRx, jnxMbgSgwPPDlDataNotiFlrIndTx=jnxMbgSgwPPDlDataNotiFlrIndTx, jnxMbgSgwPPStopPagingIndRx=jnxMbgSgwPPStopPagingIndRx, jnxMbgSgwPPStopPagingIndTx=jnxMbgSgwPPStopPagingIndTx, jnxMbgSgwPPGtpV2ICsPageRx=jnxMbgSgwPPGtpV2ICsPageRx, jnxMbgSgwPPGtpV2ICsPageTx=jnxMbgSgwPPGtpV2ICsPageTx, jnxMbgSgwPPGtpV2ICsReqAcceptRx=jnxMbgSgwPPGtpV2ICsReqAcceptRx, jnxMbgSgwPPGtpV2ICsReqAcceptTx=jnxMbgSgwPPGtpV2ICsReqAcceptTx, jnxMbgSgwPPGtpV2ICsAcceptPartRx=jnxMbgSgwPPGtpV2ICsAcceptPartRx, jnxMbgSgwPPGtpV2ICsAcceptPartTx=jnxMbgSgwPPGtpV2ICsAcceptPartTx, jnxMbgSgwPPGtpV2ICsNewPTNPrefRx=jnxMbgSgwPPGtpV2ICsNewPTNPrefRx, jnxMbgSgwPPGtpV2ICsNewPTNPrefTx=jnxMbgSgwPPGtpV2ICsNewPTNPrefTx, jnxMbgSgwPPGtpV2ICsNPTSIAdbrRx=jnxMbgSgwPPGtpV2ICsNPTSIAdbrRx, jnxMbgSgwPPGtpV2ICsNPTSIAdbrTx=jnxMbgSgwPPGtpV2ICsNPTSIAdbrTx, jnxMbgSgwPPGtpV2ICsCtxNotFndRx=jnxMbgSgwPPGtpV2ICsCtxNotFndRx, jnxMbgSgwPPGtpV2ICsCtxNotFndTx=jnxMbgSgwPPGtpV2ICsCtxNotFndTx, jnxMbgSgwPPGtpV2ICsInvMsgFmtRx=jnxMbgSgwPPGtpV2ICsInvMsgFmtRx, jnxMbgSgwPPGtpV2ICsInvMsgFmtTx=jnxMbgSgwPPGtpV2ICsInvMsgFmtTx, jnxMbgSgwPPGtpV2ICsVerNotSuppRx=jnxMbgSgwPPGtpV2ICsVerNotSuppRx, jnxMbgSgwPPGtpV2ICsVerNotSuppTx=jnxMbgSgwPPGtpV2ICsVerNotSuppTx, jnxMbgSgwPPGtpV2ICsInvLenRx=jnxMbgSgwPPGtpV2ICsInvLenRx, jnxMbgSgwPPGtpV2ICsInvLenTx=jnxMbgSgwPPGtpV2ICsInvLenTx, jnxMbgSgwPPGtpV2ICsServNotSupRx=jnxMbgSgwPPGtpV2ICsServNotSupRx, jnxMbgSgwPPGtpV2ICsServNotSupTx=jnxMbgSgwPPGtpV2ICsServNotSupTx, jnxMbgSgwPPGtpV2ICsManIEIncorRx=jnxMbgSgwPPGtpV2ICsManIEIncorRx, jnxMbgSgwPPGtpV2ICsManIEIncorTx=jnxMbgSgwPPGtpV2ICsManIEIncorTx, jnxMbgSgwPPGtpV2ICsManIEMissRx=jnxMbgSgwPPGtpV2ICsManIEMissRx, jnxMbgSgwPPGtpV2ICsManIEMissTx=jnxMbgSgwPPGtpV2ICsManIEMissTx, jnxMbgSgwPPGtpV2ICsOptIEIncorRx=jnxMbgSgwPPGtpV2ICsOptIEIncorRx, jnxMbgSgwPPGtpV2ICsOptIEIncorTx=jnxMbgSgwPPGtpV2ICsOptIEIncorTx, jnxMbgSgwPPGtpV2ICsSysFailRx=jnxMbgSgwPPGtpV2ICsSysFailRx, jnxMbgSgwPPGtpV2ICsSysFailTx=jnxMbgSgwPPGtpV2ICsSysFailTx, jnxMbgSgwPPGtpV2ICsNoResRx=jnxMbgSgwPPGtpV2ICsNoResRx, jnxMbgSgwPPGtpV2ICsNoResTx=jnxMbgSgwPPGtpV2ICsNoResTx, jnxMbgSgwPPGtpV2ICsTFTSMANTErRx=jnxMbgSgwPPGtpV2ICsTFTSMANTErRx, jnxMbgSgwPPGtpV2ICsTFTSMANTErTx=jnxMbgSgwPPGtpV2ICsTFTSMANTErTx)
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", jnxMbgSgwPPGtpV2ICsTFTSysErrRx=jnxMbgSgwPPGtpV2ICsTFTSysErrRx, jnxMbgSgwPPGtpV2ICsTFTSysErrTx=jnxMbgSgwPPGtpV2ICsTFTSysErrTx, jnxMbgSgwPPGtpV2ICsPkFltManErRx=jnxMbgSgwPPGtpV2ICsPkFltManErRx, jnxMbgSgwPPGtpV2ICsPkFltManErTx=jnxMbgSgwPPGtpV2ICsPkFltManErTx, jnxMbgSgwPPGtpV2ICsPkFltSynErRx=jnxMbgSgwPPGtpV2ICsPkFltSynErRx, jnxMbgSgwPPGtpV2ICsPkFltSynErTx=jnxMbgSgwPPGtpV2ICsPkFltSynErTx, jnxMbgSgwPPGtpV2ICsMisUnknAPNRx=jnxMbgSgwPPGtpV2ICsMisUnknAPNRx, jnxMbgSgwPPGtpV2ICsMisUnknAPNTx=jnxMbgSgwPPGtpV2ICsMisUnknAPNTx, jnxMbgSgwPPGtpV2ICsUnexpRptIERx=jnxMbgSgwPPGtpV2ICsUnexpRptIERx, jnxMbgSgwPPGtpV2ICsUnexpRptIETx=jnxMbgSgwPPGtpV2ICsUnexpRptIETx, jnxMbgSgwPPGtpV2ICsGREKeyNtFdRx=jnxMbgSgwPPGtpV2ICsGREKeyNtFdRx, jnxMbgSgwPPGtpV2ICsGREKeyNtFdTx=jnxMbgSgwPPGtpV2ICsGREKeyNtFdTx, jnxMbgSgwPPGtpV2ICsRelocFailRx=jnxMbgSgwPPGtpV2ICsRelocFailRx, jnxMbgSgwPPGtpV2ICsRelocFailTx=jnxMbgSgwPPGtpV2ICsRelocFailTx, jnxMbgSgwPPGtpV2ICsDenINRatRx=jnxMbgSgwPPGtpV2ICsDenINRatRx, jnxMbgSgwPPGtpV2ICsDenINRatTx=jnxMbgSgwPPGtpV2ICsDenINRatTx, jnxMbgSgwPPGtpV2ICsPTNotSuppRx=jnxMbgSgwPPGtpV2ICsPTNotSuppRx, jnxMbgSgwPPGtpV2ICsPTNotSuppTx=jnxMbgSgwPPGtpV2ICsPTNotSuppTx, jnxMbgSgwPPGtpV2ICsAllDynAdOcRx=jnxMbgSgwPPGtpV2ICsAllDynAdOcRx, jnxMbgSgwPPGtpV2ICsAllDynAdOcTx=jnxMbgSgwPPGtpV2ICsAllDynAdOcTx, jnxMbgSgwPPGtpV2ICsNOTFTUECTXRx=jnxMbgSgwPPGtpV2ICsNOTFTUECTXRx, jnxMbgSgwPPGtpV2ICsNOTFTUECTXTx=jnxMbgSgwPPGtpV2ICsNOTFTUECTXTx, jnxMbgSgwPPGtpV2ICsProtoNtSupRx=jnxMbgSgwPPGtpV2ICsProtoNtSupRx, jnxMbgSgwPPGtpV2ICsProtoNtSupTx=jnxMbgSgwPPGtpV2ICsProtoNtSupTx, jnxMbgSgwPPGtpV2ICsUENotRespRx=jnxMbgSgwPPGtpV2ICsUENotRespRx, jnxMbgSgwPPGtpV2ICsUENotRespTx=jnxMbgSgwPPGtpV2ICsUENotRespTx, jnxMbgSgwPPGtpV2ICsUERefusesRx=jnxMbgSgwPPGtpV2ICsUERefusesRx, jnxMbgSgwPPGtpV2ICsUERefusesTx=jnxMbgSgwPPGtpV2ICsUERefusesTx, jnxMbgSgwPPGtpV2ICsServDeniedRx=jnxMbgSgwPPGtpV2ICsServDeniedRx, jnxMbgSgwPPGtpV2ICsServDeniedTx=jnxMbgSgwPPGtpV2ICsServDeniedTx, jnxMbgSgwPPGtpV2ICsUnabPageUERx=jnxMbgSgwPPGtpV2ICsUnabPageUERx, jnxMbgSgwPPGtpV2ICsUnabPageUETx=jnxMbgSgwPPGtpV2ICsUnabPageUETx, jnxMbgSgwPPGtpV2ICsNoMemRx=jnxMbgSgwPPGtpV2ICsNoMemRx, jnxMbgSgwPPGtpV2ICsNoMemTx=jnxMbgSgwPPGtpV2ICsNoMemTx, jnxMbgSgwPPGtpV2ICsUserAUTHFlRx=jnxMbgSgwPPGtpV2ICsUserAUTHFlRx, jnxMbgSgwPPGtpV2ICsUserAUTHFlTx=jnxMbgSgwPPGtpV2ICsUserAUTHFlTx, jnxMbgSgwPPGtpV2ICsAPNAcsDenRx=jnxMbgSgwPPGtpV2ICsAPNAcsDenRx, jnxMbgSgwPPGtpV2ICsAPNAcsDenTx=jnxMbgSgwPPGtpV2ICsAPNAcsDenTx, jnxMbgSgwPPGtpV2ICsReqRejRx=jnxMbgSgwPPGtpV2ICsReqRejRx, jnxMbgSgwPPGtpV2ICsReqRejTx=jnxMbgSgwPPGtpV2ICsReqRejTx, jnxMbgSgwPPGtpV2ICsPTMSISigMMRx=jnxMbgSgwPPGtpV2ICsPTMSISigMMRx, jnxMbgSgwPPGtpV2ICsPTMSISigMMTx=jnxMbgSgwPPGtpV2ICsPTMSISigMMTx, jnxMbgSgwPPGtpV2ICsIMSINotKnRx=jnxMbgSgwPPGtpV2ICsIMSINotKnRx, jnxMbgSgwPPGtpV2ICsIMSINotKnTx=jnxMbgSgwPPGtpV2ICsIMSINotKnTx, jnxMbgSgwPPGtpV2ICsCondIEMsRx=jnxMbgSgwPPGtpV2ICsCondIEMsRx, jnxMbgSgwPPGtpV2ICsCondIEMsTx=jnxMbgSgwPPGtpV2ICsCondIEMsTx, jnxMbgSgwPPGtpV2ICsAPNResTIncRx=jnxMbgSgwPPGtpV2ICsAPNResTIncRx, jnxMbgSgwPPGtpV2ICsAPNResTIncTx=jnxMbgSgwPPGtpV2ICsAPNResTIncTx, jnxMbgSgwPPGtpV2ICsUnknownRx=jnxMbgSgwPPGtpV2ICsUnknownRx, jnxMbgSgwPPGtpV2ICsUnknownTx=jnxMbgSgwPPGtpV2ICsUnknownTx, jnxMbgSgwPPGtpV2ICsLclDetRx=jnxMbgSgwPPGtpV2ICsLclDetRx, jnxMbgSgwPPGtpV2ICsLclDetTx=jnxMbgSgwPPGtpV2ICsLclDetTx, jnxMbgSgwPPGtpV2ICsCmpDetRx=jnxMbgSgwPPGtpV2ICsCmpDetRx, jnxMbgSgwPPGtpV2ICsCmpDetTx=jnxMbgSgwPPGtpV2ICsCmpDetTx, jnxMbgSgwPPGtpV2ICsRATChgRx=jnxMbgSgwPPGtpV2ICsRATChgRx, jnxMbgSgwPPGtpV2ICsRATChgTx=jnxMbgSgwPPGtpV2ICsRATChgTx, jnxMbgSgwPPGtpV2ICsISRDeactRx=jnxMbgSgwPPGtpV2ICsISRDeactRx, jnxMbgSgwPPGtpV2ICsISRDeactTx=jnxMbgSgwPPGtpV2ICsISRDeactTx, jnxMbgSgwPPGtpV2ICsEIFRNCEnRx=jnxMbgSgwPPGtpV2ICsEIFRNCEnRx, jnxMbgSgwPPGtpV2ICsEIFRNCEnTx=jnxMbgSgwPPGtpV2ICsEIFRNCEnTx, jnxMbgSgwPPGtpV2ICsSemErTADRx=jnxMbgSgwPPGtpV2ICsSemErTADRx, jnxMbgSgwPPGtpV2ICsSemErTADTx=jnxMbgSgwPPGtpV2ICsSemErTADTx, jnxMbgSgwPPGtpV2ICsSynErTADRx=jnxMbgSgwPPGtpV2ICsSynErTADRx, jnxMbgSgwPPGtpV2ICsSynErTADTx=jnxMbgSgwPPGtpV2ICsSynErTADTx, jnxMbgSgwPPGtpV2ICsRMValRcvRx=jnxMbgSgwPPGtpV2ICsRMValRcvRx, jnxMbgSgwPPGtpV2ICsRMValRcvTx=jnxMbgSgwPPGtpV2ICsRMValRcvTx, jnxMbgSgwPPGtpV2ICsRPrNtRspRx=jnxMbgSgwPPGtpV2ICsRPrNtRspRx, jnxMbgSgwPPGtpV2ICsRPrNtRspTx=jnxMbgSgwPPGtpV2ICsRPrNtRspTx, jnxMbgSgwPPGtpV2ICsColNWReqRx=jnxMbgSgwPPGtpV2ICsColNWReqRx, jnxMbgSgwPPGtpV2ICsColNWReqTx=jnxMbgSgwPPGtpV2ICsColNWReqTx, jnxMbgSgwPPGtpV2ICsUnPgUESusRx=jnxMbgSgwPPGtpV2ICsUnPgUESusRx, jnxMbgSgwPPGtpV2ICsUnPgUESusTx=jnxMbgSgwPPGtpV2ICsUnPgUESusTx, jnxMbgSgwPPGtpV2ICsInvTotLenRx=jnxMbgSgwPPGtpV2ICsInvTotLenRx, jnxMbgSgwPPGtpV2ICsInvTotLenTx=jnxMbgSgwPPGtpV2ICsInvTotLenTx, jnxMbgSgwPPGtpV2ICsDtForNtSupRx=jnxMbgSgwPPGtpV2ICsDtForNtSupRx, jnxMbgSgwPPGtpV2ICsDtForNtSupTx=jnxMbgSgwPPGtpV2ICsDtForNtSupTx, jnxMbgSgwPPGtpV2ICsInReFRePrRx=jnxMbgSgwPPGtpV2ICsInReFRePrRx, jnxMbgSgwPPGtpV2ICsInReFRePrTx=jnxMbgSgwPPGtpV2ICsInReFRePrTx, jnxMbgSgwPPGtpV2ICsInvPrRx=jnxMbgSgwPPGtpV2ICsInvPrRx, jnxMbgSgwPPGtpV2ICsInvPrTx=jnxMbgSgwPPGtpV2ICsInvPrTx, jnxMbgSgwPPGtpV1ProtocolErrRx=jnxMbgSgwPPGtpV1ProtocolErrRx, jnxMbgSgwPPGtpV1UnSupMsgRx=jnxMbgSgwPPGtpV1UnSupMsgRx, jnxMbgSgwPPGtpV1T3RespTmrExpRx=jnxMbgSgwPPGtpV1T3RespTmrExpRx, jnxMbgSgwPPGtpV1EndMarkerRx=jnxMbgSgwPPGtpV1EndMarkerRx, jnxMbgSgwPPGtpV1EndMarkerTx=jnxMbgSgwPPGtpV1EndMarkerTx, jnxMbgSgwPPGtpV1EchoReqRx=jnxMbgSgwPPGtpV1EchoReqRx, jnxMbgSgwPPGtpV1EchoReqTx=jnxMbgSgwPPGtpV1EchoReqTx, jnxMbgSgwPPGtpV1EchoRespRx=jnxMbgSgwPPGtpV1EchoRespRx, jnxMbgSgwPPGtpV1EchoRespTx=jnxMbgSgwPPGtpV1EchoRespTx, jnxMbgSgwPPGtpV1ErrIndRx=jnxMbgSgwPPGtpV1ErrIndRx, jnxMbgSgwPPGtpV1ErrIndTx=jnxMbgSgwPPGtpV1ErrIndTx, jnxMbgSgwPPSuspNotifRx=jnxMbgSgwPPSuspNotifRx, jnxMbgSgwPPSuspNotifTx=jnxMbgSgwPPSuspNotifTx, jnxMbgSgwPPSuspAckRx=jnxMbgSgwPPSuspAckRx, jnxMbgSgwPPSuspAckTx=jnxMbgSgwPPSuspAckTx, jnxMbgSgwPPResumeNotifRx=jnxMbgSgwPPResumeNotifRx, jnxMbgSgwPPResumeNotifTx=jnxMbgSgwPPResumeNotifTx, jnxMbgSgwPPResumeAckRx=jnxMbgSgwPPResumeAckRx, jnxMbgSgwPPResumeAckTx=jnxMbgSgwPPResumeAckTx, jnxMbgSgwPPPiggybackMsgRx=jnxMbgSgwPPPiggybackMsgRx, jnxMbgSgwPPPiggybackMsgTx=jnxMbgSgwPPPiggybackMsgTx, jnxMbgSgwGtpCGlbStatsTable=jnxMbgSgwGtpCGlbStatsTable, jnxMbgSgwGtpGlbStatsEntry=jnxMbgSgwGtpGlbStatsEntry, jnxMbgSgwRxPacketsDropped=jnxMbgSgwRxPacketsDropped, jnxMbgSgwPacketAllocFail=jnxMbgSgwPacketAllocFail, jnxMbgSgwPacketSendFail=jnxMbgSgwPacketSendFail, jnxMbgSgwIPVerErrRx=jnxMbgSgwIPVerErrRx, jnxMbgSgwIPProtoErrRx=jnxMbgSgwIPProtoErrRx, jnxMbgSgwGTPPortErrRx=jnxMbgSgwGTPPortErrRx, jnxMbgSgwGTPUnknVerRx=jnxMbgSgwGTPUnknVerRx, jnxMbgSgwPcktLenErrRx=jnxMbgSgwPcktLenErrRx, jnxMbgSgwUnknMsgRx=jnxMbgSgwUnknMsgRx, jnxMbgSgwProtocolErrRx=jnxMbgSgwProtocolErrRx, jnxMbgSgwUnSupportedMsgRx=jnxMbgSgwUnSupportedMsgRx, jnxMbgSgwT3RespTmrExpRx=jnxMbgSgwT3RespTmrExpRx, jnxMbgSgwV2NumMsgRx=jnxMbgSgwV2NumMsgRx, jnxMbgSgwV2NumMsgTx=jnxMbgSgwV2NumMsgTx, jnxMbgSgwV2NumBytesRx=jnxMbgSgwV2NumBytesRx, jnxMbgSgwV2NumBytesTx=jnxMbgSgwV2NumBytesTx, jnxMbgSgwV2EchoReqRx=jnxMbgSgwV2EchoReqRx, jnxMbgSgwV2EchoReqTx=jnxMbgSgwV2EchoReqTx, jnxMbgSgwV2EchoRespRx=jnxMbgSgwV2EchoRespRx, jnxMbgSgwV2EchoRespTx=jnxMbgSgwV2EchoRespTx, jnxMbgSgwV2VerNotSupRx=jnxMbgSgwV2VerNotSupRx, jnxMbgSgwV2VerNotSupTx=jnxMbgSgwV2VerNotSupTx, jnxMbgSgwCreateSessReqRx=jnxMbgSgwCreateSessReqRx, jnxMbgSgwCreateSessReqTx=jnxMbgSgwCreateSessReqTx)
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", jnxMbgSgwCreateSessRspRx=jnxMbgSgwCreateSessRspRx, jnxMbgSgwCreateSessRspTx=jnxMbgSgwCreateSessRspTx, jnxMbgSgwModBrReqRx=jnxMbgSgwModBrReqRx, jnxMbgSgwModBrReqTx=jnxMbgSgwModBrReqTx, jnxMbgSgwModBrRspRx=jnxMbgSgwModBrRspRx, jnxMbgSgwModBrRspTx=jnxMbgSgwModBrRspTx, jnxMbgSgwDelSessReqRx=jnxMbgSgwDelSessReqRx, jnxMbgSgwDelSessReqTx=jnxMbgSgwDelSessReqTx, jnxMbgSgwDelSessRspRx=jnxMbgSgwDelSessRspRx, jnxMbgSgwDelSessRspTx=jnxMbgSgwDelSessRspTx, jnxMbgSgwCrtBrReqRx=jnxMbgSgwCrtBrReqRx, jnxMbgSgwCrtBrReqTx=jnxMbgSgwCrtBrReqTx, jnxMbgSgwCrtBrRspRx=jnxMbgSgwCrtBrRspRx, jnxMbgSgwCrtBrRspTx=jnxMbgSgwCrtBrRspTx, jnxMbgSgwUpdBrReqRx=jnxMbgSgwUpdBrReqRx, jnxMbgSgwUpdBrReqTx=jnxMbgSgwUpdBrReqTx, jnxMbgSgwUpdBrRspRx=jnxMbgSgwUpdBrRspRx, jnxMbgSgwUpdBrRspTx=jnxMbgSgwUpdBrRspTx, jnxMbgSgwDelBrReqRx=jnxMbgSgwDelBrReqRx, jnxMbgSgwDelBrReqTx=jnxMbgSgwDelBrReqTx, jnxMbgSgwDelBrRspRx=jnxMbgSgwDelBrRspRx, jnxMbgSgwDelBrRspTx=jnxMbgSgwDelBrRspTx, jnxMbgSgwDelConnSetReqRx=jnxMbgSgwDelConnSetReqRx, jnxMbgSgwDelConnSetReqTx=jnxMbgSgwDelConnSetReqTx, jnxMbgSgwDelConnSetRspRx=jnxMbgSgwDelConnSetRspRx, jnxMbgSgwDelConnSetRspTx=jnxMbgSgwDelConnSetRspTx, jnxMbgSgwUpdConnSetReqRx=jnxMbgSgwUpdConnSetReqRx, jnxMbgSgwUpdConnSetReqTx=jnxMbgSgwUpdConnSetReqTx, jnxMbgSgwUpdConnSetRspRx=jnxMbgSgwUpdConnSetRspRx, jnxMbgSgwUpdConnSetRspTx=jnxMbgSgwUpdConnSetRspTx, jnxMbgSgwModBrCmdRx=jnxMbgSgwModBrCmdRx, jnxMbgSgwModBrCmdTx=jnxMbgSgwModBrCmdTx, jnxMbgSgwModBrFlrIndRx=jnxMbgSgwModBrFlrIndRx, jnxMbgSgwModBrFlrIndTx=jnxMbgSgwModBrFlrIndTx, jnxMbgSgwDelBrCmdRx=jnxMbgSgwDelBrCmdRx, jnxMbgSgwDelBrCmdTx=jnxMbgSgwDelBrCmdTx, jnxMbgSgwDelBrFlrIndRx=jnxMbgSgwDelBrFlrIndRx, jnxMbgSgwDelBrFlrIndTx=jnxMbgSgwDelBrFlrIndTx, jnxMbgSgwBrResCmdRx=jnxMbgSgwBrResCmdRx, jnxMbgSgwBrResCmdTx=jnxMbgSgwBrResCmdTx, jnxMbgSgwBrResFlrIndRx=jnxMbgSgwBrResFlrIndRx, jnxMbgSgwBrResFlrIndTx=jnxMbgSgwBrResFlrIndTx, jnxMbgSgwRelAcsBrReqRx=jnxMbgSgwRelAcsBrReqRx, jnxMbgSgwRelAcsBrReqTx=jnxMbgSgwRelAcsBrReqTx, jnxMbgSgwRelAcsBrRespRx=jnxMbgSgwRelAcsBrRespRx, jnxMbgSgwRelAcsBrRespTx=jnxMbgSgwRelAcsBrRespTx, jnxMbgSgwCrIndTunReqRx=jnxMbgSgwCrIndTunReqRx, jnxMbgSgwCrIndTunReqTx=jnxMbgSgwCrIndTunReqTx, jnxMbgSgwCrIndTunRespRx=jnxMbgSgwCrIndTunRespRx, jnxMbgSgwCrIndTunRespTx=jnxMbgSgwCrIndTunRespTx, jnxMbgSgwDelIndTunReqRx=jnxMbgSgwDelIndTunReqRx, jnxMbgSgwDelIndTunReqTx=jnxMbgSgwDelIndTunReqTx, jnxMbgSgwDelIndTunRespRx=jnxMbgSgwDelIndTunRespRx, jnxMbgSgwDelIndTunRespTx=jnxMbgSgwDelIndTunRespTx, jnxMbgSgwDlDataNotifRx=jnxMbgSgwDlDataNotifRx, jnxMbgSgwDlDataNotifTx=jnxMbgSgwDlDataNotifTx, jnxMbgSgwDlDataAckRx=jnxMbgSgwDlDataAckRx, jnxMbgSgwDlDataAckTx=jnxMbgSgwDlDataAckTx, jnxMbgSgwDlDataNotiFlrIndRx=jnxMbgSgwDlDataNotiFlrIndRx, jnxMbgSgwDlDataNotiFlrIndTx=jnxMbgSgwDlDataNotiFlrIndTx, jnxMbgSgwStopPagingIndRx=jnxMbgSgwStopPagingIndRx, jnxMbgSgwStopPagingIndTx=jnxMbgSgwStopPagingIndTx, jnxMbgSgwGtpV2ICsPageRx=jnxMbgSgwGtpV2ICsPageRx, jnxMbgSgwGtpV2ICsPageTx=jnxMbgSgwGtpV2ICsPageTx, jnxMbgSgwGtpV2ICsReqAcceptRx=jnxMbgSgwGtpV2ICsReqAcceptRx, jnxMbgSgwGtpV2ICsReqAcceptTx=jnxMbgSgwGtpV2ICsReqAcceptTx, jnxMbgSgwGtpV2ICsAcceptPartRx=jnxMbgSgwGtpV2ICsAcceptPartRx, jnxMbgSgwGtpV2ICsAcceptPartTx=jnxMbgSgwGtpV2ICsAcceptPartTx, jnxMbgSgwGtpV2ICsNewPTNPrefRx=jnxMbgSgwGtpV2ICsNewPTNPrefRx, jnxMbgSgwGtpV2ICsNewPTNPrefTx=jnxMbgSgwGtpV2ICsNewPTNPrefTx, jnxMbgSgwGtpV2ICsNewPTSIAdbrRx=jnxMbgSgwGtpV2ICsNewPTSIAdbrRx, jnxMbgSgwGtpV2ICsNewPTSIAdbrTx=jnxMbgSgwGtpV2ICsNewPTSIAdbrTx, jnxMbgSgwGtpV2ICsCtxNotFndRx=jnxMbgSgwGtpV2ICsCtxNotFndRx, jnxMbgSgwGtpV2ICsCtxNotFndTx=jnxMbgSgwGtpV2ICsCtxNotFndTx, jnxMbgSgwGtpV2ICsInvMsgFmtRx=jnxMbgSgwGtpV2ICsInvMsgFmtRx, jnxMbgSgwGtpV2ICsInvMsgFmtTx=jnxMbgSgwGtpV2ICsInvMsgFmtTx, jnxMbgSgwGtpV2ICsVerNotSuppRx=jnxMbgSgwGtpV2ICsVerNotSuppRx, jnxMbgSgwGtpV2ICsVerNotSuppTx=jnxMbgSgwGtpV2ICsVerNotSuppTx, jnxMbgSgwGtpV2ICsInvLenRx=jnxMbgSgwGtpV2ICsInvLenRx, jnxMbgSgwGtpV2ICsInvLenTx=jnxMbgSgwGtpV2ICsInvLenTx, jnxMbgSgwGtpV2ICsServNotSuppRx=jnxMbgSgwGtpV2ICsServNotSuppRx, jnxMbgSgwGtpV2ICsServNotSuppTx=jnxMbgSgwGtpV2ICsServNotSuppTx, jnxMbgSgwGtpV2ICsManIEIncorrRx=jnxMbgSgwGtpV2ICsManIEIncorrRx, jnxMbgSgwGtpV2ICsManIEIncorrTx=jnxMbgSgwGtpV2ICsManIEIncorrTx, jnxMbgSgwGtpV2ICsManIEMissRx=jnxMbgSgwGtpV2ICsManIEMissRx, jnxMbgSgwGtpV2ICsManIEMissTx=jnxMbgSgwGtpV2ICsManIEMissTx, jnxMbgSgwGtpV2ICsOptIEIncorrRx=jnxMbgSgwGtpV2ICsOptIEIncorrRx, jnxMbgSgwGtpV2ICsOptIEIncorrTx=jnxMbgSgwGtpV2ICsOptIEIncorrTx, jnxMbgSgwGtpV2ICsSysFailRx=jnxMbgSgwGtpV2ICsSysFailRx, jnxMbgSgwGtpV2ICsSysFailTx=jnxMbgSgwGtpV2ICsSysFailTx, jnxMbgSgwGtpV2ICsNoResRx=jnxMbgSgwGtpV2ICsNoResRx, jnxMbgSgwGtpV2ICsNoResTx=jnxMbgSgwGtpV2ICsNoResTx, jnxMbgSgwGtpV2ICsTFTSMANTErRx=jnxMbgSgwGtpV2ICsTFTSMANTErRx, jnxMbgSgwGtpV2ICsTFTSMANTErTx=jnxMbgSgwGtpV2ICsTFTSMANTErTx, jnxMbgSgwGtpV2ICsTFTSysErrRx=jnxMbgSgwGtpV2ICsTFTSysErrRx, jnxMbgSgwGtpV2ICsTFTSysErrTx=jnxMbgSgwGtpV2ICsTFTSysErrTx, jnxMbgSgwGtpV2ICsPkFltManErrRx=jnxMbgSgwGtpV2ICsPkFltManErrRx, jnxMbgSgwGtpV2ICsPkFltManErrTx=jnxMbgSgwGtpV2ICsPkFltManErrTx, jnxMbgSgwGtpV2ICsPkFltSynErrRx=jnxMbgSgwGtpV2ICsPkFltSynErrRx, jnxMbgSgwGtpV2ICsPkFltSynErrTx=jnxMbgSgwGtpV2ICsPkFltSynErrTx, jnxMbgSgwGtpV2ICsMisUnknAPNRx=jnxMbgSgwGtpV2ICsMisUnknAPNRx, jnxMbgSgwGtpV2ICsMisUnknAPNTx=jnxMbgSgwGtpV2ICsMisUnknAPNTx, jnxMbgSgwGtpV2ICsUnexpRptIERx=jnxMbgSgwGtpV2ICsUnexpRptIERx, jnxMbgSgwGtpV2ICsUnexpRptIETx=jnxMbgSgwGtpV2ICsUnexpRptIETx, jnxMbgSgwGtpV2ICsGREKeyNtFdRx=jnxMbgSgwGtpV2ICsGREKeyNtFdRx, jnxMbgSgwGtpV2ICsGREKeyNtFdTx=jnxMbgSgwGtpV2ICsGREKeyNtFdTx, jnxMbgSgwGtpV2ICsRelocFailRx=jnxMbgSgwGtpV2ICsRelocFailRx, jnxMbgSgwGtpV2ICsRelocFailTx=jnxMbgSgwGtpV2ICsRelocFailTx, jnxMbgSgwGtpV2ICsDeniedINRatRx=jnxMbgSgwGtpV2ICsDeniedINRatRx, jnxMbgSgwGtpV2ICsDeniedINRatTx=jnxMbgSgwGtpV2ICsDeniedINRatTx, jnxMbgSgwGtpV2ICsPTNotSuppRx=jnxMbgSgwGtpV2ICsPTNotSuppRx, jnxMbgSgwGtpV2ICsPTNotSuppTx=jnxMbgSgwGtpV2ICsPTNotSuppTx, jnxMbgSgwGtpV2ICsAllDynAdOccRx=jnxMbgSgwGtpV2ICsAllDynAdOccRx, jnxMbgSgwGtpV2ICsAllDynAdOccTx=jnxMbgSgwGtpV2ICsAllDynAdOccTx, jnxMbgSgwGtpV2ICsNOTFTUECTXRx=jnxMbgSgwGtpV2ICsNOTFTUECTXRx, jnxMbgSgwGtpV2ICsNOTFTUECTXTx=jnxMbgSgwGtpV2ICsNOTFTUECTXTx, jnxMbgSgwGtpV2ICsProtoNtSupRx=jnxMbgSgwGtpV2ICsProtoNtSupRx, jnxMbgSgwGtpV2ICsProtoNtSupTx=jnxMbgSgwGtpV2ICsProtoNtSupTx, jnxMbgSgwGtpV2ICsUENotRespRx=jnxMbgSgwGtpV2ICsUENotRespRx, jnxMbgSgwGtpV2ICsUENotRespTx=jnxMbgSgwGtpV2ICsUENotRespTx, jnxMbgSgwGtpV2ICsUERefusesRx=jnxMbgSgwGtpV2ICsUERefusesRx, jnxMbgSgwGtpV2ICsUERefusesTx=jnxMbgSgwGtpV2ICsUERefusesTx, jnxMbgSgwGtpV2ICsServDeniedRx=jnxMbgSgwGtpV2ICsServDeniedRx, jnxMbgSgwGtpV2ICsServDeniedTx=jnxMbgSgwGtpV2ICsServDeniedTx, jnxMbgSgwGtpV2ICsUnabPageUERx=jnxMbgSgwGtpV2ICsUnabPageUERx, jnxMbgSgwGtpV2ICsUnabPageUETx=jnxMbgSgwGtpV2ICsUnabPageUETx, jnxMbgSgwGtpV2ICsNoMemRx=jnxMbgSgwGtpV2ICsNoMemRx)
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", jnxMbgSgwGtpV2ICsNoMemTx=jnxMbgSgwGtpV2ICsNoMemTx, jnxMbgSgwGtpV2ICsUserAUTHFlRx=jnxMbgSgwGtpV2ICsUserAUTHFlRx, jnxMbgSgwGtpV2ICsUserAUTHFlTx=jnxMbgSgwGtpV2ICsUserAUTHFlTx, jnxMbgSgwGtpV2ICsAPNAcsDenRx=jnxMbgSgwGtpV2ICsAPNAcsDenRx, jnxMbgSgwGtpV2ICsAPNAcsDenTx=jnxMbgSgwGtpV2ICsAPNAcsDenTx, jnxMbgSgwGtpV2ICsReqRejRx=jnxMbgSgwGtpV2ICsReqRejRx, jnxMbgSgwGtpV2ICsReqRejTx=jnxMbgSgwGtpV2ICsReqRejTx, jnxMbgSgwGtpV2ICsPTMSISigMMRx=jnxMbgSgwGtpV2ICsPTMSISigMMRx, jnxMbgSgwGtpV2ICsPTMSISigMMTx=jnxMbgSgwGtpV2ICsPTMSISigMMTx, jnxMbgSgwGtpV2ICsIMSINotKnRx=jnxMbgSgwGtpV2ICsIMSINotKnRx, jnxMbgSgwGtpV2ICsIMSINotKnTx=jnxMbgSgwGtpV2ICsIMSINotKnTx, jnxMbgSgwGtpV2ICsCondIEMsRx=jnxMbgSgwGtpV2ICsCondIEMsRx, jnxMbgSgwGtpV2ICsCondIEMsTx=jnxMbgSgwGtpV2ICsCondIEMsTx, jnxMbgSgwGtpV2ICsAPNResTIncRx=jnxMbgSgwGtpV2ICsAPNResTIncRx, jnxMbgSgwGtpV2ICsAPNResTIncTx=jnxMbgSgwGtpV2ICsAPNResTIncTx, jnxMbgSgwGtpV2ICsUnknownRx=jnxMbgSgwGtpV2ICsUnknownRx, jnxMbgSgwGtpV2ICsUnknownTx=jnxMbgSgwGtpV2ICsUnknownTx, jnxMbgSgwGtpV2ICsLclDetRx=jnxMbgSgwGtpV2ICsLclDetRx, jnxMbgSgwGtpV2ICsLclDetTx=jnxMbgSgwGtpV2ICsLclDetTx, jnxMbgSgwGtpV2ICsCmpDetRx=jnxMbgSgwGtpV2ICsCmpDetRx, jnxMbgSgwGtpV2ICsCmpDetTx=jnxMbgSgwGtpV2ICsCmpDetTx, jnxMbgSgwGtpV2ICsRATChgRx=jnxMbgSgwGtpV2ICsRATChgRx, jnxMbgSgwGtpV2ICsRATChgTx=jnxMbgSgwGtpV2ICsRATChgTx, jnxMbgSgwGtpV2ICsISRDeactRx=jnxMbgSgwGtpV2ICsISRDeactRx, jnxMbgSgwGtpV2ICsISRDeactTx=jnxMbgSgwGtpV2ICsISRDeactTx, jnxMbgSgwGtpV2ICsEIFRNCEnRx=jnxMbgSgwGtpV2ICsEIFRNCEnRx, jnxMbgSgwGtpV2ICsEIFRNCEnTx=jnxMbgSgwGtpV2ICsEIFRNCEnTx, jnxMbgSgwGtpV2ICsSemErTADRx=jnxMbgSgwGtpV2ICsSemErTADRx, jnxMbgSgwGtpV2ICsSemErTADTx=jnxMbgSgwGtpV2ICsSemErTADTx, jnxMbgSgwGtpV2ICsSynErTADRx=jnxMbgSgwGtpV2ICsSynErTADRx, jnxMbgSgwGtpV2ICsSynErTADTx=jnxMbgSgwGtpV2ICsSynErTADTx, jnxMbgSgwGtpV2ICsRMValRcvRx=jnxMbgSgwGtpV2ICsRMValRcvRx, jnxMbgSgwGtpV2ICsRMValRcvTx=jnxMbgSgwGtpV2ICsRMValRcvTx, jnxMbgSgwGtpV2ICsRPrNtRspRx=jnxMbgSgwGtpV2ICsRPrNtRspRx, jnxMbgSgwGtpV2ICsRPrNtRspTx=jnxMbgSgwGtpV2ICsRPrNtRspTx, jnxMbgSgwGtpV2ICsColNWReqRx=jnxMbgSgwGtpV2ICsColNWReqRx, jnxMbgSgwGtpV2ICsColNWReqTx=jnxMbgSgwGtpV2ICsColNWReqTx, jnxMbgSgwGtpV2ICsUnPgUESusRx=jnxMbgSgwGtpV2ICsUnPgUESusRx, jnxMbgSgwGtpV2ICsUnPgUESusTx=jnxMbgSgwGtpV2ICsUnPgUESusTx, jnxMbgSgwGtpV2ICsInvTotLenRx=jnxMbgSgwGtpV2ICsInvTotLenRx, jnxMbgSgwGtpV2ICsInvTotLenTx=jnxMbgSgwGtpV2ICsInvTotLenTx, jnxMbgSgwGtpV2ICsDtForNtSupRx=jnxMbgSgwGtpV2ICsDtForNtSupRx, jnxMbgSgwGtpV2ICsDtForNtSupTx=jnxMbgSgwGtpV2ICsDtForNtSupTx, jnxMbgSgwGtpV2ICsInReFRePrRx=jnxMbgSgwGtpV2ICsInReFRePrRx, jnxMbgSgwGtpV2ICsInReFRePrTx=jnxMbgSgwGtpV2ICsInReFRePrTx, jnxMbgSgwGtpV2ICsInvPrRx=jnxMbgSgwGtpV2ICsInvPrRx, jnxMbgSgwGtpV2ICsInvPrTx=jnxMbgSgwGtpV2ICsInvPrTx, jnxMbgSgwGtpV1ProtocolErrRx=jnxMbgSgwGtpV1ProtocolErrRx, jnxMbgSgwGtpV1UnSupMsgRx=jnxMbgSgwGtpV1UnSupMsgRx, jnxMbgSgwGtpV1T3RespTmrExpRx=jnxMbgSgwGtpV1T3RespTmrExpRx, jnxMbgSgwGtpV1EndMarkerRx=jnxMbgSgwGtpV1EndMarkerRx, jnxMbgSgwGtpV1EndMarkerTx=jnxMbgSgwGtpV1EndMarkerTx, jnxMbgSgwGtpV1EchoReqRx=jnxMbgSgwGtpV1EchoReqRx, jnxMbgSgwGtpV1EchoReqTx=jnxMbgSgwGtpV1EchoReqTx, jnxMbgSgwGtpV1EchoRespRx=jnxMbgSgwGtpV1EchoRespRx, jnxMbgSgwGtpV1EchoRespTx=jnxMbgSgwGtpV1EchoRespTx, jnxMbgSgwGtpV1ErrIndRx=jnxMbgSgwGtpV1ErrIndRx, jnxMbgSgwGtpV1ErrIndTx=jnxMbgSgwGtpV1ErrIndTx, jnxMbgSgwSuspNotifRx=jnxMbgSgwSuspNotifRx, jnxMbgSgwSuspNotifTx=jnxMbgSgwSuspNotifTx, jnxMbgSgwSuspAckRx=jnxMbgSgwSuspAckRx, jnxMbgSgwSuspAckTx=jnxMbgSgwSuspAckTx, jnxMbgSgwResumeNotifRx=jnxMbgSgwResumeNotifRx, jnxMbgSgwResumeNotifTx=jnxMbgSgwResumeNotifTx, jnxMbgSgwResumeAckRx=jnxMbgSgwResumeAckRx, jnxMbgSgwResumeAckTx=jnxMbgSgwResumeAckTx, jnxMbgSgwS11PiggybackMsgRx=jnxMbgSgwS11PiggybackMsgRx, jnxMbgSgwS11PiggybackMsgTx=jnxMbgSgwS11PiggybackMsgTx, jnxMbgSgwS4PiggybackMsgRx=jnxMbgSgwS4PiggybackMsgRx, jnxMbgSgwS4PiggybackMsgTx=jnxMbgSgwS4PiggybackMsgTx, jnxMbgSgwS5PiggybackMsgRx=jnxMbgSgwS5PiggybackMsgRx, jnxMbgSgwS5PiggybackMsgTx=jnxMbgSgwS5PiggybackMsgTx, jnxMbgSgwGtpNotificationVars=jnxMbgSgwGtpNotificationVars, jnxMbgSgwGtpPeerName=jnxMbgSgwGtpPeerName, jnxMbgSgwGtpAlarmStatCounter=jnxMbgSgwGtpAlarmStatCounter, jnxMbgSgwGtpInterfaceType=jnxMbgSgwGtpInterfaceType, jnxMbgSgwGtpGwName=jnxMbgSgwGtpGwName, jnxMbgSgwGtpGwIndex=jnxMbgSgwGtpGwIndex, jnxMbgSgwGtpIfStatsTable=jnxMbgSgwGtpIfStatsTable, jnxMbgSgwGtpIfStatsEntry=jnxMbgSgwGtpIfStatsEntry, jnxMbgSgwIfIndex=jnxMbgSgwIfIndex, jnxMbgSgwIfType=jnxMbgSgwIfType, jnxMbgSgwIfRxPacketsDropped=jnxMbgSgwIfRxPacketsDropped, jnxMbgSgwIfPacketAllocFail=jnxMbgSgwIfPacketAllocFail, jnxMbgSgwIfPacketSendFail=jnxMbgSgwIfPacketSendFail, jnxMbgSgwIfIPVerErrRx=jnxMbgSgwIfIPVerErrRx, jnxMbgSgwIfIPProtoErrRx=jnxMbgSgwIfIPProtoErrRx, jnxMbgSgwIfGTPPortErrRx=jnxMbgSgwIfGTPPortErrRx, jnxMbgSgwIfGTPUnknVerRx=jnxMbgSgwIfGTPUnknVerRx, jnxMbgSgwIfPcktLenErrRx=jnxMbgSgwIfPcktLenErrRx, jnxMbgSgwIfUnknMsgRx=jnxMbgSgwIfUnknMsgRx, jnxMbgSgwIfProtocolErrRx=jnxMbgSgwIfProtocolErrRx, jnxMbgSgwIfUnSupportedMsgRx=jnxMbgSgwIfUnSupportedMsgRx, jnxMbgSgwIfT3RespTmrExpRx=jnxMbgSgwIfT3RespTmrExpRx, jnxMbgSgwIfV2NumMsgRx=jnxMbgSgwIfV2NumMsgRx, jnxMbgSgwIfV2NumMsgTx=jnxMbgSgwIfV2NumMsgTx, jnxMbgSgwIfV2NumBytesRx=jnxMbgSgwIfV2NumBytesRx, jnxMbgSgwIfV2NumBytesTx=jnxMbgSgwIfV2NumBytesTx, jnxMbgSgwIfV2EchoReqRx=jnxMbgSgwIfV2EchoReqRx, jnxMbgSgwIfV2EchoReqTx=jnxMbgSgwIfV2EchoReqTx, jnxMbgSgwIfV2EchoRespRx=jnxMbgSgwIfV2EchoRespRx, jnxMbgSgwIfV2EchoRespTx=jnxMbgSgwIfV2EchoRespTx, jnxMbgSgwIfV2VerNotSupRx=jnxMbgSgwIfV2VerNotSupRx, jnxMbgSgwIfV2VerNotSupTx=jnxMbgSgwIfV2VerNotSupTx, jnxMbgSgwIfCreateSessReqRx=jnxMbgSgwIfCreateSessReqRx, jnxMbgSgwIfCreateSessReqTx=jnxMbgSgwIfCreateSessReqTx, jnxMbgSgwIfCreateSessRspRx=jnxMbgSgwIfCreateSessRspRx, jnxMbgSgwIfCreateSessRspTx=jnxMbgSgwIfCreateSessRspTx, jnxMbgSgwIfModBrReqRx=jnxMbgSgwIfModBrReqRx, jnxMbgSgwIfModBrReqTx=jnxMbgSgwIfModBrReqTx, jnxMbgSgwIfModBrRspRx=jnxMbgSgwIfModBrRspRx, jnxMbgSgwIfModBrRspTx=jnxMbgSgwIfModBrRspTx, jnxMbgSgwIfDelSessReqRx=jnxMbgSgwIfDelSessReqRx, jnxMbgSgwIfDelSessReqTx=jnxMbgSgwIfDelSessReqTx, jnxMbgSgwIfDelSessRspRx=jnxMbgSgwIfDelSessRspRx, jnxMbgSgwIfDelSessRspTx=jnxMbgSgwIfDelSessRspTx, jnxMbgSgwIfCrtBrReqRx=jnxMbgSgwIfCrtBrReqRx, jnxMbgSgwIfCrtBrReqTx=jnxMbgSgwIfCrtBrReqTx, jnxMbgSgwIfCrtBrRspRx=jnxMbgSgwIfCrtBrRspRx, jnxMbgSgwIfCrtBrRspTx=jnxMbgSgwIfCrtBrRspTx, jnxMbgSgwIfUpdBrReqRx=jnxMbgSgwIfUpdBrReqRx, jnxMbgSgwIfUpdBrReqTx=jnxMbgSgwIfUpdBrReqTx, jnxMbgSgwIfUpdBrRspRx=jnxMbgSgwIfUpdBrRspRx, jnxMbgSgwIfUpdBrRspTx=jnxMbgSgwIfUpdBrRspTx, jnxMbgSgwIfDelBrReqRx=jnxMbgSgwIfDelBrReqRx, jnxMbgSgwIfDelBrReqTx=jnxMbgSgwIfDelBrReqTx, jnxMbgSgwIfDelBrRspRx=jnxMbgSgwIfDelBrRspRx)
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", jnxMbgSgwIfDelBrRspTx=jnxMbgSgwIfDelBrRspTx, jnxMbgSgwIfDelConnSetReqRx=jnxMbgSgwIfDelConnSetReqRx, jnxMbgSgwIfDelConnSetReqTx=jnxMbgSgwIfDelConnSetReqTx, jnxMbgSgwIfDelConnSetRspRx=jnxMbgSgwIfDelConnSetRspRx, jnxMbgSgwIfDelConnSetRspTx=jnxMbgSgwIfDelConnSetRspTx, jnxMbgSgwIfUpdConnSetReqRx=jnxMbgSgwIfUpdConnSetReqRx, jnxMbgSgwIfUpdConnSetReqTx=jnxMbgSgwIfUpdConnSetReqTx, jnxMbgSgwIfUpdConnSetRspRx=jnxMbgSgwIfUpdConnSetRspRx, jnxMbgSgwIfUpdConnSetRspTx=jnxMbgSgwIfUpdConnSetRspTx, jnxMbgSgwIfModBrCmdRx=jnxMbgSgwIfModBrCmdRx, jnxMbgSgwIfModBrCmdTx=jnxMbgSgwIfModBrCmdTx, jnxMbgSgwIfModBrFlrIndRx=jnxMbgSgwIfModBrFlrIndRx, jnxMbgSgwIfModBrFlrIndTx=jnxMbgSgwIfModBrFlrIndTx, jnxMbgSgwIfDelBrCmdRx=jnxMbgSgwIfDelBrCmdRx, jnxMbgSgwIfDelBrCmdTx=jnxMbgSgwIfDelBrCmdTx, jnxMbgSgwIfDelBrFlrIndRx=jnxMbgSgwIfDelBrFlrIndRx, jnxMbgSgwIfDelBrFlrIndTx=jnxMbgSgwIfDelBrFlrIndTx, jnxMbgSgwIfBrResCmdRx=jnxMbgSgwIfBrResCmdRx, jnxMbgSgwIfBrResCmdTx=jnxMbgSgwIfBrResCmdTx, jnxMbgSgwIfBrResFlrIndRx=jnxMbgSgwIfBrResFlrIndRx, jnxMbgSgwIfBrResFlrIndTx=jnxMbgSgwIfBrResFlrIndTx, jnxMbgSgwIfRelAcsBrReqRx=jnxMbgSgwIfRelAcsBrReqRx, jnxMbgSgwIfRelAcsBrReqTx=jnxMbgSgwIfRelAcsBrReqTx, jnxMbgSgwIfRelAcsBrRespRx=jnxMbgSgwIfRelAcsBrRespRx, jnxMbgSgwIfRelAcsBrRespTx=jnxMbgSgwIfRelAcsBrRespTx, jnxMbgSgwIfCrIndTunReqRx=jnxMbgSgwIfCrIndTunReqRx, jnxMbgSgwIfCrIndTunReqTx=jnxMbgSgwIfCrIndTunReqTx, jnxMbgSgwIfCrIndTunRespRx=jnxMbgSgwIfCrIndTunRespRx, jnxMbgSgwIfCrIndTunRespTx=jnxMbgSgwIfCrIndTunRespTx, jnxMbgSgwIfDelIndTunReqRx=jnxMbgSgwIfDelIndTunReqRx, jnxMbgSgwIfDelIndTunReqTx=jnxMbgSgwIfDelIndTunReqTx, jnxMbgSgwIfDelIndTunRespRx=jnxMbgSgwIfDelIndTunRespRx, jnxMbgSgwIfDelIndTunRespTx=jnxMbgSgwIfDelIndTunRespTx, jnxMbgSgwIfDlDataNotifRx=jnxMbgSgwIfDlDataNotifRx, jnxMbgSgwIfDlDataNotifTx=jnxMbgSgwIfDlDataNotifTx, jnxMbgSgwIfDlDataAckRx=jnxMbgSgwIfDlDataAckRx, jnxMbgSgwIfDlDataAckTx=jnxMbgSgwIfDlDataAckTx, jnxMbgSgwIfDlDataNotiFlrIndRx=jnxMbgSgwIfDlDataNotiFlrIndRx, jnxMbgSgwIfDlDataNotiFlrIndTx=jnxMbgSgwIfDlDataNotiFlrIndTx, jnxMbgSgwIfStopPagingIndRx=jnxMbgSgwIfStopPagingIndRx, jnxMbgSgwIfStopPagingIndTx=jnxMbgSgwIfStopPagingIndTx, jnxMbgSgwIfGtpV2ICsReqAcceptRx=jnxMbgSgwIfGtpV2ICsReqAcceptRx, jnxMbgSgwIfGtpV2ICsReqAcceptTx=jnxMbgSgwIfGtpV2ICsReqAcceptTx, jnxMbgSgwIfGtpV2ICsAcceptPartRx=jnxMbgSgwIfGtpV2ICsAcceptPartRx, jnxMbgSgwIfGtpV2ICsAcceptPartTx=jnxMbgSgwIfGtpV2ICsAcceptPartTx, jnxMbgSgwIfGtpV2ICsNewPTNPrefRx=jnxMbgSgwIfGtpV2ICsNewPTNPrefRx, jnxMbgSgwIfGtpV2ICsNewPTNPrefTx=jnxMbgSgwIfGtpV2ICsNewPTNPrefTx, jnxMbgSgwIfGtpV2ICsNPTSIAdbrRx=jnxMbgSgwIfGtpV2ICsNPTSIAdbrRx, jnxMbgSgwIfGtpV2ICsNPTSIAdbrTx=jnxMbgSgwIfGtpV2ICsNPTSIAdbrTx, jnxMbgSgwIfGtpV2ICsCtxNotFndRx=jnxMbgSgwIfGtpV2ICsCtxNotFndRx, jnxMbgSgwIfGtpV2ICsCtxNotFndTx=jnxMbgSgwIfGtpV2ICsCtxNotFndTx, jnxMbgSgwIfGtpV2ICsInvMsgFmtRx=jnxMbgSgwIfGtpV2ICsInvMsgFmtRx, jnxMbgSgwIfGtpV2ICsInvMsgFmtTx=jnxMbgSgwIfGtpV2ICsInvMsgFmtTx, jnxMbgSgwIfGtpV2ICsVerNotSuppRx=jnxMbgSgwIfGtpV2ICsVerNotSuppRx, jnxMbgSgwIfGtpV2ICsVerNotSuppTx=jnxMbgSgwIfGtpV2ICsVerNotSuppTx, jnxMbgSgwIfGtpV2ICsInvLenRx=jnxMbgSgwIfGtpV2ICsInvLenRx, jnxMbgSgwIfGtpV2ICsInvLenTx=jnxMbgSgwIfGtpV2ICsInvLenTx, jnxMbgSgwIfGtpV2ICsSrvNotSuppRx=jnxMbgSgwIfGtpV2ICsSrvNotSuppRx, jnxMbgSgwIfGtpV2ICsSrvNotSuppTx=jnxMbgSgwIfGtpV2ICsSrvNotSuppTx, jnxMbgSgwIfGtpV2ICsManIEIncorRx=jnxMbgSgwIfGtpV2ICsManIEIncorRx, jnxMbgSgwIfGtpV2ICsManIEIncorTx=jnxMbgSgwIfGtpV2ICsManIEIncorTx, jnxMbgSgwIfGtpV2ICsManIEMissRx=jnxMbgSgwIfGtpV2ICsManIEMissRx, jnxMbgSgwIfGtpV2ICsManIEMissTx=jnxMbgSgwIfGtpV2ICsManIEMissTx, jnxMbgSgwIfGtpV2ICsOptIEIncorRx=jnxMbgSgwIfGtpV2ICsOptIEIncorRx, jnxMbgSgwIfGtpV2ICsOptIEIncorTx=jnxMbgSgwIfGtpV2ICsOptIEIncorTx, jnxMbgSgwIfGtpV2ICsSysFailRx=jnxMbgSgwIfGtpV2ICsSysFailRx, jnxMbgSgwIfGtpV2ICsSysFailTx=jnxMbgSgwIfGtpV2ICsSysFailTx, jnxMbgSgwIfGtpV2ICsNoResRx=jnxMbgSgwIfGtpV2ICsNoResRx, jnxMbgSgwIfGtpV2ICsNoResTx=jnxMbgSgwIfGtpV2ICsNoResTx, jnxMbgSgwIfGtpV2ICsTFTSMANTErRx=jnxMbgSgwIfGtpV2ICsTFTSMANTErRx, jnxMbgSgwIfGtpV2ICsTFTSMANTErTx=jnxMbgSgwIfGtpV2ICsTFTSMANTErTx, jnxMbgSgwIfGtpV2ICsTFTSysErrRx=jnxMbgSgwIfGtpV2ICsTFTSysErrRx, jnxMbgSgwIfGtpV2ICsTFTSysErrTx=jnxMbgSgwIfGtpV2ICsTFTSysErrTx, jnxMbgSgwIfGtpV2ICsPkFltManErRx=jnxMbgSgwIfGtpV2ICsPkFltManErRx, jnxMbgSgwIfGtpV2ICsPkFltManErTx=jnxMbgSgwIfGtpV2ICsPkFltManErTx, jnxMbgSgwIfGtpV2ICsPkFltSynErRx=jnxMbgSgwIfGtpV2ICsPkFltSynErRx, jnxMbgSgwIfGtpV2ICsPkFltSynErTx=jnxMbgSgwIfGtpV2ICsPkFltSynErTx, jnxMbgSgwIfGtpV2ICsMisUnknAPNRx=jnxMbgSgwIfGtpV2ICsMisUnknAPNRx, jnxMbgSgwIfGtpV2ICsMisUnknAPNTx=jnxMbgSgwIfGtpV2ICsMisUnknAPNTx, jnxMbgSgwIfGtpV2ICsUnexpRptIERx=jnxMbgSgwIfGtpV2ICsUnexpRptIERx, jnxMbgSgwIfGtpV2ICsUnexpRptIETx=jnxMbgSgwIfGtpV2ICsUnexpRptIETx, jnxMbgSgwIfGtpV2ICsGREKeyNtFdRx=jnxMbgSgwIfGtpV2ICsGREKeyNtFdRx, jnxMbgSgwIfGtpV2ICsGREKeyNtFdTx=jnxMbgSgwIfGtpV2ICsGREKeyNtFdTx, jnxMbgSgwIfGtpV2ICsRelocFailRx=jnxMbgSgwIfGtpV2ICsRelocFailRx, jnxMbgSgwIfGtpV2ICsRelocFailTx=jnxMbgSgwIfGtpV2ICsRelocFailTx, jnxMbgSgwIfGtpV2ICsDenINRatRx=jnxMbgSgwIfGtpV2ICsDenINRatRx, jnxMbgSgwIfGtpV2ICsDenINRatTx=jnxMbgSgwIfGtpV2ICsDenINRatTx, jnxMbgSgwIfGtpV2ICsPTNotSuppRx=jnxMbgSgwIfGtpV2ICsPTNotSuppRx, jnxMbgSgwIfGtpV2ICsPTNotSuppTx=jnxMbgSgwIfGtpV2ICsPTNotSuppTx, jnxMbgSgwIfGtpV2ICsAlDynAdOccRx=jnxMbgSgwIfGtpV2ICsAlDynAdOccRx, jnxMbgSgwIfGtpV2ICsAlDynAdOccTx=jnxMbgSgwIfGtpV2ICsAlDynAdOccTx, jnxMbgSgwIfGtpV2ICsNOTFTUECTXRx=jnxMbgSgwIfGtpV2ICsNOTFTUECTXRx, jnxMbgSgwIfGtpV2ICsNOTFTUECTXTx=jnxMbgSgwIfGtpV2ICsNOTFTUECTXTx, jnxMbgSgwIfGtpV2ICsProtoNtSupRx=jnxMbgSgwIfGtpV2ICsProtoNtSupRx, jnxMbgSgwIfGtpV2ICsProtoNtSupTx=jnxMbgSgwIfGtpV2ICsProtoNtSupTx, jnxMbgSgwIfGtpV2ICsUENotRespRx=jnxMbgSgwIfGtpV2ICsUENotRespRx, jnxMbgSgwIfGtpV2ICsUENotRespTx=jnxMbgSgwIfGtpV2ICsUENotRespTx, jnxMbgSgwIfGtpV2ICsUERefusesRx=jnxMbgSgwIfGtpV2ICsUERefusesRx, jnxMbgSgwIfGtpV2ICsUERefusesTx=jnxMbgSgwIfGtpV2ICsUERefusesTx, jnxMbgSgwIfGtpV2ICsServDeniedRx=jnxMbgSgwIfGtpV2ICsServDeniedRx, jnxMbgSgwIfGtpV2ICsServDeniedTx=jnxMbgSgwIfGtpV2ICsServDeniedTx, jnxMbgSgwIfGtpV2ICsUnabPageUERx=jnxMbgSgwIfGtpV2ICsUnabPageUERx, jnxMbgSgwIfGtpV2ICsUnabPageUETx=jnxMbgSgwIfGtpV2ICsUnabPageUETx, jnxMbgSgwIfGtpV2ICsNoMemRx=jnxMbgSgwIfGtpV2ICsNoMemRx, jnxMbgSgwIfGtpV2ICsNoMemTx=jnxMbgSgwIfGtpV2ICsNoMemTx, jnxMbgSgwIfGtpV2ICsUserAUTHFlRx=jnxMbgSgwIfGtpV2ICsUserAUTHFlRx, jnxMbgSgwIfGtpV2ICsUserAUTHFlTx=jnxMbgSgwIfGtpV2ICsUserAUTHFlTx, jnxMbgSgwIfGtpV2ICsAPNAcsDenRx=jnxMbgSgwIfGtpV2ICsAPNAcsDenRx, jnxMbgSgwIfGtpV2ICsAPNAcsDenTx=jnxMbgSgwIfGtpV2ICsAPNAcsDenTx, jnxMbgSgwIfGtpV2ICsReqRejRx=jnxMbgSgwIfGtpV2ICsReqRejRx, jnxMbgSgwIfGtpV2ICsReqRejTx=jnxMbgSgwIfGtpV2ICsReqRejTx, jnxMbgSgwIfGtpV2ICsPTMSISigMMRx=jnxMbgSgwIfGtpV2ICsPTMSISigMMRx, jnxMbgSgwIfGtpV2ICsPTMSISigMMTx=jnxMbgSgwIfGtpV2ICsPTMSISigMMTx, jnxMbgSgwIfGtpV2ICsIMSINotKnRx=jnxMbgSgwIfGtpV2ICsIMSINotKnRx, jnxMbgSgwIfGtpV2ICsIMSINotKnTx=jnxMbgSgwIfGtpV2ICsIMSINotKnTx, jnxMbgSgwIfGtpV2ICsCondIEMsRx=jnxMbgSgwIfGtpV2ICsCondIEMsRx, jnxMbgSgwIfGtpV2ICsCondIEMsTx=jnxMbgSgwIfGtpV2ICsCondIEMsTx, jnxMbgSgwIfGtpV2ICsAPNResTIncRx=jnxMbgSgwIfGtpV2ICsAPNResTIncRx, jnxMbgSgwIfGtpV2ICsAPNResTIncTx=jnxMbgSgwIfGtpV2ICsAPNResTIncTx, jnxMbgSgwIfGtpV2ICsUnknownRx=jnxMbgSgwIfGtpV2ICsUnknownRx, jnxMbgSgwIfGtpV2ICsUnknownTx=jnxMbgSgwIfGtpV2ICsUnknownTx, jnxMbgSgwIfGtpV2ICsLclDetRx=jnxMbgSgwIfGtpV2ICsLclDetRx, jnxMbgSgwIfGtpV2ICsLclDetTx=jnxMbgSgwIfGtpV2ICsLclDetTx, jnxMbgSgwIfGtpV2ICsCmpDetRx=jnxMbgSgwIfGtpV2ICsCmpDetRx, jnxMbgSgwIfGtpV2ICsCmpDetTx=jnxMbgSgwIfGtpV2ICsCmpDetTx, jnxMbgSgwIfGtpV2ICsRATChgRx=jnxMbgSgwIfGtpV2ICsRATChgRx, jnxMbgSgwIfGtpV2ICsRATChgTx=jnxMbgSgwIfGtpV2ICsRATChgTx)
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", jnxMbgSgwIfGtpV2ICsISRDeactRx=jnxMbgSgwIfGtpV2ICsISRDeactRx, jnxMbgSgwIfGtpV2ICsISRDeactTx=jnxMbgSgwIfGtpV2ICsISRDeactTx, jnxMbgSgwIfGtpV2ICsEIFRNCEnRx=jnxMbgSgwIfGtpV2ICsEIFRNCEnRx, jnxMbgSgwIfGtpV2ICsEIFRNCEnTx=jnxMbgSgwIfGtpV2ICsEIFRNCEnTx, jnxMbgSgwIfGtpV2ICsSemErTADRx=jnxMbgSgwIfGtpV2ICsSemErTADRx, jnxMbgSgwIfGtpV2ICsSemErTADTx=jnxMbgSgwIfGtpV2ICsSemErTADTx, jnxMbgSgwIfGtpV2ICsSynErTADRx=jnxMbgSgwIfGtpV2ICsSynErTADRx, jnxMbgSgwIfGtpV2ICsSynErTADTx=jnxMbgSgwIfGtpV2ICsSynErTADTx, jnxMbgSgwIfGtpV2ICsRMValRcvRx=jnxMbgSgwIfGtpV2ICsRMValRcvRx, jnxMbgSgwIfGtpV2ICsRMValRcvTx=jnxMbgSgwIfGtpV2ICsRMValRcvTx, jnxMbgSgwIfGtpV2ICsRPrNtRspRx=jnxMbgSgwIfGtpV2ICsRPrNtRspRx, jnxMbgSgwIfGtpV2ICsRPrNtRspTx=jnxMbgSgwIfGtpV2ICsRPrNtRspTx, jnxMbgSgwIfGtpV2ICsColNWReqRx=jnxMbgSgwIfGtpV2ICsColNWReqRx, jnxMbgSgwIfGtpV2ICsColNWReqTx=jnxMbgSgwIfGtpV2ICsColNWReqTx, jnxMbgSgwIfGtpV2ICsUnPgUESusRx=jnxMbgSgwIfGtpV2ICsUnPgUESusRx, jnxMbgSgwIfGtpV2ICsUnPgUESusTx=jnxMbgSgwIfGtpV2ICsUnPgUESusTx, jnxMbgSgwIfGtpV2ICsInvTotLenRx=jnxMbgSgwIfGtpV2ICsInvTotLenRx, jnxMbgSgwIfGtpV2ICsInvTotLenTx=jnxMbgSgwIfGtpV2ICsInvTotLenTx, jnxMbgSgwIfGtpV2ICsDtForNtSupRx=jnxMbgSgwIfGtpV2ICsDtForNtSupRx, jnxMbgSgwIfGtpV2ICsDtForNtSupTx=jnxMbgSgwIfGtpV2ICsDtForNtSupTx, jnxMbgSgwIfGtpV2ICsInReFRePrRx=jnxMbgSgwIfGtpV2ICsInReFRePrRx, jnxMbgSgwIfGtpV2ICsInReFRePrTx=jnxMbgSgwIfGtpV2ICsInReFRePrTx, jnxMbgSgwIfGtpV2ICsInvPrRx=jnxMbgSgwIfGtpV2ICsInvPrRx, jnxMbgSgwIfGtpV2ICsInvPrTx=jnxMbgSgwIfGtpV2ICsInvPrTx, jnxMbgSgwIfGtpV1ProtocolErrRx=jnxMbgSgwIfGtpV1ProtocolErrRx, jnxMbgSgwIfGtpV1UnSupMsgRx=jnxMbgSgwIfGtpV1UnSupMsgRx, jnxMbgSgwIfGtpV1T3RespTmrExpRx=jnxMbgSgwIfGtpV1T3RespTmrExpRx, jnxMbgSgwIfGtpV1EndMarkerRx=jnxMbgSgwIfGtpV1EndMarkerRx, jnxMbgSgwIfGtpV1EndMarkerTx=jnxMbgSgwIfGtpV1EndMarkerTx, jnxMbgSgwIfGtpV1EchoReqRx=jnxMbgSgwIfGtpV1EchoReqRx, jnxMbgSgwIfGtpV1EchoReqTx=jnxMbgSgwIfGtpV1EchoReqTx, jnxMbgSgwIfGtpV1EchoRespRx=jnxMbgSgwIfGtpV1EchoRespRx, jnxMbgSgwIfGtpV1EchoRespTx=jnxMbgSgwIfGtpV1EchoRespTx, jnxMbgSgwIfGtpV1ErrIndRx=jnxMbgSgwIfGtpV1ErrIndRx, jnxMbgSgwIfGtpV1ErrIndTx=jnxMbgSgwIfGtpV1ErrIndTx, jnxMbgSgwIfSuspNotifRx=jnxMbgSgwIfSuspNotifRx, jnxMbgSgwIfSuspNotifTx=jnxMbgSgwIfSuspNotifTx, jnxMbgSgwIfSuspAckRx=jnxMbgSgwIfSuspAckRx, jnxMbgSgwIfSuspAckTx=jnxMbgSgwIfSuspAckTx, jnxMbgSgwIfResumeNotifRx=jnxMbgSgwIfResumeNotifRx, jnxMbgSgwIfResumeNotifTx=jnxMbgSgwIfResumeNotifTx, jnxMbgSgwIfResumeAckRx=jnxMbgSgwIfResumeAckRx, jnxMbgSgwIfResumeAckTx=jnxMbgSgwIfResumeAckTx, jnxMbgSgwIfPiggybackMsgRx=jnxMbgSgwIfPiggybackMsgRx, jnxMbgSgwIfPiggybackMsgTx=jnxMbgSgwIfPiggybackMsgTx)

# Notifications
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SGW-GTP-MIB", jnxMbgSgwGtpPeerGwUpNotif=jnxMbgSgwGtpPeerGwUpNotif, jnxMbgSgwGtpPeerGwDnNotif=jnxMbgSgwGtpPeerGwDnNotif, jnxMbgSgwGtpPrDnTPerPrAlrmActv=jnxMbgSgwGtpPrDnTPerPrAlrmActv, jnxMbgSgwGtpPrDnTPerPrAlrmClr=jnxMbgSgwGtpPrDnTPerPrAlrmClr)


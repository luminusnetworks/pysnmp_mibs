# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-LSYSSP-FLOWGATE-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:52 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( jnxLsysSpFlowgate, ) = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpFlowgate")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

jnxLsysSpFlowgateMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1)).setRevisions(("2010-05-19 16:44",))
if mibBuilder.loadTexts: jnxLsysSpFlowgateMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxLsysSpFlowgateMIB.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\n\nE-mail: support@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: jnxLsysSpFlowgateMIB.setDescription("This module defines the flow-gate-specific MIB for Juniper Enterprise \nLogical-System (LSYS) security profiles.  Juniper documentation \nis recommended as the reference. \n\nThe LSYS security profile provides various static and dynamic \nresource management by observing resource quota limits. \nSecurity flow-gate resource is the focus in this MIB. ")
jnxLsysSpFlowgateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1))
jnxLsysSpFlowgateTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1))
if mibBuilder.loadTexts: jnxLsysSpFlowgateTable.setDescription("LSYSPROFILE flow-gate objects for flow-gate resource consumption per LSYS.")
jnxLsysSpFlowgateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1)).setIndexNames((1, "JUNIPER-LSYSSP-FLOWGATE-MIB", "jnxLsysSpFlowgateLsysName"))
if mibBuilder.loadTexts: jnxLsysSpFlowgateEntry.setDescription("An entry in flow-gate resource table.")
jnxLsysSpFlowgateLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxLsysSpFlowgateLsysName.setDescription("The name of the logical system for which flow-gate resource information is retrieved. ")
jnxLsysSpFlowgateProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateProfileName.setDescription("The security profile name string for the LSYS.")
jnxLsysSpFlowgateUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateUsage.setDescription("The current resource usage count for the LSYS.")
jnxLsysSpFlowgateReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateReserved.setDescription("The reserved resource count for the LSYS.")
jnxLsysSpFlowgateMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateMaximum.setDescription("The maximum allowed resource usage count for the LSYS.")
jnxLsysSpFlowgateSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2))
jnxLsysSpFlowgateUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateUsedAmount.setDescription("The flow-gate resource consumption over all LSYS.")
jnxLsysSpFlowgateMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateMaxQuota.setDescription("The flow-gate resource maximum quota for the whole device for all LSYS.")
jnxLsysSpFlowgateAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateAvailableAmount.setDescription("The flow-gate resource available in the whole device.")
jnxLsysSpFlowgateHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateHeaviestUsage.setDescription("The most amount of flow-gate resource consumed of a LSYS.")
jnxLsysSpFlowgateHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateHeaviestUser.setDescription("The LSYS name that consume the most flow-gate resource.")
jnxLsysSpFlowgateLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateLightestUsage.setDescription("The least amount of flow-gate resource consumed of a LSYS.")
jnxLsysSpFlowgateLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateLightestUser.setDescription("The LSYS name that consume the least flow-gate resource.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-LSYSSP-FLOWGATE-MIB", PYSNMP_MODULE_ID=jnxLsysSpFlowgateMIB)

# Objects
mibBuilder.exportSymbols("JUNIPER-LSYSSP-FLOWGATE-MIB", jnxLsysSpFlowgateMIB=jnxLsysSpFlowgateMIB, jnxLsysSpFlowgateObjects=jnxLsysSpFlowgateObjects, jnxLsysSpFlowgateTable=jnxLsysSpFlowgateTable, jnxLsysSpFlowgateEntry=jnxLsysSpFlowgateEntry, jnxLsysSpFlowgateLsysName=jnxLsysSpFlowgateLsysName, jnxLsysSpFlowgateProfileName=jnxLsysSpFlowgateProfileName, jnxLsysSpFlowgateUsage=jnxLsysSpFlowgateUsage, jnxLsysSpFlowgateReserved=jnxLsysSpFlowgateReserved, jnxLsysSpFlowgateMaximum=jnxLsysSpFlowgateMaximum, jnxLsysSpFlowgateSummary=jnxLsysSpFlowgateSummary, jnxLsysSpFlowgateUsedAmount=jnxLsysSpFlowgateUsedAmount, jnxLsysSpFlowgateMaxQuota=jnxLsysSpFlowgateMaxQuota, jnxLsysSpFlowgateAvailableAmount=jnxLsysSpFlowgateAvailableAmount, jnxLsysSpFlowgateHeaviestUsage=jnxLsysSpFlowgateHeaviestUsage, jnxLsysSpFlowgateHeaviestUser=jnxLsysSpFlowgateHeaviestUser, jnxLsysSpFlowgateLightestUsage=jnxLsysSpFlowgateLightestUsage, jnxLsysSpFlowgateLightestUser=jnxLsysSpFlowgateLightestUser)


# PySNMP SMI module. Autogenerated from smidump -f python NETSCREEN-QOS-MIB
# by libsmi2pysnmp-0.1.3 at Fri May 30 14:12:56 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( netscreenQos, ) = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenQos")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")

# Objects

netscreenQosMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 5, 0)).setRevisions(("2004-05-03 20:22","2004-05-03 00:00","2004-03-03 00:00","2001-09-28 00:00","2001-05-15 00:00",))
if mibBuilder.loadTexts: netscreenQosMibModule.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: netscreenQosMibModule.setContactInfo("Customer Support\n\n1194 North Mathilda Avenue \nSunnyvale, California 94089-1206\nUSA\n\nTel: 1-800-638-8296\nE-mail: customerservice@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: netscreenQosMibModule.setDescription("This module defines the object that are used to monitor QoS")
nsQosUsrShapingMode = MibScalar((1, 3, 6, 1, 4, 1, 3224, 5, 1), Integer().subtype(subtypeSpec=SingleValueConstraint(1,0,4,2,3,)).subtype(namedValues=NamedValues(("off", 0), ("on", 1), ("on-off", 2), ("off-on", 3), ("auto", 4), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosUsrShapingMode.setDescription("QoS mode set by user")
nsQosSysShapingMode = MibScalar((1, 3, 6, 1, 4, 1, 3224, 5, 2), Integer().subtype(subtypeSpec=SingleValueConstraint(1,0,4,2,3,)).subtype(namedValues=NamedValues(("off", 0), ("on", 1), ("on-off", 2), ("off-on", 3), ("auto", 4), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosSysShapingMode.setDescription("QoS mode currently set by the system")
nsQosPly = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 5, 3))
nsQosPlyTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1))
if mibBuilder.loadTexts: nsQosPlyTable.setDescription("QoS is the allocation of the appropriate amount of\nnetwork bandwidth to every user and application on an interface.\nThis table collects all the QoS configuration\nsetting on each physical interface.")
nsQosPlyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1)).setIndexNames((0, "NETSCREEN-QOS-MIB", "nsQosPlyId"))
if mibBuilder.loadTexts: nsQosPlyEntry.setDescription("Each entry holds a set of attributes for QoS")
nsQosPlyId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyId.setDescription("A unique policy id, also used as table index.")
nsQosPlyVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyVsys.setDescription("VSYS this policy belongs to.")
nsQosPlyQosEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 3), Integer().subtype(subtypeSpec=SingleValueConstraint(1,0,)).subtype(namedValues=NamedValues(("off", 0), ("on", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyQosEnable.setDescription("Enable QoS on this policy.")
nsQosPlyGanBW = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyGanBW.setDescription("Guaranteed Bandwidth (in bytes per second). When Qos Enable\nis off, the value has no meaning.")
nsQosPlyMaxBW = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyMaxBW.setDescription("Maxium Bandwidth (in bytes per second). When Qos Enable is\noff, the value has no meaning. Negative value means it is not\nset yet.")
nsQosPlyTraffPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyTraffPriority.setDescription("Traffic priority for this policy. Zero is the highest\npriority and seven is the lowest.")
nsQosPlyDSEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 5, 3, 1, 1, 7), Integer().subtype(subtypeSpec=SingleValueConstraint(1,0,)).subtype(namedValues=NamedValues(("off", 0), ("on", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsQosPlyDSEnable.setDescription("Enable DiffServ codepoint marking on this policy.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("NETSCREEN-QOS-MIB", PYSNMP_MODULE_ID=netscreenQosMibModule)

# Objects
mibBuilder.exportSymbols("NETSCREEN-QOS-MIB", netscreenQosMibModule=netscreenQosMibModule, nsQosUsrShapingMode=nsQosUsrShapingMode, nsQosSysShapingMode=nsQosSysShapingMode, nsQosPly=nsQosPly, nsQosPlyTable=nsQosPlyTable, nsQosPlyEntry=nsQosPlyEntry, nsQosPlyId=nsQosPlyId, nsQosPlyVsys=nsQosPlyVsys, nsQosPlyQosEnable=nsQosPlyQosEnable, nsQosPlyGanBW=nsQosPlyGanBW, nsQosPlyMaxBW=nsQosPlyMaxBW, nsQosPlyTraffPriority=nsQosPlyTraffPriority, nsQosPlyDSEnable=nsQosPlyDSEnable)


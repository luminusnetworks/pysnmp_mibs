# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-ALARM-EXT-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:48 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( alarmClearEntry, ) = mibBuilder.importSymbols("ALARM-MIB", "alarmClearEntry")
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( jnxAlarmExtMibRoot, jnxMibs, ) = mibBuilder.importSymbols("JUNIPER-SMI", "jnxAlarmExtMibRoot", "jnxMibs")
( Bits, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( DateAndTime, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention")

# Objects

jnxAlarmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 72, 1)).setRevisions(("2012-09-04 15:02",))
if mibBuilder.loadTexts: jnxAlarmMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxAlarmMIB.setContactInfo("        Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\nE-mail: support@juniper.net")
if mibBuilder.loadTexts: jnxAlarmMIB.setDescription("This is Juniper Networks' implementation of enterprise\nspecific MIB for alarms from the router chassis box.")
jnxAlarmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 72, 1, 1))
jnxAlarmClearTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 72, 1, 1, 1))
if mibBuilder.loadTexts: jnxAlarmClearTable.setDescription(" This table augments alarmClearTable. This table\ncontains additional object needed to indicate \nDateAndTime when a particular alarm was raised.")
jnxAlarmClearEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 72, 1, 1, 1, 1))
if mibBuilder.loadTexts: jnxAlarmClearEntry.setDescription(" An entry containing additional information \napplicable to a particular entry in alarm\nClearTable.")
jnxAlarmClearActiveDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 72, 1, 1, 1, 1, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxAlarmClearActiveDateAndTime.setDescription(" This object indicates DateAndTime, when \ncurrent alarm was raised.")

# Augmentions
alarmClearEntry, = mibBuilder.importSymbols("ALARM-MIB", "alarmClearEntry")
alarmClearEntry.registerAugmentions(("JUNIPER-ALARM-EXT-MIB", "jnxAlarmClearEntry"))
jnxAlarmClearEntry.setIndexNames(*alarmClearEntry.getIndexNames())

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-ALARM-EXT-MIB", PYSNMP_MODULE_ID=jnxAlarmMIB)

# Objects
mibBuilder.exportSymbols("JUNIPER-ALARM-EXT-MIB", jnxAlarmMIB=jnxAlarmMIB, jnxAlarmObjects=jnxAlarmObjects, jnxAlarmClearTable=jnxAlarmClearTable, jnxAlarmClearEntry=jnxAlarmClearEntry, jnxAlarmClearActiveDateAndTime=jnxAlarmClearActiveDateAndTime)


# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-JS-CERT-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:50 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( jnxJsCertificates, ) = mibBuilder.importSymbols("JUNIPER-JS-SMI", "jnxJsCertificates")
( Bits, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( DateAndTime, DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString")

# Objects

jnxJsCertificateMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1)).setRevisions(("2007-04-20 00:00",))
if mibBuilder.loadTexts: jnxJsCertificateMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxJsCertificateMIB.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\nE-mail: support@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: jnxJsCertificateMIB.setDescription("This module defines the object that are used to monitor\nreference and attributes to the certificates.")
jnxJsCertificateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1))
jnxJsLoadedCaCertTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1))
if mibBuilder.loadTexts: jnxJsLoadedCaCertTable.setDescription("This table exposes the loaded Certification Authority (CA) \nissued certificates. Certificates are used when establishing\na secure connection in the device.")
jnxJsLoadedCaCertEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1, 1)).setIndexNames((1, "JUNIPER-JS-CERT-MIB", "jnxJsLoadedCaCertName"))
if mibBuilder.loadTexts: jnxJsLoadedCaCertEntry.setDescription("The loaded CA certificate entry.  It is indexed by the \nCA certification name.")
jnxJsLoadedCaCertName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxJsLoadedCaCertName.setDescription("The loaded CA certificate name.  This is unique within the \nthe loaded CA certifcates.")
jnxJsLoadedCaCertSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedCaCertSubject.setDescription("The CA certificate subject.")
jnxJsLoadedCaCertExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedCaCertExpire.setDescription("The expiration time and date of the CA certificate.")
jnxJsLoadedCaCertIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedCaCertIssuer.setDescription("The issuer of the CA certificate.")
jnxJsLoadedLocalCertTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2))
if mibBuilder.loadTexts: jnxJsLoadedLocalCertTable.setDescription("This table exposes the loaded certificates. \nCertificates are used when establishing a secure \nconnection in the device.")
jnxJsLoadedLocalCertEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2, 1)).setIndexNames((1, "JUNIPER-JS-CERT-MIB", "jnxJsLoadedLocalCertName"))
if mibBuilder.loadTexts: jnxJsLoadedLocalCertEntry.setDescription("Default certificate entry.  It is indexed by the \ncertification name.")
jnxJsLoadedLocalCertName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxJsLoadedLocalCertName.setDescription("The name of the local certificate. \nThe certificate name is unique within the loaded local \ncertificates. ")
jnxJsLoadedLocalCertSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedLocalCertSubject.setDescription("The certificate subject.")
jnxJsLoadedLocalCertExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedLocalCertExpire.setDescription("The expiration time and date of the local certificate.")
jnxJsLoadedLocalCertIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedLocalCertIssuer.setDescription("The issuer of the local certificate.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-JS-CERT-MIB", PYSNMP_MODULE_ID=jnxJsCertificateMIB)

# Objects
mibBuilder.exportSymbols("JUNIPER-JS-CERT-MIB", jnxJsCertificateMIB=jnxJsCertificateMIB, jnxJsCertificateObjects=jnxJsCertificateObjects, jnxJsLoadedCaCertTable=jnxJsLoadedCaCertTable, jnxJsLoadedCaCertEntry=jnxJsLoadedCaCertEntry, jnxJsLoadedCaCertName=jnxJsLoadedCaCertName, jnxJsLoadedCaCertSubject=jnxJsLoadedCaCertSubject, jnxJsLoadedCaCertExpire=jnxJsLoadedCaCertExpire, jnxJsLoadedCaCertIssuer=jnxJsLoadedCaCertIssuer, jnxJsLoadedLocalCertTable=jnxJsLoadedLocalCertTable, jnxJsLoadedLocalCertEntry=jnxJsLoadedLocalCertEntry, jnxJsLoadedLocalCertName=jnxJsLoadedLocalCertName, jnxJsLoadedLocalCertSubject=jnxJsLoadedLocalCertSubject, jnxJsLoadedLocalCertExpire=jnxJsLoadedLocalCertExpire, jnxJsLoadedLocalCertIssuer=jnxJsLoadedLocalCertIssuer)


# PySNMP SMI module. Autogenerated from smidump -f python IRTF-NMRG-SMING-TYPES
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:44 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( Bits, Integer32, Unsigned32, Unsigned64, MibIdentifier, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Unsigned32", "Unsigned64", "MibIdentifier", "TimeTicks")

# Types

class AutonomousType(ObjectIdentifier):
    pass

class Counter32(Unsigned32):
    pass

class Counter64(Unsigned64):
    pass

class DateAndTime(TextualConvention, OctetString):
    displayHint = "2d-1d-1d,1d:1d:1d.1d,1a1d:1d"
    subtypeSpec = OctetString.subtypeSpec+ConstraintsUnion(ValueSizeConstraint(8,8),ValueSizeConstraint(11,11),)
    
class DisplayString(TextualConvention, OctetString):
    displayHint = "255a"
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(0,255)
    
class Gauge32(Unsigned32):
    pass

class Gauge64(Unsigned64):
    pass

class InstancePointer(ObjectIdentifier):
    pass

class IpAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(4,4)
    fixedLength = 4
    
class MacAddress(TextualConvention, OctetString):
    displayHint = "1x:"
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(6,6)
    fixedLength = 6
    
class Opaque(OctetString):
    pass

class PhysAddress(TextualConvention, OctetString):
    displayHint = "1x:"
    
class RowPointer(ObjectIdentifier):
    pass

class RowStatus(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(3,4,1,6,5,2,)
    namedValues = NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6), )
    
class StorageType(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(4,3,1,2,5,)
    namedValues = NamedValues(("other", 1), ("volatile", 2), ("nonVolatile", 3), ("permanent", 4), ("readOnly", 5), )
    
class TAddressOrZero(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(0,255)
    
class TDomain(ObjectIdentifier):
    pass

class TestAndIncr(Integer32):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(0,2147483647)
    
class TimeInterval(Integer32):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(0,2147483647)
    
class TimeTicks(Unsigned32):
    pass

class TruthValue(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(2,1,)
    namedValues = NamedValues(("true", 1), ("false", 2), )
    
class VariablePointer(ObjectIdentifier):
    pass

class TAddress(TAddressOrZero):
    subtypeSpec = TAddressOrZero.subtypeSpec+ValueSizeConstraint(1,255)
    
class TimeStamp(TimeTicks):
    pass


# Exports

# Types
mibBuilder.exportSymbols("IRTF-NMRG-SMING-TYPES", AutonomousType=AutonomousType, Counter32=Counter32, Counter64=Counter64, DateAndTime=DateAndTime, DisplayString=DisplayString, Gauge32=Gauge32, Gauge64=Gauge64, InstancePointer=InstancePointer, IpAddress=IpAddress, MacAddress=MacAddress, Opaque=Opaque, PhysAddress=PhysAddress, RowPointer=RowPointer, RowStatus=RowStatus, StorageType=StorageType, TAddressOrZero=TAddressOrZero, TDomain=TDomain, TestAndIncr=TestAndIncr, TimeInterval=TimeInterval, TimeTicks=TimeTicks, TruthValue=TruthValue, VariablePointer=VariablePointer, TAddress=TAddress, TimeStamp=TimeStamp)


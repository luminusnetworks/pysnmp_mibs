# PySNMP SMI module. Autogenerated from smidump -f python RFC1414-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:58:10 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( MibScalar, MibTable, MibTableRow, MibTableColumn, ) = mibBuilder.importSymbols("RFC-1212", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
( tcpConnLocalAddress, tcpConnLocalPort, tcpConnRemAddress, tcpConnRemPort, ) = mibBuilder.importSymbols("RFC1213-MIB", "tcpConnLocalAddress", "tcpConnLocalPort", "tcpConnRemAddress", "tcpConnRemPort")
( Bits, Integer32, MibIdentifier, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "MibIdentifier", "TimeTicks", "mib-2")

# Objects

ident = MibIdentifier((1, 3, 6, 1, 2, 1, 24))
identInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 24, 1))
identTable = MibTable((1, 3, 6, 1, 2, 1, 24, 1, 1))
if mibBuilder.loadTexts: identTable.setDescription("A table containing user information for TCP\nconnections.\n\nNote that this table contains entries for all TCP\nconnections on a managed system.  The\ncorresponding instance of tcpConnState (defined in\nMIB-II) indicates the state of a particular\nconnection.")
identEntry = MibTableRow((1, 3, 6, 1, 2, 1, 24, 1, 1, 1)).setIndexNames((0, "RFC1213-MIB", "tcpConnLocalAddress"), (0, "RFC1213-MIB", "tcpConnLocalPort"), (0, "RFC1213-MIB", "tcpConnRemAddress"), (0, "RFC1213-MIB", "tcpConnRemPort"))
if mibBuilder.loadTexts: identEntry.setDescription("User information about a particular TCP\nconnection.")
identStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 24, 1, 1, 1, 1), Integer().subtype(subtypeSpec=SingleValueConstraint(2,1,)).subtype(namedValues=NamedValues(("noError", 1), ("unknownError", 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: identStatus.setDescription("Indicates whether user information for the\nassociated TCP connection can be determined.  A\nvalue of `noError(1)' indicates that user\ninformation is available.  A value of\n`unknownError(2)' indicates that user information\nis not available.")
identOpSys = MibTableColumn((1, 3, 6, 1, 2, 1, 24, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: identOpSys.setDescription("Indicates the type of operating system in use.\nIn addition to identifying an operating system,\neach assignment made for this purpose also\n(implicitly) identifies the textual format and\nmaximum size of the corresponding identUserid and\nidentMisc objects.\n\nThe legal values for the `indentOpSys' strings\nare those listed in the SYSTEM NAMES section of\nthe most recent edition of the ASSIGNED NUMBERS\nRFC [8].")
identCharset = MibTableColumn((1, 3, 6, 1, 2, 1, 24, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: identCharset.setDescription("Indicates the repertoire of the corresponding\nidentUserid and identMisc objects.\n\nThe legal values for the `identCharset' strings\nare those listed in the CHARACTER SET section of\nthe most recent edition of the ASSIGNED NUMBERS\nRFC [8].")
identUserid = MibTableColumn((1, 3, 6, 1, 2, 1, 24, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: identUserid.setDescription("Indicates the user's identity.  Interpretation of\nthis object requires examination of the\ncorresponding value of the identOpSys and\nidentCharset objects.")
identMisc = MibTableColumn((1, 3, 6, 1, 2, 1, 24, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: identMisc.setDescription("Indicates miscellaneous information about the\nuser.  Interpretation of this object requires\nexamination of the corresponding value of the\nidentOpSys and identCharset objects.")

# Augmentions

# Exports

# Objects
mibBuilder.exportSymbols("RFC1414-MIB", ident=ident, identInfo=identInfo, identTable=identTable, identEntry=identEntry, identStatus=identStatus, identOpSys=identOpSys, identCharset=identCharset, identUserid=identUserid, identMisc=identMisc)


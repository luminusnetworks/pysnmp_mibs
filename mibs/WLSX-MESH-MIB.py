# PySNMP SMI module. Autogenerated from smidump -f python WLSX-MESH-MIB
# by libsmi2pysnmp-0.1.3 at Tue May 27 09:00:43 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( wlanAPMacAddress, ) = mibBuilder.importSymbols("", "wlanAPMacAddress")
( wlsxEnterpriseMibModules, ) = mibBuilder.importSymbols("ARUBA-MIB", "wlsxEnterpriseMibModules")
( ArubaEncryptionMethods, ArubaMeshRole, ArubaPhyType, ) = mibBuilder.importSymbols("ARUBA-TC", "ArubaEncryptionMethods", "ArubaMeshRole", "ArubaPhyType")
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup")
( Bits, Counter32, Integer32, Integer32, IpAddress, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, snmpModules, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Integer32", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "snmpModules")
( DateAndTime, DisplayString, MacAddress, PhysAddress, RowStatus, StorageType, TAddress, TDomain, TextualConvention, TestAndIncr, TimeInterval, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "MacAddress", "PhysAddress", "RowStatus", "StorageType", "TAddress", "TDomain", "TextualConvention", "TestAndIncr", "TimeInterval", "TruthValue")

# Objects

wlsxMeshMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13)).setRevisions(("1907-08-06 05:18",))
if mibBuilder.loadTexts: wlsxMeshMIB.setOrganization("Aruba Wireless Networks")
if mibBuilder.loadTexts: wlsxMeshMIB.setContactInfo("Postal:    1322 Crossman Avenue\nSunnyvale, CA 94089	\nE-mail:     dl-support@arubanetworks.com\nPhone:      +1 408 227 4500")
if mibBuilder.loadTexts: wlsxMeshMIB.setDescription("This MIB module defines MIB objects which provides\ninformation about Mesh portal and topology \n	in the Aruba controller.")
wlsxMeshInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1))
wlsxMeshNodeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1))
wlsxMeshNodeTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeTotal.setDescription("\nTotal Number of mesh nodes in the controller.")
wlsxMeshNodeTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2))
if mibBuilder.loadTexts: wlsxMeshNodeTable.setDescription("\nThis table lists Mesh Node Info. ")
wlsxMeshNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1)).setIndexNames((0, "", "wlanAPMacAddress"))
if mibBuilder.loadTexts: wlsxMeshNodeEntry.setDescription("")
wlsxMeshRole = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 1), ArubaMeshRole()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlsxMeshRole.setDescription("\nMesh role")
wlsxMeshNodeParent = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeParent.setDescription("\nWired MAC address of mesh node's parent")
wlsxMeshNodeChildrenCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeChildrenCount.setDescription("\nMesh node children count")
wlsxMeshNodeCluster = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeCluster.setDescription("\nMesh cluster name.")
wlsxMeshNodeRfBand = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 5), ArubaPhyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeRfBand.setDescription("\nMesh node rf band")
wlsxMeshNodePathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodePathCost.setDescription("\nMesh topology path cost")
wlsxMeshNodeNodeCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeNodeCost.setDescription("\nMesh topology node cost")
wlsxMeshNodeLinkCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeLinkCost.setDescription("\nMesh topology link cost")
wlsxMeshNodeHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeHopCount.setDescription("\nMesh topology hop count.")
wlsxMeshSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshSNR.setDescription("\nSignal-to-noise ratio mesh point sees its parent at. ")
wlsxMeshTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshTxRate.setDescription("\nTransmit rate for mesh-uplink [mbps].")
wlsxMeshRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshRxRate.setDescription("\nReceive rate for mesh-uplink [mbps].")
wlsxMeshUplinkAge = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshUplinkAge.setDescription("\nTime elapsed since the mesh-uplink was formed.")
wlsxMeshNumRecoveryChildren = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNumRecoveryChildren.setDescription("\nThe number of children in recovery this mesh node has.")
wlsxMeshTopologyUpdateAge = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshTopologyUpdateAge.setDescription("\nTime elapsed since the last mesh topology update was received from this node.")
wlsxMeshIsRecovery = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshIsRecovery.setDescription("\nTrue if this mesh point is in recovery.")
wlsxMeshIs11n = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshIs11n.setDescription("\nTrue if this mesh node is 11n-enabled.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("WLSX-MESH-MIB", PYSNMP_MODULE_ID=wlsxMeshMIB)

# Objects
mibBuilder.exportSymbols("WLSX-MESH-MIB", wlsxMeshMIB=wlsxMeshMIB, wlsxMeshInfoGroup=wlsxMeshInfoGroup, wlsxMeshNodeGroup=wlsxMeshNodeGroup, wlsxMeshNodeTotal=wlsxMeshNodeTotal, wlsxMeshNodeTable=wlsxMeshNodeTable, wlsxMeshNodeEntry=wlsxMeshNodeEntry, wlsxMeshRole=wlsxMeshRole, wlsxMeshNodeParent=wlsxMeshNodeParent, wlsxMeshNodeChildrenCount=wlsxMeshNodeChildrenCount, wlsxMeshNodeCluster=wlsxMeshNodeCluster, wlsxMeshNodeRfBand=wlsxMeshNodeRfBand, wlsxMeshNodePathCost=wlsxMeshNodePathCost, wlsxMeshNodeNodeCost=wlsxMeshNodeNodeCost, wlsxMeshNodeLinkCost=wlsxMeshNodeLinkCost, wlsxMeshNodeHopCount=wlsxMeshNodeHopCount, wlsxMeshSNR=wlsxMeshSNR, wlsxMeshTxRate=wlsxMeshTxRate, wlsxMeshRxRate=wlsxMeshRxRate, wlsxMeshUplinkAge=wlsxMeshUplinkAge, wlsxMeshNumRecoveryChildren=wlsxMeshNumRecoveryChildren, wlsxMeshTopologyUpdateAge=wlsxMeshTopologyUpdateAge, wlsxMeshIsRecovery=wlsxMeshIsRecovery, wlsxMeshIs11n=wlsxMeshIs11n)


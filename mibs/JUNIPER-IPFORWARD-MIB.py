# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-IPFORWARD-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:50 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( inetCidrRouteEntry, ipCidrRouteEntry, ) = mibBuilder.importSymbols("IP-FORWARD-MIB", "inetCidrRouteEntry", "ipCidrRouteEntry")
( jnxMibs, ) = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs")
( SnmpAdminString, ) = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
( Bits, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")

# Objects

jnxIpForwardMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 38)).setRevisions(("2011-11-13 00:00",))
if mibBuilder.loadTexts: jnxIpForwardMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxIpForwardMIB.setContactInfo("        Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\nE-mail: support@juniper.net")
if mibBuilder.loadTexts: jnxIpForwardMIB.setDescription("This is Juniper Networks' implementation of enterprise specific\nportions of ipForward MIB.  Any data stored in this MIB \n has directly related entries in mib-2,  ipForward MIB.")
jnxIpCidrRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 38, 1))
if mibBuilder.loadTexts: jnxIpCidrRouteTable.setDescription("Augments the ipCidrRouteTable with additional data.")
jnxIpCidrRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 38, 1, 1))
if mibBuilder.loadTexts: jnxIpCidrRouteEntry.setDescription("Each entry provides additional CIDR forwarding information.")
jnxIpCidrRouteTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 38, 1, 1, 1), SnmpAdminString().clone('')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxIpCidrRouteTunnelName.setDescription("The canonical name assigned to the tunnel. The router\nwill forward traffic bound for the destination defined\nby the INDEX through this tunnel.")
jnxInetCidrRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 38, 2))
if mibBuilder.loadTexts: jnxInetCidrRouteTable.setDescription("Augments the inetCidrRouteTable with additional data.")
jnxInetCidrRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 38, 2, 1))
if mibBuilder.loadTexts: jnxInetCidrRouteEntry.setDescription("Each entry provides additional CIDR forwarding information.")
jnxInetCidrRouteTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 38, 2, 1, 1), SnmpAdminString().clone('')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxInetCidrRouteTunnelName.setDescription("The canonical name assigned to the tunnel. The router\nwill forward traffic bound for the destination defined\nby the INDEX through this tunnel.")

# Augmentions
inetCidrRouteEntry, = mibBuilder.importSymbols("IP-FORWARD-MIB", "inetCidrRouteEntry")
inetCidrRouteEntry.registerAugmentions(("JUNIPER-IPFORWARD-MIB", "jnxInetCidrRouteEntry"))
jnxInetCidrRouteEntry.setIndexNames(*inetCidrRouteEntry.getIndexNames())
ipCidrRouteEntry, = mibBuilder.importSymbols("IP-FORWARD-MIB", "ipCidrRouteEntry")
ipCidrRouteEntry.registerAugmentions(("JUNIPER-IPFORWARD-MIB", "jnxIpCidrRouteEntry"))
jnxIpCidrRouteEntry.setIndexNames(*ipCidrRouteEntry.getIndexNames())

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-IPFORWARD-MIB", PYSNMP_MODULE_ID=jnxIpForwardMIB)

# Objects
mibBuilder.exportSymbols("JUNIPER-IPFORWARD-MIB", jnxIpForwardMIB=jnxIpForwardMIB, jnxIpCidrRouteTable=jnxIpCidrRouteTable, jnxIpCidrRouteEntry=jnxIpCidrRouteEntry, jnxIpCidrRouteTunnelName=jnxIpCidrRouteTunnelName, jnxInetCidrRouteTable=jnxInetCidrRouteTable, jnxInetCidrRouteEntry=jnxInetCidrRouteEntry, jnxInetCidrRouteTunnelName=jnxInetCidrRouteTunnelName)


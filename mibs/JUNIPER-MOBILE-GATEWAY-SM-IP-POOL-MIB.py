# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:54 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( InetAddress, InetAddressPrefixLength, InetAddressType, ) = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
( jnxMbgGwIndex, jnxMbgGwName, ) = mibBuilder.importSymbols("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex", "jnxMbgGwName")
( jnxMobileGatewayMibRoot, ) = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMobileGatewayMibRoot")
( Bits, Counter64, Gauge32, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Gauge32", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( DisplayString, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")

# Objects

jnxMobileGatewayPgwSMIPPoolMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5)).setRevisions(("2011-11-15 12:00","2011-01-13 12:00",))
if mibBuilder.loadTexts: jnxMobileGatewayPgwSMIPPoolMib.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxMobileGatewayPgwSMIPPoolMib.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\nE-mail: support@juniper.net")
if mibBuilder.loadTexts: jnxMobileGatewayPgwSMIPPoolMib.setDescription("This module defines objects pertaining to Mobile-Edge Subscriber\nManagement IP pool Services")
jnxMbgSMIPPoolNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0))
jnxMbgSMIPPoolObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1))
jnxMbgSMIPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1))
if mibBuilder.loadTexts: jnxMbgSMIPPoolTable.setDescription("The table lists local address pools and their statistics")
jnxMbgSMIPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1)).setIndexNames((0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolLogicalSystem"), (0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolRoutingInstance"), (0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolName"))
if mibBuilder.loadTexts: jnxMbgSMIPPoolEntry.setDescription("An entry representing a single address range or prefix entry \nin the pool")
jnxMbgSMIPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxMbgSMIPPoolName.setDescription("A name which identifies this pool on the mobile-gateway.")
jnxMbgSMIPPoolLogicalSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxMbgSMIPPoolLogicalSystem.setDescription("A name which identifies the logical-system to which the address \npool belongs.")
jnxMbgSMIPPoolRoutingInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxMbgSMIPPoolRoutingInstance.setDescription("A name which identifies the routing instance to which the address \npool belongs.")
jnxMbgSMIPPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolType.setDescription("Indicates whether this pool entry is of type ipv4 or ipv6.")
jnxMbgSMIPPoolFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolFree.setDescription("Total number of free addresses in this pool entry.")
jnxMbgSMIPPoolInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolInUse.setDescription("Total number of used addresses in this pool entry.")
jnxMbgSMIPPoolUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolUtil.setDescription("Percentage utilization for this pool entry.")
jnxMbgSMIPPoolNotificationVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2))
jnxMbgSMIPPoolThresholdPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 1), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdPoolName.setDescription("The name which identifies the address pool on the mobile-gateway\nfor which the threshold was exceeded.")
jnxMbgSMIPPoolThresholdLSName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 2), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdLSName.setDescription("The name which identifies the logical-system on the mobile-gateway\nin which the address pool threshold was exceeded.")
jnxMbgSMIPPoolThresholdRIName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 3), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdRIName.setDescription("The name which identifies the routing instance on the mobile-gateway\nin which the address pool threshold was exceeded.")
jnxMbgSMIPPoolConfiguredThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 4), Unsigned32()).setMaxAccess("notifyonly").setUnits("percent")
if mibBuilder.loadTexts: jnxMbgSMIPPoolConfiguredThreshold.setDescription("The threshold value configured for an address pool on the mobile \ngateway exceeding which a notification is generated.")
jnxMbgSMIPPoolCurrentThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 5), Unsigned32()).setMaxAccess("notifyonly").setUnits("percent")
if mibBuilder.loadTexts: jnxMbgSMIPPoolCurrentThreshold.setDescription("The current threshold value for an address pool on the mobile \ngateway. This can be equal to or greater than the configured\nthreshold value.")
jnxMbgSMIPPoolMMPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 6), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMPoolName.setDescription("The name which identifies the address pool on the mobile-gateway\nwhich underwent a change in the maintenance-mode state.")
jnxMbgSMIPPoolMMLSName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 7), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMLSName.setDescription("The name which identifies the logical-system on the mobile-gateway\nwhich underwent a change in the maintenance-mode state.")
jnxMbgSMIPPoolMMRIName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 8), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMRIName.setDescription("The name which identifies the routing instance on the mobile-gateway\nwhich underwent a change in the maintenance-mode state.")
jnxMbgSMIPPoolPrevMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 9), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolPrevMMState.setDescription("A string that indicates the maintenance-mode state .")
jnxMbgSMIPPoolNewMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 10), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolNewMMState.setDescription("A string that indicates the maintenance-mode state .")
jnxMbgSMIPRangeHiThresRangeName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 11), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiThresRangeName.setDescription("The name which identifies the address pool's range on the mobile-gateway\nfor which the threshold was exceeded.")
jnxMbgSMIPRangeHiThresPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 12), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiThresPoolName.setDescription("The name which identifies the address pool on the mobile-gateway, whose\nrange threshold was exceeded.")
jnxMbgSMIPRangeHiLSName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 13), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiLSName.setDescription("The name which identifies the logical-system on the mobile-gateway\nin which the address range threshold was exceeded.")
jnxMbgSMIPRangeHiRIName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 14), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiRIName.setDescription("The name which identifies the routing instance on the mobile-gateway\nin which the address range threshold was exceeded.")
jnxMbgSMIPRangeHiCfgThres = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 15), Unsigned32()).setMaxAccess("notifyonly").setUnits("percent")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiCfgThres.setDescription("The threshold value configured for an address pool range on the mobile \ngateway exceeding which a notification is generated.")
jnxMbgSMIPRangeHiCurrUtil = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 16), Unsigned32()).setMaxAccess("notifyonly").setUnits("percent")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiCurrUtil.setDescription("The current threshold value for an address pool range on the mobile \ngateway. This can be equal to or greater than the configured\nthreshold value.")
jnxMbgSMIPRangeLowThresRangeName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 17), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowThresRangeName.setDescription("The name which identifies the address pool's range on the mobile-gateway\nfor which the low threshold was reached.")
jnxMbgSMIPRangeLowThresPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 18), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowThresPoolName.setDescription("The name which identifies the address pool on the mobile-gateway, whose\nrange low threshold was reached.")
jnxMbgSMIPRangeLowLSName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 19), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowLSName.setDescription("The name which identifies the logical-system on the mobile-gateway\nin which the address range low threshold was reached.")
jnxMbgSMIPRangeLowRIName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 20), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowRIName.setDescription("The name which identifies the routing instance on the mobile-gateway\nin which the address range low threshold was reached.")
jnxMbgSMIPRangeLowCfgThres = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 21), Unsigned32()).setMaxAccess("notifyonly").setUnits("percent")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowCfgThres.setDescription("The threshold value configured for an address pool range on the mobile \ngateway reaching which a notification is generated.")
jnxMbgSMIPRangeLowCurrUtil = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 22), Unsigned32()).setMaxAccess("notifyonly").setUnits("percent")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowCurrUtil.setDescription("The current threshold value for an address pool range on the mobile \ngateway. This can be equal to or greater than the configured\nthreshold value.")
jnxMbgSMIPPoolHTCfgThres = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 23), Unsigned32()).setMaxAccess("notifyonly").setUnits("percent")
if mibBuilder.loadTexts: jnxMbgSMIPPoolHTCfgThres.setDescription("The threshold value configured for an address pool on the mobile gateway \nexceeding which a notification is generated.")
jnxMbgSMIPPoolCurrUtil = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 24), Unsigned32()).setMaxAccess("notifyonly").setUnits("percent")
if mibBuilder.loadTexts: jnxMbgSMIPPoolCurrUtil.setDescription("The current utilization value for an address pool on the mobile \ngateway. This can be equal to or greater than the configured\nthreshold value.")
jnxMbgSMIPPoolLTCfgThres = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 25), Unsigned32()).setMaxAccess("notifyonly").setUnits("percent")
if mibBuilder.loadTexts: jnxMbgSMIPPoolLTCfgThres.setDescription("The threshold value configured for an address pool on the mobile gateway\nreaching which a notification is generated.")
jnxMbgIPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3))
if mibBuilder.loadTexts: jnxMbgIPPoolTable.setDescription("The table exposes the local address pools attributes and\ntheir statistics.\n\nThis table contains information about local address pools only.")
jnxMbgIPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1)).setIndexNames((0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolId"))
if mibBuilder.loadTexts: jnxMbgIPPoolEntry.setDescription("An entry representing a single address range or prefix entry \nin the pool. It is indexed by Pool Id.")
jnxMbgIPPoolId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 1), Unsigned32()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxMbgIPPoolId.setDescription("A Pool Id which identifies a pool on the mobile-gateway.")
jnxMbgIPPoolLogicalSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolLogicalSystem.setDescription("A name which identifies the logical-system to which the address \npool belongs on the mobile gateway.")
jnxMbgIPPoolRoutingInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolRoutingInstance.setDescription("A name which identifies the routing instance to which the address \npool belongs on the mobile gateway.")
jnxMbgIPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolName.setDescription("A name which identifies the pool on the mobile-gateway.")
jnxMbgIPPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolType.setDescription("The type configured for this pool on the mobile gateway.\nTypes supported are Ipv4(1) or IPv6(2).")
jnxMbgIPPoolFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolFree.setDescription("Total number of free addresses in this pool.")
jnxMbgIPPoolInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolInUse.setDescription("Total number of used addresses in this pool.")
jnxMbgIPPoolUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolUtil.setDescription("Percentage utilization for this pool.")
jnxMbgIPPoolRangeTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4))
if mibBuilder.loadTexts: jnxMbgIPPoolRangeTable.setDescription("The table exposes the local address pool range's attributes and\ntheir statistics.\n\n This table contains information about local address pools only.")
jnxMbgIPPoolRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1)).setIndexNames((0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolId"), (0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolRangeName"))
if mibBuilder.loadTexts: jnxMbgIPPoolRangeEntry.setDescription("An entry representing a address ranges in the pool. It is\nindexed by the Gateway Index, Logical System Id,\nRouting Instance Id, Pool Id and Range Id.")
jnxMbgIPPoolRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxMbgIPPoolRangeName.setDescription("The name of the local IP address pool range")
jnxMbgIPPoolRangeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolRangeType.setDescription("The type configured for this range on the mobile gateway.\nTypes supported are Ipv4(1) or IPv6(2).")
jnxMbgIPPoolRangeFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolRangeFree.setDescription("Total number of free addresses in this range.")
jnxMbgIPPoolRangeInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolRangeInUse.setDescription("Total number of used addresses in this range.")
jnxMbgIPPoolRangeUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolRangeUtil.setDescription("Percentage utilization for this range.")

# Augmentions

# Notifications

jnxMbgSMIPPoolThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 1)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolCurrentThreshold"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdLSName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolConfiguredThreshold"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdRIName"), ) )
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdExceeded.setDescription("This notification signifies that the number of addresses allocated\nfrom a given address pool has exceeded a pre-configured threshold \nvalue.")
jnxMbgSMIPPoolMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 2)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolMMPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolPrevMMState"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolMMRIName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolNewMMState"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolMMLSName"), ) )
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMStateChange.setDescription("This notification indicates that the pool name indicated by  \nLS-name, RI-name and pool-name undergoes a change in the\nmaintenance-mode state.")
jnxMbgSMIPRangeHighThresExcd = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 3)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiLSName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiRIName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiCfgThres"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiThresPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiCurrUtil"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiThresRangeName"), ) )
if mibBuilder.loadTexts: jnxMbgSMIPRangeHighThresExcd.setDescription("This notification indicates that the range name that exceeded \nhigher threshold.")
jnxMbgSMIPRangeLowThresRchd = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 4)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowThresPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowCurrUtil"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowRIName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowCfgThres"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowLSName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowThresRangeName"), ) )
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowThresRchd.setDescription("This notification indicates that the range name that reached  \nlower threshold.")
jnxMbgSMIPPoolHighThresExcd = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 5)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdLSName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolCurrUtil"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolHTCfgThres"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdRIName"), ) )
if mibBuilder.loadTexts: jnxMbgSMIPPoolHighThresExcd.setDescription("This notification signifies that the number of addresses allocated\nfrom a given address pool has exceeded a pre-configured threshold \nvalue.")
jnxMbgSMIPPoolLowThresRchd = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 6)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdLSName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolCurrUtil"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolLTCfgThres"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdRIName"), ) )
if mibBuilder.loadTexts: jnxMbgSMIPPoolLowThresRchd.setDescription("This notification signifies that the number of addresses allocated\nfrom a given address pool has reached the lower threshold value.")
jnxMbgIPPoolExhausted = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 7)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolLogicalSystem"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolRoutingInstance"), ) )
if mibBuilder.loadTexts: jnxMbgIPPoolExhausted.setDescription("This notification signifies that the given pool has exhausted all its\naddresses and there are no free addresses left.")

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", PYSNMP_MODULE_ID=jnxMobileGatewayPgwSMIPPoolMib)

# Objects
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", jnxMobileGatewayPgwSMIPPoolMib=jnxMobileGatewayPgwSMIPPoolMib, jnxMbgSMIPPoolNotifications=jnxMbgSMIPPoolNotifications, jnxMbgSMIPPoolObjects=jnxMbgSMIPPoolObjects, jnxMbgSMIPPoolTable=jnxMbgSMIPPoolTable, jnxMbgSMIPPoolEntry=jnxMbgSMIPPoolEntry, jnxMbgSMIPPoolName=jnxMbgSMIPPoolName, jnxMbgSMIPPoolLogicalSystem=jnxMbgSMIPPoolLogicalSystem, jnxMbgSMIPPoolRoutingInstance=jnxMbgSMIPPoolRoutingInstance, jnxMbgSMIPPoolType=jnxMbgSMIPPoolType, jnxMbgSMIPPoolFree=jnxMbgSMIPPoolFree, jnxMbgSMIPPoolInUse=jnxMbgSMIPPoolInUse, jnxMbgSMIPPoolUtil=jnxMbgSMIPPoolUtil, jnxMbgSMIPPoolNotificationVars=jnxMbgSMIPPoolNotificationVars, jnxMbgSMIPPoolThresholdPoolName=jnxMbgSMIPPoolThresholdPoolName, jnxMbgSMIPPoolThresholdLSName=jnxMbgSMIPPoolThresholdLSName, jnxMbgSMIPPoolThresholdRIName=jnxMbgSMIPPoolThresholdRIName, jnxMbgSMIPPoolConfiguredThreshold=jnxMbgSMIPPoolConfiguredThreshold, jnxMbgSMIPPoolCurrentThreshold=jnxMbgSMIPPoolCurrentThreshold, jnxMbgSMIPPoolMMPoolName=jnxMbgSMIPPoolMMPoolName, jnxMbgSMIPPoolMMLSName=jnxMbgSMIPPoolMMLSName, jnxMbgSMIPPoolMMRIName=jnxMbgSMIPPoolMMRIName, jnxMbgSMIPPoolPrevMMState=jnxMbgSMIPPoolPrevMMState, jnxMbgSMIPPoolNewMMState=jnxMbgSMIPPoolNewMMState, jnxMbgSMIPRangeHiThresRangeName=jnxMbgSMIPRangeHiThresRangeName, jnxMbgSMIPRangeHiThresPoolName=jnxMbgSMIPRangeHiThresPoolName, jnxMbgSMIPRangeHiLSName=jnxMbgSMIPRangeHiLSName, jnxMbgSMIPRangeHiRIName=jnxMbgSMIPRangeHiRIName, jnxMbgSMIPRangeHiCfgThres=jnxMbgSMIPRangeHiCfgThres, jnxMbgSMIPRangeHiCurrUtil=jnxMbgSMIPRangeHiCurrUtil, jnxMbgSMIPRangeLowThresRangeName=jnxMbgSMIPRangeLowThresRangeName, jnxMbgSMIPRangeLowThresPoolName=jnxMbgSMIPRangeLowThresPoolName, jnxMbgSMIPRangeLowLSName=jnxMbgSMIPRangeLowLSName, jnxMbgSMIPRangeLowRIName=jnxMbgSMIPRangeLowRIName, jnxMbgSMIPRangeLowCfgThres=jnxMbgSMIPRangeLowCfgThres, jnxMbgSMIPRangeLowCurrUtil=jnxMbgSMIPRangeLowCurrUtil, jnxMbgSMIPPoolHTCfgThres=jnxMbgSMIPPoolHTCfgThres, jnxMbgSMIPPoolCurrUtil=jnxMbgSMIPPoolCurrUtil, jnxMbgSMIPPoolLTCfgThres=jnxMbgSMIPPoolLTCfgThres, jnxMbgIPPoolTable=jnxMbgIPPoolTable, jnxMbgIPPoolEntry=jnxMbgIPPoolEntry, jnxMbgIPPoolId=jnxMbgIPPoolId, jnxMbgIPPoolLogicalSystem=jnxMbgIPPoolLogicalSystem, jnxMbgIPPoolRoutingInstance=jnxMbgIPPoolRoutingInstance, jnxMbgIPPoolName=jnxMbgIPPoolName, jnxMbgIPPoolType=jnxMbgIPPoolType, jnxMbgIPPoolFree=jnxMbgIPPoolFree, jnxMbgIPPoolInUse=jnxMbgIPPoolInUse, jnxMbgIPPoolUtil=jnxMbgIPPoolUtil, jnxMbgIPPoolRangeTable=jnxMbgIPPoolRangeTable, jnxMbgIPPoolRangeEntry=jnxMbgIPPoolRangeEntry, jnxMbgIPPoolRangeName=jnxMbgIPPoolRangeName, jnxMbgIPPoolRangeType=jnxMbgIPPoolRangeType, jnxMbgIPPoolRangeFree=jnxMbgIPPoolRangeFree, jnxMbgIPPoolRangeInUse=jnxMbgIPPoolRangeInUse, jnxMbgIPPoolRangeUtil=jnxMbgIPPoolRangeUtil)

# Notifications
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", jnxMbgSMIPPoolThresholdExceeded=jnxMbgSMIPPoolThresholdExceeded, jnxMbgSMIPPoolMMStateChange=jnxMbgSMIPPoolMMStateChange, jnxMbgSMIPRangeHighThresExcd=jnxMbgSMIPRangeHighThresExcd, jnxMbgSMIPRangeLowThresRchd=jnxMbgSMIPRangeLowThresRchd, jnxMbgSMIPPoolHighThresExcd=jnxMbgSMIPPoolHighThresExcd, jnxMbgSMIPPoolLowThresRchd=jnxMbgSMIPPoolLowThresRchd, jnxMbgIPPoolExhausted=jnxMbgIPPoolExhausted)


# PySNMP SMI module. Autogenerated from smidump -f python NETSCREEN-SCHEDULE-MIB
# by libsmi2pysnmp-0.1.3 at Fri May 30 14:12:56 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( netscreenSchedule, ) = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenSchedule")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

netscreenScheduleMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 14, 0)).setRevisions(("2004-05-03 20:22","2004-05-03 00:00","2004-03-03 00:00","2003-11-10 00:00","2001-09-28 00:00","2001-05-27 00:00",))
if mibBuilder.loadTexts: netscreenScheduleMibModule.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: netscreenScheduleMibModule.setContactInfo("Customer Support\n\n1194 North Mathilda Avenue \nSunnyvale, California 94089-1206\nUSA\n\nTel: 1-800-638-8296\nE-mail: customerservice@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: netscreenScheduleMibModule.setDescription("This module defines the object that are used to monitor all\nscheduled entries")
nsSchOnceTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 14, 1))
if mibBuilder.loadTexts: nsSchOnceTable.setDescription("By associating a schedule to a NetScreen device setting, user\ncan determine when that setting is in effect. This table\nspecifies the configuration of  schedules as a one-time\nevent.")
nsSchOnceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1)).setIndexNames((0, "NETSCREEN-SCHEDULE-MIB", "nsSchOnceIndex"))
if mibBuilder.loadTexts: nsSchOnceEntry.setDescription("Each entry in the nsSchOnceTable holds a set of configuration\nparameters associated with an instance of one-time schedule.")
nsSchOnceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceIndex.setDescription("A unique value for schedule.  Its value ranges between 1 and\n65535 and may not be contiguous.  The index has no other\nmeaning but a pure index")
nsSchOnceName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceName.setDescription("schedule's name.")
nsSchOnceStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceStartTime.setDescription("schedule's start time.")
nsSchOnceStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceStopTime.setDescription("schedule's stop time.")
nsSchOnceComments = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceComments.setDescription("Comments for this schedule.")
nsSchOnceVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchOnceVsys.setDescription("Vsys this entry belongs to")
nsSchRecurTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 14, 2))
if mibBuilder.loadTexts: nsSchRecurTable.setDescription("By associating a schedule to a NetScreen device setting, user\ncan determine when that setting is in effect. This table\nspecifies the configuration of  schedules on a recurring\nbasis.")
nsSchRecurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1)).setIndexNames((0, "NETSCREEN-SCHEDULE-MIB", "nsSchRecurIndex"))
if mibBuilder.loadTexts: nsSchRecurEntry.setDescription("Each entry in the nsSchOnceTable holds a set of configuration\nparameters associated with an instance of re-occurring\nschedule.")
nsSchRecurIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurIndex.setDescription("A unique value for schedule.  Its value ranges between 1 and\n65535 and may not be contiguous.  The index has no other\nmeaning but a pure index")
nsSchRecurName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurName.setDescription("schedule's name")
nsSchRecurWeekday = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 3), Integer().subtype(subtypeSpec=SingleValueConstraint(1,5,0,4,3,2,6,)).subtype(namedValues=NamedValues(("sun", 0), ("mon", 1), ("tue", 2), ("wed", 3), ("thu", 4), ("fri", 5), ("sat", 6), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurWeekday.setDescription("schedule's starts date, using week day to determine.")
nsSchRecurStartTime1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurStartTime1.setDescription("schedule's start time one.")
nsSchRecurStopTime1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurStopTime1.setDescription("schedule's stop time one.")
nsSchRecurStartTime2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurStartTime2.setDescription("schedule start time two.")
nsSchRecurStopTime2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurStopTime2.setDescription("schedule stop time two.")
nsSchRecurComments = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurComments.setDescription("comments for the schedule.")
nsSchRecurVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 14, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSchRecurVsys.setDescription("The vsys this entry belongs to")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("NETSCREEN-SCHEDULE-MIB", PYSNMP_MODULE_ID=netscreenScheduleMibModule)

# Objects
mibBuilder.exportSymbols("NETSCREEN-SCHEDULE-MIB", netscreenScheduleMibModule=netscreenScheduleMibModule, nsSchOnceTable=nsSchOnceTable, nsSchOnceEntry=nsSchOnceEntry, nsSchOnceIndex=nsSchOnceIndex, nsSchOnceName=nsSchOnceName, nsSchOnceStartTime=nsSchOnceStartTime, nsSchOnceStopTime=nsSchOnceStopTime, nsSchOnceComments=nsSchOnceComments, nsSchOnceVsys=nsSchOnceVsys, nsSchRecurTable=nsSchRecurTable, nsSchRecurEntry=nsSchRecurEntry, nsSchRecurIndex=nsSchRecurIndex, nsSchRecurName=nsSchRecurName, nsSchRecurWeekday=nsSchRecurWeekday, nsSchRecurStartTime1=nsSchRecurStartTime1, nsSchRecurStopTime1=nsSchRecurStopTime1, nsSchRecurStartTime2=nsSchRecurStartTime2, nsSchRecurStopTime2=nsSchRecurStopTime2, nsSchRecurComments=nsSchRecurComments, nsSchRecurVsys=nsSchRecurVsys)


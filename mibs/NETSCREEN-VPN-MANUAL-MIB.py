# PySNMP SMI module. Autogenerated from smidump -f python NETSCREEN-VPN-MANUAL-MIB
# by libsmi2pysnmp-0.1.3 at Fri May 30 14:12:57 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( netscreenVpn, netscreenVpnMibModule, ) = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVpn", "netscreenVpnMibModule")
( Bits, Integer32, Integer32, IpAddress, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

netscreenVpnManualMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 4, 0, 2)).setRevisions(("2004-05-03 20:22","2004-05-03 00:00","2004-03-03 00:00","2003-11-13 00:00","2002-05-21 00:00","2001-09-28 00:00","2001-05-14 00:00",))
if mibBuilder.loadTexts: netscreenVpnManualMibModule.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: netscreenVpnManualMibModule.setContactInfo("Customer Support\n\n1194 North Mathilda Avenue \nSunnyvale, California 94089-1206\nUSA\n\nTel: 1-800-638-8296\nE-mail: customerservice@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: netscreenVpnManualMibModule.setDescription("This module defines NetScreen private MIBs for VPN Manual\nKey")
nsVpnManualKey = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 4, 2))
nsVpnManualKeyTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1))
if mibBuilder.loadTexts: nsVpnManualKeyTable.setDescription("This table specifies the configuration attributes for\nNetScreen device's manual key setting.")
nsVpnManualKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1)).setIndexNames((0, "NETSCREEN-VPN-MANUAL-MIB", "nsVpnManualKeyIndex"))
if mibBuilder.loadTexts: nsVpnManualKeyEntry.setDescription("Each entry in the nsVpnManualKeyTable holds a set of\nconfiguration  parameters associated with an instance of manual\nkey.")
nsVpnManualKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeyIndex.setDescription("A unique value for manual key table.  Its value ranges between\n0 and 65535 and may not be contiguous.")
nsVpnManualKeyTunName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeyTunName.setDescription("VPN tunnel name that uses this manual key configuration.")
nsVpnManualKeyGW = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeyGW.setDescription("VPN tunnel peer gateway IP address.")
nsVpnManualKeySILocal = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeySILocal.setDescription("Local Security Index.")
nsVpnManualKeySIRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeySIRemote.setDescription("Remote Security Index.")
nsVpnManualKeyTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 6), Integer().subtype(subtypeSpec=SingleValueConstraint(1,0,)).subtype(namedValues=NamedValues(("esp", 0), ("ah", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeyTunnelType.setDescription("VPN tunnel type.")
nsVpnManualKeyEspEncAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 7), Integer().subtype(subtypeSpec=SingleValueConstraint(2,5,1,4,3,0,)).subtype(namedValues=NamedValues(("null", 0), ("des-cbc", 1), ("tripple-des-cbc", 2), ("aes-cbc", 3), ("aes-192", 4), ("aes-256", 5), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeyEspEncAlg.setDescription("ESP Encryption Algorithm when manual key vpn tunnel type is\nESP.")
nsVpnManualKeyEspAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 8), Integer().subtype(subtypeSpec=SingleValueConstraint(2,0,3,1,)).subtype(namedValues=NamedValues(("null", 0), ("md5", 1), ("sha", 2), ("sha256", 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeyEspAuthAlg.setDescription("ESP Authentication Algorithm when manual key vpn tunnel type\nis ESP.")
nsVpnManualKeyAhHash = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 9), Integer().subtype(subtypeSpec=SingleValueConstraint(2,0,1,)).subtype(namedValues=NamedValues(("null", 0), ("md5", 1), ("sha", 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeyAhHash.setDescription("AH Hash Algorithm when manual key vpn tunnel type is AH.")
nsVpnManualKeyMonitorEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 10), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("disable", 0), ("enabled", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeyMonitorEnable.setDescription("Enable monitor vpn tunnel's link status.")
nsVpnManualKeyTunToTrust = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 11), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("disable", 0), ("enabled", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeyTunToTrust.setDescription("Tunnel to Trusted Interface")
nsVpnManualKeyVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnManualKeyVsys.setDescription("vsys this vpn manual key setting belongs to.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("NETSCREEN-VPN-MANUAL-MIB", PYSNMP_MODULE_ID=netscreenVpnManualMibModule)

# Objects
mibBuilder.exportSymbols("NETSCREEN-VPN-MANUAL-MIB", netscreenVpnManualMibModule=netscreenVpnManualMibModule, nsVpnManualKey=nsVpnManualKey, nsVpnManualKeyTable=nsVpnManualKeyTable, nsVpnManualKeyEntry=nsVpnManualKeyEntry, nsVpnManualKeyIndex=nsVpnManualKeyIndex, nsVpnManualKeyTunName=nsVpnManualKeyTunName, nsVpnManualKeyGW=nsVpnManualKeyGW, nsVpnManualKeySILocal=nsVpnManualKeySILocal, nsVpnManualKeySIRemote=nsVpnManualKeySIRemote, nsVpnManualKeyTunnelType=nsVpnManualKeyTunnelType, nsVpnManualKeyEspEncAlg=nsVpnManualKeyEspEncAlg, nsVpnManualKeyEspAuthAlg=nsVpnManualKeyEspAuthAlg, nsVpnManualKeyAhHash=nsVpnManualKeyAhHash, nsVpnManualKeyMonitorEnable=nsVpnManualKeyMonitorEnable, nsVpnManualKeyTunToTrust=nsVpnManualKeyTunToTrust, nsVpnManualKeyVsys=nsVpnManualKeyVsys)


# PySNMP SMI module. Autogenerated from smidump -f python SNMPv2-TM
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:58:14 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( Bits, Integer32, ModuleIdentity, MibIdentifier, ObjectIdentity, TimeTicks, snmpDomains, snmpModules, snmpProxys, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "ObjectIdentity", "TimeTicks", "snmpDomains", "snmpModules", "snmpProxys")
( TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention")

# Types

class SnmpIPXAddress(TextualConvention, OctetString):
    displayHint = "4x.1x:1x:1x:1x:1x:1x.2d"
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(12,12)
    fixedLength = 12
    
class SnmpNBPAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(3,99)
    
class SnmpOSIAddress(TextualConvention, OctetString):
    displayHint = "*1x:/1x:"
    subtypeSpec = OctetString.subtypeSpec+ConstraintsUnion(ValueSizeConstraint(1,1),ValueSizeConstraint(4,85),)
    
class SnmpUDPAddress(TextualConvention, OctetString):
    displayHint = "1d.1d.1d.1d/2d"
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(6,6)
    fixedLength = 6
    

# Objects

snmpUDPDomain = ObjectIdentity((1, 3, 6, 1, 6, 1, 1))
if mibBuilder.loadTexts: snmpUDPDomain.setDescription("The SNMP over UDP over IPv4 transport domain.\nThe corresponding transport address is of type\nSnmpUDPAddress.")
snmpCLNSDomain = ObjectIdentity((1, 3, 6, 1, 6, 1, 2))
if mibBuilder.loadTexts: snmpCLNSDomain.setDescription("The SNMP over CLNS transport domain.\nThe corresponding transport address is of type\nSnmpOSIAddress.")
snmpCONSDomain = ObjectIdentity((1, 3, 6, 1, 6, 1, 3))
if mibBuilder.loadTexts: snmpCONSDomain.setDescription("The SNMP over CONS transport domain.\nThe corresponding transport address is of type\nSnmpOSIAddress.")
snmpDDPDomain = ObjectIdentity((1, 3, 6, 1, 6, 1, 4))
if mibBuilder.loadTexts: snmpDDPDomain.setDescription("The SNMP over DDP transport domain.  The corresponding\ntransport address is of type SnmpNBPAddress.")
snmpIPXDomain = ObjectIdentity((1, 3, 6, 1, 6, 1, 5))
if mibBuilder.loadTexts: snmpIPXDomain.setDescription("The SNMP over IPX transport domain.  The corresponding\ntransport address is of type SnmpIPXAddress.")
rfc1157Proxy = MibIdentifier((1, 3, 6, 1, 6, 2, 1))
rfc1157Domain = ObjectIdentity((1, 3, 6, 1, 6, 2, 1, 1))
if mibBuilder.loadTexts: rfc1157Domain.setDescription("The transport domain for SNMPv1 over UDP over IPv4.\nThe corresponding transport address is of type\nSnmpUDPAddress.")
snmpv2tm = ModuleIdentity((1, 3, 6, 1, 6, 3, 19)).setRevisions(("2002-10-16 00:00","1996-01-01 00:00","1993-04-01 00:00",))
if mibBuilder.loadTexts: snmpv2tm.setOrganization("IETF SNMPv3 Working Group")
if mibBuilder.loadTexts: snmpv2tm.setContactInfo("WG-EMail:   snmpv3@lists.tislabs.com\nSubscribe:  snmpv3-request@lists.tislabs.com\n\nCo-Chair:   Russ Mundy\n            Network Associates Laboratories\npostal:     15204 Omega Drive, Suite 300\n            Rockville, MD 20850-4601\n            USA\nEMail:      mundy@tislabs.com\nphone:      +1 301 947-7107\n\nCo-Chair:   David Harrington\n            Enterasys Networks\npostal:     35 Industrial Way\n            P. O. Box 5005\n            Rochester, NH 03866-5005\n            USA\nEMail:      dbh@enterasys.com\nphone:      +1 603 337-2614\n\nEditor:     Randy Presuhn\n            BMC Software, Inc.\npostal:     2141 North First Street\n            San Jose, CA 95131\n            USA\nEMail:      randy_presuhn@bmc.com\nphone:      +1 408 546-1006")
if mibBuilder.loadTexts: snmpv2tm.setDescription("The MIB module for SNMP transport mappings.\n\nCopyright (C) The Internet Society (2002). This\nversion of this MIB module is part of RFC 3417;\nsee the RFC itself for full legal notices.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("SNMPv2-TM", PYSNMP_MODULE_ID=snmpv2tm)

# Types
mibBuilder.exportSymbols("SNMPv2-TM", SnmpIPXAddress=SnmpIPXAddress, SnmpNBPAddress=SnmpNBPAddress, SnmpOSIAddress=SnmpOSIAddress, SnmpUDPAddress=SnmpUDPAddress)

# Objects
mibBuilder.exportSymbols("SNMPv2-TM", snmpUDPDomain=snmpUDPDomain, snmpCLNSDomain=snmpCLNSDomain, snmpCONSDomain=snmpCONSDomain, snmpDDPDomain=snmpDDPDomain, snmpIPXDomain=snmpIPXDomain, rfc1157Proxy=rfc1157Proxy, rfc1157Domain=rfc1157Domain, snmpv2tm=snmpv2tm)


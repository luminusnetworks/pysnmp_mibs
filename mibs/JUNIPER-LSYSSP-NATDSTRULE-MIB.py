# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-LSYSSP-NATDSTRULE-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:52 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( jnxLsysSpNATdstrule, ) = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpNATdstrule")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

jnxLsysSpNATdstruleMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1)).setRevisions(("2010-05-19 16:44",))
if mibBuilder.loadTexts: jnxLsysSpNATdstruleMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleMIB.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\n\nE-mail: support@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleMIB.setDescription("This module defines the NAT-destination-rule-specific MIB for \nJuniper Enterprise Logical-System (LSYS) security profiles.  \nJuniper documentation is recommended as the reference. \n\nThe LSYS security profile provides various static and dynamic \nresource management by observing resource quota limits. \nSecurity NAT-destination-rule resource is the focus in this MIB. ")
jnxLsysSpNATdstruleObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 1))
jnxLsysSpNATdstruleTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 1, 1))
if mibBuilder.loadTexts: jnxLsysSpNATdstruleTable.setDescription("LSYSPROFILE NAT-destination-rule objects for NAT-destination-rule \nresource consumption per LSYS.")
jnxLsysSpNATdstruleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 1, 1, 1)).setIndexNames((1, "JUNIPER-LSYSSP-NATDSTRULE-MIB", "jnxLsysSpNATdstruleLsysName"))
if mibBuilder.loadTexts: jnxLsysSpNATdstruleEntry.setDescription("An entry in NAT-destination-rule resource table.")
jnxLsysSpNATdstruleLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleLsysName.setDescription("The name of the logical system for which NAT-destination-rule \nresource information is retrieved. ")
jnxLsysSpNATdstruleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleProfileName.setDescription("The security profile name string for the LSYS.")
jnxLsysSpNATdstruleUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleUsage.setDescription("The current resource usage count for the LSYS.")
jnxLsysSpNATdstruleReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleReserved.setDescription("The reserved resource count for the LSYS.")
jnxLsysSpNATdstruleMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleMaximum.setDescription("The maximum allowed resource usage count for the LSYS.")
jnxLsysSpNATdstruleSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 2))
jnxLsysSpNATdstruleUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleUsedAmount.setDescription("The NAT-destination-rule resource consumption over all LSYS.")
jnxLsysSpNATdstruleMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleMaxQuota.setDescription("The NAT-destination-rule resource maximum quota for the whole \ndevice for all LSYS.")
jnxLsysSpNATdstruleAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleAvailableAmount.setDescription("The NAT-destination-rule resource available in the whole device.")
jnxLsysSpNATdstruleHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleHeaviestUsage.setDescription("The most amount of NAT-destination-rule resource consumed of a \nLSYS.")
jnxLsysSpNATdstruleHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleHeaviestUser.setDescription("The LSYS name that consume the most NAT-destination-rule resource.")
jnxLsysSpNATdstruleLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleLightestUsage.setDescription("The least amount of NAT-destination-rule resource consumed of a \nLSYS.")
jnxLsysSpNATdstruleLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 13, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstruleLightestUser.setDescription("The LSYS name that consume the least NAT-destination-rule resource.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-LSYSSP-NATDSTRULE-MIB", PYSNMP_MODULE_ID=jnxLsysSpNATdstruleMIB)

# Objects
mibBuilder.exportSymbols("JUNIPER-LSYSSP-NATDSTRULE-MIB", jnxLsysSpNATdstruleMIB=jnxLsysSpNATdstruleMIB, jnxLsysSpNATdstruleObjects=jnxLsysSpNATdstruleObjects, jnxLsysSpNATdstruleTable=jnxLsysSpNATdstruleTable, jnxLsysSpNATdstruleEntry=jnxLsysSpNATdstruleEntry, jnxLsysSpNATdstruleLsysName=jnxLsysSpNATdstruleLsysName, jnxLsysSpNATdstruleProfileName=jnxLsysSpNATdstruleProfileName, jnxLsysSpNATdstruleUsage=jnxLsysSpNATdstruleUsage, jnxLsysSpNATdstruleReserved=jnxLsysSpNATdstruleReserved, jnxLsysSpNATdstruleMaximum=jnxLsysSpNATdstruleMaximum, jnxLsysSpNATdstruleSummary=jnxLsysSpNATdstruleSummary, jnxLsysSpNATdstruleUsedAmount=jnxLsysSpNATdstruleUsedAmount, jnxLsysSpNATdstruleMaxQuota=jnxLsysSpNATdstruleMaxQuota, jnxLsysSpNATdstruleAvailableAmount=jnxLsysSpNATdstruleAvailableAmount, jnxLsysSpNATdstruleHeaviestUsage=jnxLsysSpNATdstruleHeaviestUsage, jnxLsysSpNATdstruleHeaviestUser=jnxLsysSpNATdstruleHeaviestUser, jnxLsysSpNATdstruleLightestUsage=jnxLsysSpNATdstruleLightestUsage, jnxLsysSpNATdstruleLightestUser=jnxLsysSpNATdstruleLightestUser)


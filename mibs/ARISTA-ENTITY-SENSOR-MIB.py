# PySNMP SMI module. Autogenerated from smidump -f python ARISTA-ENTITY-SENSOR-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:32 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( aristaMibs, ) = mibBuilder.importSymbols("ARISTA-SMI-MIB", "aristaMibs")
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( entPhysicalDescr, entPhysicalIndex, ) = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalDescr", "entPhysicalIndex")
( EntitySensorValue, entPhySensorValue, ) = mibBuilder.importSymbols("ENTITY-SENSOR-MIB", "EntitySensorValue", "entPhySensorValue")
( entStateAlarm, ) = mibBuilder.importSymbols("ENTITY-STATE-MIB", "entStateAlarm")
( SnmpAdminString, ) = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
( ModuleCompliance, NotificationGroup, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")

# Objects

aristaEntSensorMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 30065, 3, 12)).setRevisions(("2013-05-09 09:50",))
if mibBuilder.loadTexts: aristaEntSensorMIB.setOrganization("Arista Networks, Inc.")
if mibBuilder.loadTexts: aristaEntSensorMIB.setContactInfo("Arista Networks, Inc.\n\nPostal: 5470 Great America Parkway\n        Santa Clara, CA 95054\n\nTel: +1 408 547-5500\n\nE-mail: snmp@aristanetworks.com")
if mibBuilder.loadTexts: aristaEntSensorMIB.setDescription("This MIB module augments the entPhySensorTable of \nENTITY-SENSOR-MIB to provide threshold information for \nvarious sensors in the system. For example, a given device\nmay have several voltage sensors as well as temperature\nsensors each with appropriate threshold support to help\nNMS systems detect and alert appropriately.\n\nIn addition, on systems where it is supported, if the \nsensor value crosses the supported threshold value the system\ncan generate appropriate notification as well.")
aristaEntSensorMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 12, 0))
aristaEntSensorMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 12, 1))
aristaEntSensorThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 30065, 3, 12, 1, 1))
if mibBuilder.loadTexts: aristaEntSensorThresholdTable.setDescription("This table contains threshold information for the \nvarious sensors in the system.")
aristaEntSensorThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30065, 3, 12, 1, 1, 1)).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: aristaEntSensorThresholdEntry.setDescription("A single row containing threshold information for a\nsensor. Threshold values are reported using the unit\nof EntitySensorValue. If a sensor does not support threshold\ndata, then an underflow/overflow value is returned.\nAll the other relevant information for the given sensor can be\nobtained from the entPhySensorTable itself.")
aristaEntSensorThresholdLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 12, 1, 1, 1, 1), EntitySensorValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaEntSensorThresholdLowWarning.setDescription("The low thresold value for the given sensor at which point\nthe entity's alarm status is set to warning.")
aristaEntSensorThresholdLowCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 12, 1, 1, 1, 2), EntitySensorValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaEntSensorThresholdLowCritical.setDescription("The low critical value for the given sensor at which point\nthe entity's alarm status is set to critical.")
aristaEntSensorThresholdHighWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 12, 1, 1, 1, 3), EntitySensorValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaEntSensorThresholdHighWarning.setDescription("The high thresold value for the given sensor at which point\nthe entity's alarm status is set to warning.")
aristaEntSensorThresholdHighCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 12, 1, 1, 1, 4), EntitySensorValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaEntSensorThresholdHighCritical.setDescription("The high critical value for the given sensor at which point\nthe entity's alarm status is set to critical.")
aristaEntSensorStatusDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 12, 1, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaEntSensorStatusDescr.setDescription("A textual description of the current status of the sensor.\nIt serves as a human-readable representation of the operating \nstatus including any threshold alerts.")
aristaEntSensorMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 12, 2))
aristaEntSensorMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 12, 2, 1))
aristaEntSensorMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 12, 2, 2))

# Augmentions

# Notifications

aristaEntSensorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 30065, 3, 12, 0, 1)).setObjects(*(("ENTITY-SENSOR-MIB", "entPhySensorValue"), ("ENTITY-MIB", "entPhysicalDescr"), ("ENTITY-STATE-MIB", "entStateAlarm"), ) )
if mibBuilder.loadTexts: aristaEntSensorAlarm.setDescription("This notification is generated under 2 conditions:\na) When the value of the sensor value crosses a supported\nlow or high threshold into warning or critical status.\nb) If previously the sensor value was in a warning or\ncritical status but returns back to a normal status.")

# Groups

aristaEntSensorThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 30065, 3, 12, 2, 2, 1)).setObjects(*(("ARISTA-ENTITY-SENSOR-MIB", "aristaEntSensorStatusDescr"), ("ARISTA-ENTITY-SENSOR-MIB", "aristaEntSensorThresholdLowWarning"), ("ARISTA-ENTITY-SENSOR-MIB", "aristaEntSensorThresholdLowCritical"), ("ARISTA-ENTITY-SENSOR-MIB", "aristaEntSensorThresholdHighWarning"), ("ARISTA-ENTITY-SENSOR-MIB", "aristaEntSensorThresholdHighCritical"), ) )
if mibBuilder.loadTexts: aristaEntSensorThresholdGroup.setDescription("The collection of objects that provide threshold\ninformation for the sensors in the system.")
aristaEntSensorNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 30065, 3, 12, 2, 2, 2)).setObjects(*(("ARISTA-ENTITY-SENSOR-MIB", "aristaEntSensorAlarm"), ) )
if mibBuilder.loadTexts: aristaEntSensorNotificationsGroup.setDescription("The collection of notifications generated by the system if\nsensor(s) change value are not within the acceptable operating\nrange.")

# Compliances

aristaEntSensorMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 30065, 3, 12, 2, 1, 1)).setObjects(*(("ARISTA-ENTITY-SENSOR-MIB", "aristaEntSensorNotificationsGroup"), ("ARISTA-ENTITY-SENSOR-MIB", "aristaEntSensorThresholdGroup"), ) )
if mibBuilder.loadTexts: aristaEntSensorMibCompliance.setDescription("The compliance statement for Arista switches that implement\nthe ARISTA-ENTITY-SENSOR-MIB.")

# Exports

# Module identity
mibBuilder.exportSymbols("ARISTA-ENTITY-SENSOR-MIB", PYSNMP_MODULE_ID=aristaEntSensorMIB)

# Objects
mibBuilder.exportSymbols("ARISTA-ENTITY-SENSOR-MIB", aristaEntSensorMIB=aristaEntSensorMIB, aristaEntSensorMibNotifications=aristaEntSensorMibNotifications, aristaEntSensorMibObjects=aristaEntSensorMibObjects, aristaEntSensorThresholdTable=aristaEntSensorThresholdTable, aristaEntSensorThresholdEntry=aristaEntSensorThresholdEntry, aristaEntSensorThresholdLowWarning=aristaEntSensorThresholdLowWarning, aristaEntSensorThresholdLowCritical=aristaEntSensorThresholdLowCritical, aristaEntSensorThresholdHighWarning=aristaEntSensorThresholdHighWarning, aristaEntSensorThresholdHighCritical=aristaEntSensorThresholdHighCritical, aristaEntSensorStatusDescr=aristaEntSensorStatusDescr, aristaEntSensorMibConformance=aristaEntSensorMibConformance, aristaEntSensorMibCompliances=aristaEntSensorMibCompliances, aristaEntSensorMibGroups=aristaEntSensorMibGroups)

# Notifications
mibBuilder.exportSymbols("ARISTA-ENTITY-SENSOR-MIB", aristaEntSensorAlarm=aristaEntSensorAlarm)

# Groups
mibBuilder.exportSymbols("ARISTA-ENTITY-SENSOR-MIB", aristaEntSensorThresholdGroup=aristaEntSensorThresholdGroup, aristaEntSensorNotificationsGroup=aristaEntSensorNotificationsGroup)

# Compliances
mibBuilder.exportSymbols("ARISTA-ENTITY-SENSOR-MIB", aristaEntSensorMibCompliance=aristaEntSensorMibCompliance)

# PySNMP SMI module. Autogenerated from smidump -f python NETSCREEN-SET-LOG-MIB
# by libsmi2pysnmp-0.1.3 at Fri May 30 14:12:56 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( netscreenSetting, netscreenSettingMibModule, ) = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenSetting", "netscreenSettingMibModule")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

netscreenSetLogMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 7, 0, 8)).setRevisions(("2004-05-03 20:22","2004-05-03 00:00","2004-03-03 00:00","2003-11-10 00:00","2001-09-28 00:00","2001-05-27 00:00",))
if mibBuilder.loadTexts: netscreenSetLogMibModule.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: netscreenSetLogMibModule.setContactInfo("Customer Support\n\n1194 North Mathilda Avenue \nSunnyvale, California 94089-1206\nUSA\n\nTel: 1-800-638-8296\nE-mail: customerservice@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: netscreenSetLogMibModule.setDescription("This module defines the object that are used to monitor \nsyslog setting")
nsSetLog = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 7, 8))
nsSetLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 1), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("disable", 0), ("enabled", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogEnable.setDescription("Enable Syslog messages")
nsSetLogVPNEnable = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 2), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("disable", 0), ("enabled", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogVPNEnable.setDescription("Secure syslog message traffic using VPN encryption")
nsSetLogTraffic = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 3), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("disable", 0), ("enabled", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogTraffic.setDescription("Including traffic log when recording administration log")
nsSetLogHostName = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogHostName.setDescription("syslog server name or ip address")
nsSetLogPort = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogPort.setDescription("syslog server port number")
nsSetLogSecFacility = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 6), Integer().subtype(subtypeSpec=SingleValueConstraint(23,21,20,4,22,17,16,19,18,)).subtype(namedValues=NamedValues(("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23), ("auth-sec", 4), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogSecFacility.setDescription("Security Facility of syslog server")
nsSetLogFacility = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 7), Integer().subtype(subtypeSpec=SingleValueConstraint(21,23,20,4,22,17,16,19,18,)).subtype(namedValues=NamedValues(("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("lcoal5", 21), ("local6", 22), ("loca7", 23), ("auth-sec", 4), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogFacility.setDescription("Facility of syslog server")
nsSetLogLevel = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 8), Integer().subtype(subtypeSpec=SingleValueConstraint(6,5,2,0,7,1,3,4,)).subtype(namedValues=NamedValues(("emergency", 0), ("aleart", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogLevel.setDescription("Only log messages with a priority level of\nEMERGENCY/ALERT/CRITICAL/ERROR/WARNING/NOTICE/INFO/DEBUG or\nhigher")
nsSetLogWebTrendsEnable = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 9), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("disable", 0), ("enabled", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogWebTrendsEnable.setDescription("Enable WebTrends Firewall syslog report.")
nsSetLogWebTrendsVPNEnable = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 10), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("disable", 0), ("enabled", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogWebTrendsVPNEnable.setDescription("Secure WebTrends message via VPN encryption")
nsSetLogWebTrendsHostName = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogWebTrendsHostName.setDescription("WebTrends Host Name")
nsSetLogWebTrendsPort = MibScalar((1, 3, 6, 1, 4, 1, 3224, 7, 8, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetLogWebTrendsPort.setDescription("WebTrends Host Port")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("NETSCREEN-SET-LOG-MIB", PYSNMP_MODULE_ID=netscreenSetLogMibModule)

# Objects
mibBuilder.exportSymbols("NETSCREEN-SET-LOG-MIB", netscreenSetLogMibModule=netscreenSetLogMibModule, nsSetLog=nsSetLog, nsSetLogEnable=nsSetLogEnable, nsSetLogVPNEnable=nsSetLogVPNEnable, nsSetLogTraffic=nsSetLogTraffic, nsSetLogHostName=nsSetLogHostName, nsSetLogPort=nsSetLogPort, nsSetLogSecFacility=nsSetLogSecFacility, nsSetLogFacility=nsSetLogFacility, nsSetLogLevel=nsSetLogLevel, nsSetLogWebTrendsEnable=nsSetLogWebTrendsEnable, nsSetLogWebTrendsVPNEnable=nsSetLogWebTrendsVPNEnable, nsSetLogWebTrendsHostName=nsSetLogWebTrendsHostName, nsSetLogWebTrendsPort=nsSetLogWebTrendsPort)


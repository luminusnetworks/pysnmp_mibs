# PySNMP SMI module. Autogenerated from smidump -f python SYSLOG-MSG-MIB
# by libsmi2pysnmp-0.1.3 at Fri May 23 07:48:07 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( ModuleCompliance, NotificationGroup, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "mib-2")
( DisplayString, TextualConvention, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
( SyslogFacility, SyslogSeverity, ) = mibBuilder.importSymbols("SYSLOG-TC-MIB", "SyslogFacility", "SyslogSeverity")

# Types

class SyslogParamValueString(TextualConvention, OctetString):
    displayHint = "65535t"
    
class SyslogTimeStamp(TextualConvention, OctetString):
    displayHint = "2d-1d-1d,1d:1d:1d.3d,1a1d:1d"
    subtypeSpec = OctetString.subtypeSpec+ConstraintsUnion(ValueSizeConstraint(0,0),ValueSizeConstraint(10,10),ValueSizeConstraint(13,13),)
    

# Objects

syslogMsgMib = ModuleIdentity((1, 3, 6, 1, 2, 1, 192)).setRevisions(("2009-08-13 08:00",))
if mibBuilder.loadTexts: syslogMsgMib.setOrganization("IETF OPSAWG Working Group")
if mibBuilder.loadTexts: syslogMsgMib.setContactInfo("Juergen Schoenwaelder\n<j.schoenwaelder@jacobs-university.de>\nJacobs University Bremen\nCampus Ring 1\n28757 Bremen\nGermany\n\nAlexander Clemm\n<alex@cisco.com>\nCisco Systems\n170 West Tasman Drive\nSan Jose, CA 95134-1706\nUSA\n\nAnirban Karmakar\n<akarmaka@cisco.com>\nCisco Systems India Pvt Ltd\nSEZ Unit, Cessna Business Park,\nSarjapur Marathahalli ORR,\nBangalore, Karnataka 560103\nIndia")
if mibBuilder.loadTexts: syslogMsgMib.setDescription("This MIB module represents SYSLOG messages as SNMP objects.\n\nCopyright (c) 2009 IETF Trust and the persons identified as\nauthors of the code.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or\nwithout modification, is permitted pursuant to, and subject\nto the license terms contained in, the Simplified BSD License\nset forth in Section 4.c of the IETF Trust's Legal Provisions\nRelating to IETF Documents\n(http://trustee.ietf.org/license-info).\n\nThis version of this MIB module is part of RFC 5676; see\nthe RFC itself for full legal notices.")
syslogMsgNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 192, 0))
syslogMsgObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 192, 1))
syslogMsgControl = MibIdentifier((1, 3, 6, 1, 2, 1, 192, 1, 1))
syslogMsgTableMaxSize = MibScalar((1, 3, 6, 1, 2, 1, 192, 1, 1, 1), Unsigned32().clone(0)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogMsgTableMaxSize.setDescription("The maximum number of SYSLOG messages that may be held in\nsyslogMsgTable.  A particular setting does not guarantee that\nthere is sufficient memory available for the maximum number\nof table entries indicated by this object.  A value of 0 means\nno fixed limit.\n\nIf an application reduces the limit while there are SYSLOG\nmessages in the syslogMsgTable, the SYSLOG messages that are\nin the syslogMsgTable for the longest time MUST be discarded\nto bring the table down to the new limit.\n\nThe value of this object should be kept in nonvolatile\nmemory.")
syslogMsgEnableNotifications = MibScalar((1, 3, 6, 1, 2, 1, 192, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogMsgEnableNotifications.setDescription("Indicates whether syslogMsgNotification notifications are\ngenerated.\n\nThe value of this object should be kept in nonvolatile\nmemory.")
syslogMsgTable = MibTable((1, 3, 6, 1, 2, 1, 192, 1, 2))
if mibBuilder.loadTexts: syslogMsgTable.setDescription("A table containing recent SYSLOG messages.  The size of the\ntable is controlled by the syslogMsgTableMaxSize object.")
syslogMsgEntry = MibTableRow((1, 3, 6, 1, 2, 1, 192, 1, 2, 1)).setIndexNames((0, "SYSLOG-MSG-MIB", "syslogMsgIndex"))
if mibBuilder.loadTexts: syslogMsgEntry.setDescription("An entry of the syslogMsgTable.")
syslogMsgIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: syslogMsgIndex.setDescription("A monotonically increasing number used to identify entries in\nthe syslogMsgTable.  When syslogMsgIndex reaches the maximum\nvalue (4294967295), the value wraps back to 1.\n\nApplications periodically polling the syslogMsgTable for new\nentries should take into account that a complete rollover of\nsyslogMsgIndex will happen if more than 4294967294 messages\nare received during a poll interval.")
syslogMsgFacility = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 2, 1, 2), SyslogFacility()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMsgFacility.setDescription("The facility of the SYSLOG message.")
syslogMsgSeverity = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 2, 1, 3), SyslogSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMsgSeverity.setDescription("The severity of the SYSLOG message")
syslogMsgVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMsgVersion.setDescription("The version of the SYSLOG message.  A value of 0 indicates\nthat the version is unknown.")
syslogMsgTimeStamp = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 2, 1, 5), SyslogTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMsgTimeStamp.setDescription("The timestamp of the SYSLOG message.  A zero-length\nstring is returned if the timestamp is unknown.")
syslogMsgHostName = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMsgHostName.setDescription("The hostname and the (optional) domain name of the SYSLOG\nmessage.  A zero-length string indicates an unknown hostname.\nThe SYSLOG protocol specification constrains this string to\nprintable US-ASCII code points.")
syslogMsgAppName = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMsgAppName.setDescription("The app-name of the SYSLOG message.  A zero-length string\nindicates an unknown app-name.  The SYSLOG protocol\nspecification constrains this string to printable US-ASCII\ncode points.")
syslogMsgProcID = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMsgProcID.setDescription("The procid of the SYSLOG message.  A zero-length string\nindicates an unknown procid.  The SYSLOG protocol\nspecification constrains this string to printable\nUS-ASCII code points.")
syslogMsgMsgID = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMsgMsgID.setDescription("The msgid of the SYSLOG message.  A zero-length string\nindicates an unknown msgid.  The SYSLOG protocol specification\nconstrains this string to printable US-ASCII code points.")
syslogMsgSDParams = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMsgSDParams.setDescription("The total number of structured data element parameters\ncarried in the SYSLOG message.  This number effectively\nindicates the number of entries in the syslogMsgSDTable.\nIt can be used, for example, by a notification receiver\nto determine whether a notification carried all\nstructured data element parameters of a SYSLOG message.")
syslogMsgMsg = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 2, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMsgMsg.setDescription("The message part of the SYSLOG message.  The syntax does not\nimpose a size restriction.  Implementations of this MIB module\nmay truncate the message part of the SYSLOG message such that\nit fits into the size constraints imposed by the implementation\nenvironment.  Such truncations can also happen elsewhere in the\nSYSLOG forwarding chain.\n\nIf the first octets contain the value 'EFBBBF'h, then the rest\nof the message is a UTF-8 string.  Since SYSLOG messages may be\ntruncated at arbitrary octet boundaries during forwarding, the\nmessage may contain invalid UTF-8 encodings at the end.")
syslogMsgSDTable = MibTable((1, 3, 6, 1, 2, 1, 192, 1, 3))
if mibBuilder.loadTexts: syslogMsgSDTable.setDescription("A table containing structured data elements of SYSLOG\nmessages.")
syslogMsgSDEntry = MibTableRow((1, 3, 6, 1, 2, 1, 192, 1, 3, 1)).setIndexNames((0, "SYSLOG-MSG-MIB", "syslogMsgIndex"), (0, "SYSLOG-MSG-MIB", "syslogMsgSDParamIndex"), (0, "SYSLOG-MSG-MIB", "syslogMsgSDID"), (0, "SYSLOG-MSG-MIB", "syslogMsgSDParamName"))
if mibBuilder.loadTexts: syslogMsgSDEntry.setDescription("An entry of the syslogMsgSDTable.")
syslogMsgSDParamIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: syslogMsgSDParamIndex.setDescription("This object indexes the structured data element parameters\ncontained in a SYSLOG message.  The first structured data\nelement parameter has the index value 1, and subsequent\nparameters are indexed by incrementing the index of the\nprevious parameter.  The index increases across structured\ndata element boundaries so that the value reflects the\nposition of a structured data element parameter in a\nSYSLOG message.")
syslogMsgSDID = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: syslogMsgSDID.setDescription("The name (SD-ID) of a structured data element.  The SYSLOG\nprotocol specification constrains this string to printable\nUS-ASCII code points.")
syslogMsgSDParamName = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: syslogMsgSDParamName.setDescription("The name of a parameter of the structured data element.  The\nSYSLOG protocol specification constrains this string to\nprintable US-ASCII code points.")
syslogMsgSDParamValue = MibTableColumn((1, 3, 6, 1, 2, 1, 192, 1, 3, 1, 4), SyslogParamValueString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMsgSDParamValue.setDescription("The value of the parameter of a SYSLOG message identified by\nthe index of this table.  The value is stored in the unescaped\nformat.")
syslogMsgConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 192, 2))
syslogMsgGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 192, 2, 1))
syslogMsgCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 192, 2, 2))

# Augmentions

# Notifications

syslogMsgNotification = NotificationType((1, 3, 6, 1, 2, 1, 192, 0, 1)).setObjects(*(("SYSLOG-MSG-MIB", "syslogMsgProcID"), ("SYSLOG-MSG-MIB", "syslogMsgMsgID"), ("SYSLOG-MSG-MIB", "syslogMsgSDParams"), ("SYSLOG-MSG-MIB", "syslogMsgFacility"), ("SYSLOG-MSG-MIB", "syslogMsgAppName"), ("SYSLOG-MSG-MIB", "syslogMsgMsg"), ("SYSLOG-MSG-MIB", "syslogMsgHostName"), ("SYSLOG-MSG-MIB", "syslogMsgVersion"), ("SYSLOG-MSG-MIB", "syslogMsgTimeStamp"), ("SYSLOG-MSG-MIB", "syslogMsgSeverity"), ) )
if mibBuilder.loadTexts: syslogMsgNotification.setDescription("The syslogMsgNotification is generated when a new SYSLOG\nmessage is received and the value of\nsyslogMsgGenerateNotifications is true.\n\nImplementations may add syslogMsgSDParamValue objects as long\nas the resulting notification fits into the size constraints\nimposed by the implementation environment and the notification\nmessage size constraints imposed by maxMessageSize [RFC3412]\nand SNMP transport mappings.")

# Groups

syslogMsgNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 192, 2, 1, 1)).setObjects(*(("SYSLOG-MSG-MIB", "syslogMsgNotification"), ) )
if mibBuilder.loadTexts: syslogMsgNotificationGroup.setDescription("The notifications emitted by this MIB module.")
syslogMsgGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 192, 2, 1, 2)).setObjects(*(("SYSLOG-MSG-MIB", "syslogMsgProcID"), ("SYSLOG-MSG-MIB", "syslogMsgMsgID"), ("SYSLOG-MSG-MIB", "syslogMsgSDParams"), ("SYSLOG-MSG-MIB", "syslogMsgFacility"), ("SYSLOG-MSG-MIB", "syslogMsgAppName"), ("SYSLOG-MSG-MIB", "syslogMsgMsg"), ("SYSLOG-MSG-MIB", "syslogMsgHostName"), ("SYSLOG-MSG-MIB", "syslogMsgVersion"), ("SYSLOG-MSG-MIB", "syslogMsgTimeStamp"), ("SYSLOG-MSG-MIB", "syslogMsgSeverity"), ) )
if mibBuilder.loadTexts: syslogMsgGroup.setDescription("A collection of objects representing a SYSLOG message,\nexcluding structured data elements.")
syslogMsgSDGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 192, 2, 1, 3)).setObjects(*(("SYSLOG-MSG-MIB", "syslogMsgSDParamValue"), ) )
if mibBuilder.loadTexts: syslogMsgSDGroup.setDescription("A collection of objects representing the structured data\nelements of a SYSLOG message.")
syslogMsgControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 192, 2, 1, 4)).setObjects(*(("SYSLOG-MSG-MIB", "syslogMsgEnableNotifications"), ("SYSLOG-MSG-MIB", "syslogMsgTableMaxSize"), ) )
if mibBuilder.loadTexts: syslogMsgControlGroup.setDescription("A collection of control objects to control the size of the\nsyslogMsgTable and to enable/disable notifications.")

# Compliances

syslogMsgFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 192, 2, 2, 1)).setObjects(*(("SYSLOG-MSG-MIB", "syslogMsgGroup"), ("SYSLOG-MSG-MIB", "syslogMsgNotificationGroup"), ("SYSLOG-MSG-MIB", "syslogMsgSDGroup"), ("SYSLOG-MSG-MIB", "syslogMsgControlGroup"), ) )
if mibBuilder.loadTexts: syslogMsgFullCompliance.setDescription("The compliance statement for implementations of the\nSYSLOG-MSG-MIB.")
syslogMsgReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 192, 2, 2, 2)).setObjects(*(("SYSLOG-MSG-MIB", "syslogMsgGroup"), ("SYSLOG-MSG-MIB", "syslogMsgNotificationGroup"), ("SYSLOG-MSG-MIB", "syslogMsgSDGroup"), ("SYSLOG-MSG-MIB", "syslogMsgControlGroup"), ) )
if mibBuilder.loadTexts: syslogMsgReadOnlyCompliance.setDescription("The compliance statement for implementations of the\nSYSLOG-MSG-MIB that do not support read-write access.")
syslogMsgNotificationCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 192, 2, 2, 3)).setObjects(*(("SYSLOG-MSG-MIB", "syslogMsgGroup"), ("SYSLOG-MSG-MIB", "syslogMsgNotificationGroup"), ("SYSLOG-MSG-MIB", "syslogMsgSDGroup"), ) )
if mibBuilder.loadTexts: syslogMsgNotificationCompliance.setDescription("The compliance statement for implementations of the\nSYSLOG-MSG-MIB that do only generate notifications and do not\nprovide a table to allow read access to SYSLOG message\ndetails.")

# Exports

# Module identity
mibBuilder.exportSymbols("SYSLOG-MSG-MIB", PYSNMP_MODULE_ID=syslogMsgMib)

# Types
mibBuilder.exportSymbols("SYSLOG-MSG-MIB", SyslogParamValueString=SyslogParamValueString, SyslogTimeStamp=SyslogTimeStamp)

# Objects
mibBuilder.exportSymbols("SYSLOG-MSG-MIB", syslogMsgMib=syslogMsgMib, syslogMsgNotifications=syslogMsgNotifications, syslogMsgObjects=syslogMsgObjects, syslogMsgControl=syslogMsgControl, syslogMsgTableMaxSize=syslogMsgTableMaxSize, syslogMsgEnableNotifications=syslogMsgEnableNotifications, syslogMsgTable=syslogMsgTable, syslogMsgEntry=syslogMsgEntry, syslogMsgIndex=syslogMsgIndex, syslogMsgFacility=syslogMsgFacility, syslogMsgSeverity=syslogMsgSeverity, syslogMsgVersion=syslogMsgVersion, syslogMsgTimeStamp=syslogMsgTimeStamp, syslogMsgHostName=syslogMsgHostName, syslogMsgAppName=syslogMsgAppName, syslogMsgProcID=syslogMsgProcID, syslogMsgMsgID=syslogMsgMsgID, syslogMsgSDParams=syslogMsgSDParams, syslogMsgMsg=syslogMsgMsg, syslogMsgSDTable=syslogMsgSDTable, syslogMsgSDEntry=syslogMsgSDEntry, syslogMsgSDParamIndex=syslogMsgSDParamIndex, syslogMsgSDID=syslogMsgSDID, syslogMsgSDParamName=syslogMsgSDParamName, syslogMsgSDParamValue=syslogMsgSDParamValue, syslogMsgConformance=syslogMsgConformance, syslogMsgGroups=syslogMsgGroups, syslogMsgCompliances=syslogMsgCompliances)

# Notifications
mibBuilder.exportSymbols("SYSLOG-MSG-MIB", syslogMsgNotification=syslogMsgNotification)

# Groups
mibBuilder.exportSymbols("SYSLOG-MSG-MIB", syslogMsgNotificationGroup=syslogMsgNotificationGroup, syslogMsgGroup=syslogMsgGroup, syslogMsgSDGroup=syslogMsgSDGroup, syslogMsgControlGroup=syslogMsgControlGroup)

# Compliances
mibBuilder.exportSymbols("SYSLOG-MSG-MIB", syslogMsgFullCompliance=syslogMsgFullCompliance, syslogMsgReadOnlyCompliance=syslogMsgReadOnlyCompliance, syslogMsgNotificationCompliance=syslogMsgNotificationCompliance)

# PySNMP SMI module. Autogenerated from smidump -f python TUBS-IBR-LINUX-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:58:16 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( DisplayString, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
( ibr, ) = mibBuilder.importSymbols("TUBS-SMI", "ibr")

# Types

class LoadValue(TextualConvention, Integer32):
    displayHint = "d-2"
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(0,2147483647)
    

# Objects

linuxMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1575, 1, 5)).setRevisions(("2000-02-09 00:00","1998-01-07 06:22","1997-02-14 10:23","1994-11-15 20:24",))
if mibBuilder.loadTexts: linuxMIB.setOrganization("TU Braunschweig")
if mibBuilder.loadTexts: linuxMIB.setContactInfo("Juergen Schoenwaelder\nTU Braunschweig\nBueltenweg 74/75\n38106 Braunschweig\nGermany\n\nTel: +49 531 391 3283\nFax: +49 531 391 5936\nE-mail: schoenw@ibr.cs.tu-bs.de")
if mibBuilder.loadTexts: linuxMIB.setDescription("Experimental MIB module for the linux operating system.")
linuxObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1575, 1, 5, 2))
linuxCPU = MibScalar((1, 3, 6, 1, 4, 1, 1575, 1, 5, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linuxCPU.setDescription("The identification of the linux CPUs. This string contains\nforeach CPU present in the system the CPU type, model and\nvendor (if known by the operating system).")
linuxBogo = MibScalar((1, 3, 6, 1, 4, 1, 1575, 1, 5, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linuxBogo.setDescription("The number of BOGO MIPS of the linux system.")
linuxLoadAvg1 = MibScalar((1, 3, 6, 1, 4, 1, 1575, 1, 5, 2, 3), LoadValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linuxLoadAvg1.setDescription("The average system load during the last 60 seconds.")
linuxLoadAvg5 = MibScalar((1, 3, 6, 1, 4, 1, 1575, 1, 5, 2, 4), LoadValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linuxLoadAvg5.setDescription("The average system load during the last 5 minutes.")
linuxLoadAvg15 = MibScalar((1, 3, 6, 1, 4, 1, 1575, 1, 5, 2, 5), LoadValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linuxLoadAvg15.setDescription("The average system load during the last 15 minutes.")
linuxConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1575, 1, 5, 3))
linuxCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1575, 1, 5, 3, 1))
linuxGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1575, 1, 5, 3, 2))

# Augmentions

# Groups

linuxGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1575, 1, 5, 3, 2, 1)).setObjects(*(("TUBS-IBR-LINUX-MIB", "linuxCPU"), ("TUBS-IBR-LINUX-MIB", "linuxLoadAvg5"), ("TUBS-IBR-LINUX-MIB", "linuxBogo"), ("TUBS-IBR-LINUX-MIB", "linuxLoadAvg15"), ("TUBS-IBR-LINUX-MIB", "linuxLoadAvg1"), ) )
if mibBuilder.loadTexts: linuxGroup.setDescription("A collection of linux specific objects.")

# Compliances

linuxCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1575, 1, 5, 3, 1, 1)).setObjects(*(("TUBS-IBR-LINUX-MIB", "linuxGroup"), ) )
if mibBuilder.loadTexts: linuxCompliance.setDescription("The compliance statement for an SNMP entity which implements\nthe linux MIB.")

# Exports

# Module identity
mibBuilder.exportSymbols("TUBS-IBR-LINUX-MIB", PYSNMP_MODULE_ID=linuxMIB)

# Types
mibBuilder.exportSymbols("TUBS-IBR-LINUX-MIB", LoadValue=LoadValue)

# Objects
mibBuilder.exportSymbols("TUBS-IBR-LINUX-MIB", linuxMIB=linuxMIB, linuxObjects=linuxObjects, linuxCPU=linuxCPU, linuxBogo=linuxBogo, linuxLoadAvg1=linuxLoadAvg1, linuxLoadAvg5=linuxLoadAvg5, linuxLoadAvg15=linuxLoadAvg15, linuxConformance=linuxConformance, linuxCompliances=linuxCompliances, linuxGroups=linuxGroups)

# Groups
mibBuilder.exportSymbols("TUBS-IBR-LINUX-MIB", linuxGroup=linuxGroup)

# Compliances
mibBuilder.exportSymbols("TUBS-IBR-LINUX-MIB", linuxCompliance=linuxCompliance)

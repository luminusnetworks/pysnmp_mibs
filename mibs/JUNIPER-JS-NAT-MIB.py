# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-JS-NAT-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:51 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( InterfaceIndex, ) = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
( InetAddress, InetAddressIPv4, InetAddressType, ) = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressIPv4", "InetAddressType")
( jnxJsNAT, ) = mibBuilder.importSymbols("JUNIPER-JS-SMI", "jnxJsNAT")
( Bits, Counter32, Gauge32, Integer32, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Gauge32", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( DateAndTime, DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString")

# Objects

jnxJsNatMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1)).setRevisions(("2012-03-01 11:22","2007-04-13 20:22",))
if mibBuilder.loadTexts: jnxJsNatMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxJsNatMIB.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\n\nE-mail: support@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: jnxJsNatMIB.setDescription("This module defines the object that are used to monitor\nnetwork address translation attributes.")
jnxJsNatNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 0))
jnxJsNatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1))
jnxJsSrcNatNumOfEntries = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSrcNatNumOfEntries.setDescription("Total number of dynamic addresses being translated.  \n\njnxJsSrcNatNumOfEntries provides the total number \nof entries in the jnxJsSrcNatTable. ")
jnxJsSrcNatTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2))
if mibBuilder.loadTexts: jnxJsSrcNatTable.setDescription("This table exposes the source NAT translation \nattributes of the translated addresses. \n\nWhen performing source IP address translation, the device \ntranslates the original source IP address and/or port \nnumber to different one.  The resource, address source pools\nprovide the security device with a supply of addresses from \nwhich to draw when performing source network address translation.\n\nThe security device has the following types of source pools:\n	- source pool with PAT (Port Address Translation)\n	- source pool without PAT\n	- Static Source Pool\n\nThis table contains information on source IP address \ntranslation only.")
jnxJsSrcNatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1)).setIndexNames((0, "JUNIPER-JS-NAT-MIB", "jnxJsNatSrcIpPoolName"), (0, "JUNIPER-JS-NAT-MIB", "jnxJsNatSrcGlobalAddr"))
if mibBuilder.loadTexts: jnxJsSrcNatEntry.setDescription("Source NAT address entries.  It is indexed by the address  \npool table and the address allocated. ")
jnxJsNatSrcIpPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsNatSrcIpPoolName.setDescription("The name of dynamic source IP address pool. \n\nThis is the address pool where the translated   \naddress is allocated from. ")
jnxJsNatSrcGlobalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 2), InetAddressIPv4()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxJsNatSrcGlobalAddr.setDescription("The name of dynamic source IP address allocated from \nthe address pool used in the NAT translation. ")
jnxJsNatSrcPortPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 3), Integer().subtype(subtypeSpec=SingleValueConstraint(1,2,3,)).subtype(namedValues=NamedValues(("withPAT", 1), ("withoutPAT", 2), ("static", 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcPortPoolType.setDescription("Source NAT can do address translation with or without port \naddress translation (PAT).  The source port pool type indicates\nwhether the address translation is done with port or without\nthe port, or if it is a static translation.\n\nwithPAT(Source Pool with PAT): the security device translates \nboth source IP address and port number of the packets \n\nwithoutPAT (Source Pool without PAT): the device performs source \nnetwork address translation for the IP address without \nperforming port address translation (PAT) for the source port\nnumber.\n\nStatic translation means that one range of IP addresses is \nstatically mapped one to one to a shifted range of IP addresses. ")
jnxJsNatSrcNumOfPortInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcNumOfPortInuse.setDescription("The number of ports in use for this NAT address entry.\n\nThis attribute is only applicable to NAT translation with \nPAT.")
jnxJsNatSrcNumOfSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcNumOfSessions.setDescription("The number of sessions are in use based on this NAT address \nentry.\n\nThis attribute is only applicable to NAT translation without PAT.")
jnxJsNatSrcAssocatedIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 6), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcAssocatedIf.setDescription("The index of interface associated with this NAT address entry. \n\nThis is an unique value, greater than zero, for each \ninterface.")
jnxJsNatIfSrcPoolPortTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3))
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolPortTable.setDescription("This table monitors the port usage of the NAT interface \nsource IP address pool.\n\nInterface source pool is pre-defined.  This source pool is\nreferenced in a policy it is configured.  The security \ndevice translates the source IP address to the address of\nthe egress interface for the traffic matching a policy which \nreferences interface source pool.  The security device always \napplies port address translation (PAT) for interface source\npool. ")
jnxJsNatIfSrcPoolPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1)).setIndexNames((0, "JUNIPER-JS-NAT-MIB", "jnxJsNatIfSrcPoolIndex"))
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolPortEntry.setDescription("Source NAT address entries.  It is indexed by the address  \npool table and the address. ")
jnxJsNatIfSrcPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolIndex.setDescription("The index of the port pool of this address pool.")
jnxJsNatIfSrcPoolTotalSinglePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolTotalSinglePorts.setDescription("The total number of single ports in a port pool.")
jnxJsNatIfSrcPoolAllocSinglePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolAllocSinglePorts.setDescription("The number of single ports in a port pool allocated \nor inuse.")
jnxJsNatIfSrcPoolTotalTwinPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolTotalTwinPorts.setDescription("The total number of twin ports in a port pool.")
jnxJsNatIfSrcPoolAllocTwinPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolAllocTwinPorts.setDescription("The number of twin ports in a port pool allocated \nor inuse.")
jnxJsSrcNatStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4))
if mibBuilder.loadTexts: jnxJsSrcNatStatsTable.setDescription("This table exposes the source NAT translation \nattributes of the translated addresses. \n\nWhen performing source IP address translation, the device \ntranslates the original source IP address and/or port \nnumber to different one.  The resource, address source pools\nprovide the security device with a supply of addresses from \nwhich to draw when performing source network address translation.\n\nThe security device has the following types of source pools:\n	- source pool with PAT (Port Address Translation)\n	- source pool without PAT\n	- Static Source Pool\n\nThis table contains information on source IP address \ntranslation only.")
jnxJsSrcNatStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1)).setIndexNames((0, "JUNIPER-JS-NAT-MIB", "jnxJsNatSrcPoolName"), (0, "JUNIPER-JS-NAT-MIB", "jnxJsNatSrcXlatedAddrType"), (0, "JUNIPER-JS-NAT-MIB", "jnxJsNatSrcXlatedAddr"))
if mibBuilder.loadTexts: jnxJsSrcNatStatsEntry.setDescription("Source NAT address entries.  It is indexed by the address  \npool table and the address allocated. ")
jnxJsNatSrcPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsNatSrcPoolName.setDescription("The name of dynamic source IP address pool. \n\nThis is the address pool where the translated   \naddress is allocated from. ")
jnxJsNatSrcXlatedAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 2), InetAddressType()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxJsNatSrcXlatedAddrType.setDescription("The type of dynamic source IP address allocated from \nthe address pool used in the NAT translation. \nFor NAT MIB, supporting ipv4(1) and ipv6(2) only.")
jnxJsNatSrcXlatedAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 3), InetAddress()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxJsNatSrcXlatedAddr.setDescription("The name of dynamic source IP address allocated from \nthe address pool used in the NAT translation. \nFor NAT MIB, supporting IPv4 and IPv6 address only. ")
jnxJsNatSrcPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 4), Integer().subtype(subtypeSpec=SingleValueConstraint(1,2,3,)).subtype(namedValues=NamedValues(("withPAT", 1), ("withoutPAT", 2), ("static", 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcPoolType.setDescription("Source NAT can do address translation with or without port \naddress translation (PAT).  The source port pool type indicates\nwhether the address translation is done with port or without\nthe port, or if it is a static translation.\n\nwithPAT(Source Pool with PAT): the security device translates \nboth source IP address and port number of the packets \n\nwithoutPAT (Source Pool without PAT): the device performs source \nnetwork address translation for the IP address without \nperforming port address translation (PAT) for the source port\nnumber.\n\nStatic translation means that one range of IP addresses is \nstatically mapped one to one to a shifted range of IP addresses. ")
jnxJsNatSrcNumPortInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcNumPortInuse.setDescription("The number of ports in use for this NAT address entry.\n\nThis attribute is only applicable to NAT translation with \nPAT.")
jnxJsNatSrcNumSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcNumSessions.setDescription("The number of sessions are in use based on this NAT address \nentry.\n\nThis attribute is only applicable to NAT translation without PAT.")
jnxJsNatRuleTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5))
if mibBuilder.loadTexts: jnxJsNatRuleTable.setDescription("This table monitors NAT rule hits  ")
jnxJsNatRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5, 1)).setIndexNames((0, "JUNIPER-JS-NAT-MIB", "jnxJsNatRuleName"), (0, "JUNIPER-JS-NAT-MIB", "jnxJsNatRuleType"))
if mibBuilder.loadTexts: jnxJsNatRuleEntry.setDescription("NAT rule hit entries.  It is indexed by the rule index")
jnxJsNatRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatRuleName.setDescription("NAT rule name")
jnxJsNatRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5, 1, 2), Integer().subtype(subtypeSpec=SingleValueConstraint(1,2,3,)).subtype(namedValues=NamedValues(("source", 1), ("destination", 2), ("static", 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatRuleType.setDescription("NAT types: Source, Destination and Static")
jnxJsNatRuleTransHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatRuleTransHits.setDescription("The number of hits on this NAT rule,\nDeprecated to avoid negative value.")
jnxJsNatRuleHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatRuleHits.setDescription("The number of hits on this NAT rule to \ndeprecate jnxJsNatRuleTransHits")
jnxJsNatPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6))
if mibBuilder.loadTexts: jnxJsNatPoolTable.setDescription("This table monitors NAT pool hits  ")
jnxJsNatPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6, 1)).setIndexNames((0, "JUNIPER-JS-NAT-MIB", "jnxJsNatPoolName"), (0, "JUNIPER-JS-NAT-MIB", "jnxJsNatPoolType"))
if mibBuilder.loadTexts: jnxJsNatPoolEntry.setDescription("NAT pool hit entries.  It is indexed by the pool index")
jnxJsNatPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatPoolName.setDescription("NAT Pool name")
jnxJsNatPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6, 1, 2), Integer().subtype(subtypeSpec=SingleValueConstraint(1,2,3,)).subtype(namedValues=NamedValues(("source", 1), ("destination", 2), ("static", 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatPoolType.setDescription("NAT types: Source, Destination and Static")
jnxJsNatPoolTransHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatPoolTransHits.setDescription("The number of hits on this NAT Pool,\nDeprecated to avoid negative value.")
jnxJsNatPoolHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatPoolHits.setDescription("The number of hits on this NAT Pool\nto deprecate jnxJsNatPoolTransHits.")
jnxJsNatTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 2))
jnxJsNatAddrPoolUtil = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsNatAddrPoolUtil.setDescription("The dynamic address pool utilization in percentage.")
jnxJsNatTrapPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsNatTrapPoolName.setDescription("Source NAT Pool name who issues trap")

# Augmentions

# Notifications

jnxJsNatAddrPoolThresholdStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 0, 1)).setObjects(*(("JUNIPER-JS-NAT-MIB", "jnxJsNatAddrPoolUtil"), ("JUNIPER-JS-NAT-MIB", "jnxJsNatSrcIpPoolName"), ) )
if mibBuilder.loadTexts: jnxJsNatAddrPoolThresholdStatus.setDescription("The NAT address pool untilization threshold status\ntrap signifies that the address pool utilization\nis either exceeds certain percentage, or clear of \nthat percentage.\n				\n		  jnxJsNatSrcIpPoolName is the name of the resource pool\n		  jnxJsNatAddrPoolUtil is the percentage of utilization \nof the address pool.")
jnxJsSrcNatPoolThresholdStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 0, 2)).setObjects(*(("JUNIPER-JS-NAT-MIB", "jnxJsNatAddrPoolUtil"), ("JUNIPER-JS-NAT-MIB", "jnxJsNatTrapPoolName"), ) )
if mibBuilder.loadTexts: jnxJsSrcNatPoolThresholdStatus.setDescription("The Source NAT pool untilization threshold status\ntrap signifies that the address pool or PAT utilization\nis either exceeds certain percentage, or clear of that\npercentage.\n\njnxJsNatTrapPoolName is the name of source pool\njnxJsNatAddrPoolUtil is the percentage of utilization\nof the address pool.")

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-JS-NAT-MIB", PYSNMP_MODULE_ID=jnxJsNatMIB)

# Objects
mibBuilder.exportSymbols("JUNIPER-JS-NAT-MIB", jnxJsNatMIB=jnxJsNatMIB, jnxJsNatNotifications=jnxJsNatNotifications, jnxJsNatObjects=jnxJsNatObjects, jnxJsSrcNatNumOfEntries=jnxJsSrcNatNumOfEntries, jnxJsSrcNatTable=jnxJsSrcNatTable, jnxJsSrcNatEntry=jnxJsSrcNatEntry, jnxJsNatSrcIpPoolName=jnxJsNatSrcIpPoolName, jnxJsNatSrcGlobalAddr=jnxJsNatSrcGlobalAddr, jnxJsNatSrcPortPoolType=jnxJsNatSrcPortPoolType, jnxJsNatSrcNumOfPortInuse=jnxJsNatSrcNumOfPortInuse, jnxJsNatSrcNumOfSessions=jnxJsNatSrcNumOfSessions, jnxJsNatSrcAssocatedIf=jnxJsNatSrcAssocatedIf, jnxJsNatIfSrcPoolPortTable=jnxJsNatIfSrcPoolPortTable, jnxJsNatIfSrcPoolPortEntry=jnxJsNatIfSrcPoolPortEntry, jnxJsNatIfSrcPoolIndex=jnxJsNatIfSrcPoolIndex, jnxJsNatIfSrcPoolTotalSinglePorts=jnxJsNatIfSrcPoolTotalSinglePorts, jnxJsNatIfSrcPoolAllocSinglePorts=jnxJsNatIfSrcPoolAllocSinglePorts, jnxJsNatIfSrcPoolTotalTwinPorts=jnxJsNatIfSrcPoolTotalTwinPorts, jnxJsNatIfSrcPoolAllocTwinPorts=jnxJsNatIfSrcPoolAllocTwinPorts, jnxJsSrcNatStatsTable=jnxJsSrcNatStatsTable, jnxJsSrcNatStatsEntry=jnxJsSrcNatStatsEntry, jnxJsNatSrcPoolName=jnxJsNatSrcPoolName, jnxJsNatSrcXlatedAddrType=jnxJsNatSrcXlatedAddrType, jnxJsNatSrcXlatedAddr=jnxJsNatSrcXlatedAddr, jnxJsNatSrcPoolType=jnxJsNatSrcPoolType, jnxJsNatSrcNumPortInuse=jnxJsNatSrcNumPortInuse, jnxJsNatSrcNumSessions=jnxJsNatSrcNumSessions, jnxJsNatRuleTable=jnxJsNatRuleTable, jnxJsNatRuleEntry=jnxJsNatRuleEntry, jnxJsNatRuleName=jnxJsNatRuleName, jnxJsNatRuleType=jnxJsNatRuleType, jnxJsNatRuleTransHits=jnxJsNatRuleTransHits, jnxJsNatRuleHits=jnxJsNatRuleHits, jnxJsNatPoolTable=jnxJsNatPoolTable, jnxJsNatPoolEntry=jnxJsNatPoolEntry, jnxJsNatPoolName=jnxJsNatPoolName, jnxJsNatPoolType=jnxJsNatPoolType, jnxJsNatPoolTransHits=jnxJsNatPoolTransHits, jnxJsNatPoolHits=jnxJsNatPoolHits, jnxJsNatTrapVars=jnxJsNatTrapVars, jnxJsNatAddrPoolUtil=jnxJsNatAddrPoolUtil, jnxJsNatTrapPoolName=jnxJsNatTrapPoolName)

# Notifications
mibBuilder.exportSymbols("JUNIPER-JS-NAT-MIB", jnxJsNatAddrPoolThresholdStatus=jnxJsNatAddrPoolThresholdStatus, jnxJsSrcNatPoolThresholdStatus=jnxJsSrcNatPoolThresholdStatus)


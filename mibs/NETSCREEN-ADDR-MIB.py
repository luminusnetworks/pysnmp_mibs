# PySNMP SMI module. Autogenerated from smidump -f python NETSCREEN-ADDR-MIB
# by libsmi2pysnmp-0.1.3 at Fri May 30 14:12:55 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( netscreenAddr, ) = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenAddr")
( Bits, Integer32, Integer32, IpAddress, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

netscreenAddrMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 12, 0)).setRevisions(("2004-05-03 20:22","2004-05-03 00:00","2004-03-03 00:00","2003-11-10 00:00","2001-09-28 00:00","2001-05-14 00:00",))
if mibBuilder.loadTexts: netscreenAddrMibModule.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: netscreenAddrMibModule.setContactInfo("Customer Support\n\n1194 North Mathilda Avenue \nSunnyvale, California 94089-1206\nUSA\n\nTel: 1-800-638-8296\nE-mail: customerservice@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: netscreenAddrMibModule.setDescription("This module defines the object that are used to monitor all\nthe entries in the Address Book")
nsAddrTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 12, 1))
if mibBuilder.loadTexts: nsAddrTable.setDescription("The NetScreen ScreenOS classifies the addresses of all other\ndevices by location and netmask. For example trusted addresses\nare located behind the trusted interface. This table collects\nall address items that exist in ScreenOS")
nsAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1)).setIndexNames((0, "NETSCREEN-ADDR-MIB", "nsAddrIndex"))
if mibBuilder.loadTexts: nsAddrEntry.setDescription("Address entry collects some attributes of the address item.")
nsAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrIndex.setDescription("A unique value for each address.  Its value ranges between 0\nand 65535 and may not be contiguous.")
nsAddrName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrName.setDescription("Address item name.")
nsAddrVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrVsys.setDescription("Virtual system name this address belongs to.")
nsAddrZone = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrZone.setDescription("Security zone name this address belongs to.")
nsAddrIpOrDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrIpOrDomain.setDescription("Address item's ip address or domain name.")
nsAddrNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrNetmask.setDescription("Subnet mask address use.")
nsAddrComment = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 12, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsAddrComment.setDescription("Comments on this address.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("NETSCREEN-ADDR-MIB", PYSNMP_MODULE_ID=netscreenAddrMibModule)

# Objects
mibBuilder.exportSymbols("NETSCREEN-ADDR-MIB", netscreenAddrMibModule=netscreenAddrMibModule, nsAddrTable=nsAddrTable, nsAddrEntry=nsAddrEntry, nsAddrIndex=nsAddrIndex, nsAddrName=nsAddrName, nsAddrVsys=nsAddrVsys, nsAddrZone=nsAddrZone, nsAddrIpOrDomain=nsAddrIpOrDomain, nsAddrNetmask=nsAddrNetmask, nsAddrComment=nsAddrComment)


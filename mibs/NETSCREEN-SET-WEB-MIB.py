# PySNMP SMI module. Autogenerated from smidump -f python NETSCREEN-SET-WEB-MIB
# by libsmi2pysnmp-0.1.3 at Fri May 30 14:12:57 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( netscreenSetting, netscreenSettingMibModule, ) = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenSetting", "netscreenSettingMibModule")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

netscreenSetWebMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 7, 0, 12)).setRevisions(("2004-05-03 20:22","2004-05-03 00:00","2004-03-03 00:00","2003-11-12 00:00","2001-09-28 00:00","2001-05-27 00:00",))
if mibBuilder.loadTexts: netscreenSetWebMibModule.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: netscreenSetWebMibModule.setContactInfo("Customer Support\n\n1194 North Mathilda Avenue \nSunnyvale, California 94089-1206\nUSA\n\nTel: 1-800-638-8296\nE-mail: customerservice@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: netscreenSetWebMibModule.setDescription("This module defines the object that are used to monitor \nNS web setting")
nsSetWebUI = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 7, 12))
nsSetWebUICfgTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 7, 12, 1))
if mibBuilder.loadTexts: nsSetWebUICfgTable.setDescription("NetScreen devices provide WebUI for easy administration. This\ntable collects admin settings relating to WebUI.")
nsSetWebUICfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 7, 12, 1, 1)).setIndexNames((0, "NETSCREEN-SET-WEB-MIB", "nsSetWebVsys"))
if mibBuilder.loadTexts: nsSetWebUICfgEntry.setDescription("An entry containing WebUI admin configuration.")
nsSetWebVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetWebVsys.setDescription("Virtual system name the configuration belongs to. Also used as\ntable index.")
nsSetWebIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 12, 1, 1, 2), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("disable", 0), ("enabled", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetWebIdleTimeout.setDescription("Enable Web Management Idle Timeout")
nsSetWebTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 12, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetWebTimeout.setDescription("Web Management Idle Timeout Setting")
nsSetWebPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 12, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetWebPort.setDescription("Web Management Http port number setting.")
nsSetWebSSLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 12, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetWebSSLPort.setDescription("Web Management http ssl port number setting.")
nsSetWebSSLCertificate = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 12, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetWebSSLCertificate.setDescription("SSL certificate web management.")
nsSetWebSSLCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 7, 12, 1, 1, 7), Integer().subtype(subtypeSpec=SingleValueConstraint(1,2,0,3,)).subtype(namedValues=NamedValues(("rc4-md5", 0), ("rc4-40-md5", 1), ("des-sha", 2), ("triple-des-sha", 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsSetWebSSLCipher.setDescription("Web Management via SSL cipher algorithm")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("NETSCREEN-SET-WEB-MIB", PYSNMP_MODULE_ID=netscreenSetWebMibModule)

# Objects
mibBuilder.exportSymbols("NETSCREEN-SET-WEB-MIB", netscreenSetWebMibModule=netscreenSetWebMibModule, nsSetWebUI=nsSetWebUI, nsSetWebUICfgTable=nsSetWebUICfgTable, nsSetWebUICfgEntry=nsSetWebUICfgEntry, nsSetWebVsys=nsSetWebVsys, nsSetWebIdleTimeout=nsSetWebIdleTimeout, nsSetWebTimeout=nsSetWebTimeout, nsSetWebPort=nsSetWebPort, nsSetWebSSLPort=nsSetWebSSLPort, nsSetWebSSLCertificate=nsSetWebSSLCertificate, nsSetWebSSLCipher=nsSetWebSSLCipher)


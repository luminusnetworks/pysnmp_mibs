# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-LSYSSPAUTHENTRY-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:52 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( jnxLsysSpAuthentry, ) = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpAuthentry")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

jnxLsysSpAuthentryMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1)).setRevisions(("2010-05-19 16:44",))
if mibBuilder.loadTexts: jnxLsysSpAuthentryMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxLsysSpAuthentryMIB.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\n\nE-mail: support@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: jnxLsysSpAuthentryMIB.setDescription("This module defines the auth-entry-specific MIB for Juniper Enterprise \nLogical-System (LSYS) security profiles.  Juniper documentation \nis recommended as the reference. \n\nThe LSYS security profile provides various static and dynamic \nresource management by observing resource quota limits. \nSecurity auth-entry resource is the focus in this MIB. ")
jnxLsysSpAuthentryObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1))
jnxLsysSpAuthentryTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1))
if mibBuilder.loadTexts: jnxLsysSpAuthentryTable.setDescription("LSYSPROFILE auth-entry objects for auth-entry resource consumption per LSYS.")
jnxLsysSpAuthentryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1)).setIndexNames((1, "JUNIPER-LSYSSPAUTHENTRY-MIB", "jnxLsysSpAuthentryLsysName"))
if mibBuilder.loadTexts: jnxLsysSpAuthentryEntry.setDescription("An entry in auth-entry resource table.")
jnxLsysSpAuthentryLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxLsysSpAuthentryLsysName.setDescription("The name of the logical system for which auth-entry resource information is retrieved. ")
jnxLsysSpAuthentryProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryProfileName.setDescription("The security profile name string for the LSYS.")
jnxLsysSpAuthentryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryUsage.setDescription("The current resource usage count for the LSYS.")
jnxLsysSpAuthentryReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryReserved.setDescription("The reserved resource count for the LSYS.")
jnxLsysSpAuthentryMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryMaximum.setDescription("The maximum allowed resource usage count for the LSYS.")
jnxLsysSpAuthentrySummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2))
jnxLsysSpAuthentryUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryUsedAmount.setDescription("The auth-entry resource consumption over all LSYS.")
jnxLsysSpAuthentryMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryMaxQuota.setDescription("The auth-entry resource maximum quota for the whole device for all LSYS.")
jnxLsysSpAuthentryAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryAvailableAmount.setDescription("The auth-entry resource available in the whole device.")
jnxLsysSpAuthentryHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryHeaviestUsage.setDescription("The most amount of auth-entry resource consumed of a LSYS.")
jnxLsysSpAuthentryHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryHeaviestUser.setDescription("The LSYS name that consume the most auth-entry resource.")
jnxLsysSpAuthentryLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryLightestUsage.setDescription("The least amount of auth-entry resource consumed of a LSYS.")
jnxLsysSpAuthentryLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryLightestUser.setDescription("The LSYS name that consume the least auth-entry resource.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-LSYSSPAUTHENTRY-MIB", PYSNMP_MODULE_ID=jnxLsysSpAuthentryMIB)

# Objects
mibBuilder.exportSymbols("JUNIPER-LSYSSPAUTHENTRY-MIB", jnxLsysSpAuthentryMIB=jnxLsysSpAuthentryMIB, jnxLsysSpAuthentryObjects=jnxLsysSpAuthentryObjects, jnxLsysSpAuthentryTable=jnxLsysSpAuthentryTable, jnxLsysSpAuthentryEntry=jnxLsysSpAuthentryEntry, jnxLsysSpAuthentryLsysName=jnxLsysSpAuthentryLsysName, jnxLsysSpAuthentryProfileName=jnxLsysSpAuthentryProfileName, jnxLsysSpAuthentryUsage=jnxLsysSpAuthentryUsage, jnxLsysSpAuthentryReserved=jnxLsysSpAuthentryReserved, jnxLsysSpAuthentryMaximum=jnxLsysSpAuthentryMaximum, jnxLsysSpAuthentrySummary=jnxLsysSpAuthentrySummary, jnxLsysSpAuthentryUsedAmount=jnxLsysSpAuthentryUsedAmount, jnxLsysSpAuthentryMaxQuota=jnxLsysSpAuthentryMaxQuota, jnxLsysSpAuthentryAvailableAmount=jnxLsysSpAuthentryAvailableAmount, jnxLsysSpAuthentryHeaviestUsage=jnxLsysSpAuthentryHeaviestUsage, jnxLsysSpAuthentryHeaviestUser=jnxLsysSpAuthentryHeaviestUser, jnxLsysSpAuthentryLightestUsage=jnxLsysSpAuthentryLightestUsage, jnxLsysSpAuthentryLightestUser=jnxLsysSpAuthentryLightestUser)


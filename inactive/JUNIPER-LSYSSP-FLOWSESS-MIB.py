# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-LSYSSP-FLOWSESS-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:52 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( jnxLsysSpFlowsess, ) = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpFlowsess")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

jnxLsysSpFlowsessMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1)).setRevisions(("2010-05-19 16:44",))
if mibBuilder.loadTexts: jnxLsysSpFlowsessMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxLsysSpFlowsessMIB.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\n\nE-mail: support@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: jnxLsysSpFlowsessMIB.setDescription("This module defines the flow-session-specific MIB for Juniper Enterprise \nLogical-System (LSYS) security profiles.  Juniper documentation \nis recommended as the reference. \n\nThe LSYS security profile provides various static and dynamic \nresource management by observing resource quota limits. \nSecurity flow-session resource is the focus in this MIB. ")
jnxLsysSpFlowsessObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1))
jnxLsysSpFlowsessTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1))
if mibBuilder.loadTexts: jnxLsysSpFlowsessTable.setDescription("LSYSPROFILE flow-session objects for flow-session resource consumption per LSYS.")
jnxLsysSpFlowsessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1)).setIndexNames((1, "JUNIPER-LSYSSP-FLOWSESS-MIB", "jnxLsysSpFlowsessLsysName"))
if mibBuilder.loadTexts: jnxLsysSpFlowsessEntry.setDescription("An entry in flow-session resource table.")
jnxLsysSpFlowsessLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxLsysSpFlowsessLsysName.setDescription("The name of the logical system for which flow-session resource information is retrieved. ")
jnxLsysSpFlowsessProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessProfileName.setDescription("The security profile name string for the LSYS.")
jnxLsysSpFlowsessUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessUsage.setDescription("The current resource usage count for the LSYS.")
jnxLsysSpFlowsessReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessReserved.setDescription("The reserved resource count for the LSYS.")
jnxLsysSpFlowsessMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessMaximum.setDescription("The maximum allowed resource usage count for the LSYS.")
jnxLsysSpFlowsessSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2))
jnxLsysSpFlowsessUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessUsedAmount.setDescription("The flow-session resource consumption over all LSYS.")
jnxLsysSpFlowsessMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessMaxQuota.setDescription("The flow-session resource maximum quota for the whole device for all LSYS.")
jnxLsysSpFlowsessAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessAvailableAmount.setDescription("The flow-session resource available in the whole device.")
jnxLsysSpFlowsessHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessHeaviestUsage.setDescription("The most amount of flow-session resource consumed of a LSYS.")
jnxLsysSpFlowsessHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessHeaviestUser.setDescription("The LSYS name that consume the most flow-session resource.")
jnxLsysSpFlowsessLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessLightestUsage.setDescription("The least amount of flow-session resource consumed of a LSYS.")
jnxLsysSpFlowsessLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessLightestUser.setDescription("The LSYS name that consume the least flow-session resource.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-LSYSSP-FLOWSESS-MIB", PYSNMP_MODULE_ID=jnxLsysSpFlowsessMIB)

# Objects
mibBuilder.exportSymbols("JUNIPER-LSYSSP-FLOWSESS-MIB", jnxLsysSpFlowsessMIB=jnxLsysSpFlowsessMIB, jnxLsysSpFlowsessObjects=jnxLsysSpFlowsessObjects, jnxLsysSpFlowsessTable=jnxLsysSpFlowsessTable, jnxLsysSpFlowsessEntry=jnxLsysSpFlowsessEntry, jnxLsysSpFlowsessLsysName=jnxLsysSpFlowsessLsysName, jnxLsysSpFlowsessProfileName=jnxLsysSpFlowsessProfileName, jnxLsysSpFlowsessUsage=jnxLsysSpFlowsessUsage, jnxLsysSpFlowsessReserved=jnxLsysSpFlowsessReserved, jnxLsysSpFlowsessMaximum=jnxLsysSpFlowsessMaximum, jnxLsysSpFlowsessSummary=jnxLsysSpFlowsessSummary, jnxLsysSpFlowsessUsedAmount=jnxLsysSpFlowsessUsedAmount, jnxLsysSpFlowsessMaxQuota=jnxLsysSpFlowsessMaxQuota, jnxLsysSpFlowsessAvailableAmount=jnxLsysSpFlowsessAvailableAmount, jnxLsysSpFlowsessHeaviestUsage=jnxLsysSpFlowsessHeaviestUsage, jnxLsysSpFlowsessHeaviestUser=jnxLsysSpFlowsessHeaviestUser, jnxLsysSpFlowsessLightestUsage=jnxLsysSpFlowsessLightestUsage, jnxLsysSpFlowsessLightestUser=jnxLsysSpFlowsessLightestUser)


# PySNMP SMI module. Autogenerated from smidump -f python TUBS-IBR-PING-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:58:17 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, IpAddress) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "IpAddress")
( ibr, ) = mibBuilder.importSymbols("TUBS-SMI", "ibr")

# Objects

pingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1575, 1, 8)).setRevisions(("2000-07-07 00:00","2000-03-30 00:00",))
if mibBuilder.loadTexts: pingMIB.setOrganization("TU Braunschweig")
if mibBuilder.loadTexts: pingMIB.setContactInfo("Frank Strauss\nTU Braunschweig\nBueltenweg 74/75\n38106 Braunschweig\nGermany\n\nTel: +49 531 391 3266\nFax: +49 531 391 5936\nE-mail: strauss@ibr.cs.tu-bs.de")
if mibBuilder.loadTexts: pingMIB.setDescription("Experimental MIB module for JAX code generator tests.")
pingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1575, 1, 8, 0))
pingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1575, 1, 8, 1))
pingTable = MibTable((1, 3, 6, 1, 4, 1, 1575, 1, 8, 1, 1))
if mibBuilder.loadTexts: pingTable.setDescription("A list of ping destinations and their round trip times.")
pingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1575, 1, 8, 1, 1, 1)).setIndexNames((0, "TUBS-IBR-PING-MIB", "pingIndex"))
if mibBuilder.loadTexts: pingEntry.setDescription("An entry containing a ping destinations and its\nround trip time.")
pingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1575, 1, 8, 1, 1, 1, 1), Unsigned32()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: pingIndex.setDescription("A unique value identifying the ping entry.")
pingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1575, 1, 8, 1, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pingAddress.setDescription("The destination IP address for the ping entry.\nWriting to an instance of this object with an\nunused pingIndex creates a new pingTable entry.")
pingRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 1575, 1, 8, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pingRtt.setDescription("The measured round trip time for the ping entry.\nThe value zero denotes a ping target that did\nnot respond (yet).")
pingStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 1575, 1, 8, 1, 2))
pingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1575, 1, 8, 1, 2, 1), Unsigned32()).setMaxAccess("readwrite").setUnits("milliseconds")
if mibBuilder.loadTexts: pingTimeout.setDescription("Maximum time to wait for a response.")
pingAvgRtt = MibScalar((1, 3, 6, 1, 4, 1, 1575, 1, 8, 1, 2, 2), Unsigned32()).setMaxAccess("readonly").setUnits("milliseconds")
if mibBuilder.loadTexts: pingAvgRtt.setDescription("The average round trip time for all ping entries.")

# Augmentions

# Notifications

pingNoResponse = NotificationType((1, 3, 6, 1, 4, 1, 1575, 1, 8, 0, 1)).setObjects(*(("TUBS-IBR-PING-MIB", "pingTimeout"), ("TUBS-IBR-PING-MIB", "pingRtt"), ) )
if mibBuilder.loadTexts: pingNoResponse.setDescription("This notification is generated whenever a ping\ntarget did not reply within the current timeout.\nThe pingAddress objects contains the target address\nand the pingTimeout objects contains the timeout\nvalue in milli seconds.")

# Exports

# Module identity
mibBuilder.exportSymbols("TUBS-IBR-PING-MIB", PYSNMP_MODULE_ID=pingMIB)

# Objects
mibBuilder.exportSymbols("TUBS-IBR-PING-MIB", pingMIB=pingMIB, pingNotifications=pingNotifications, pingObjects=pingObjects, pingTable=pingTable, pingEntry=pingEntry, pingIndex=pingIndex, pingAddress=pingAddress, pingRtt=pingRtt, pingStatistics=pingStatistics, pingTimeout=pingTimeout, pingAvgRtt=pingAvgRtt)

# Notifications
mibBuilder.exportSymbols("TUBS-IBR-PING-MIB", pingNoResponse=pingNoResponse)


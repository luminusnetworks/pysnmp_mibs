# PySNMP SMI module. Autogenerated from smidump -f python ARISTA-PFC-MIB
# by libsmi2pysnmp-0.1.3 at Wed May 28 11:46:43 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( aristaMibs, ) = mibBuilder.importSymbols("ARISTA-SMI-MIB", "aristaMibs")
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( InterfaceIndex, ) = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter64, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention")

# Types

class AristaPfcCOSIndex(TextualConvention, Integer32):
    displayHint = "d"
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(0,7)
    

# Objects

aristaPfcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 30065, 3, 11)).setRevisions(("2013-02-28 00:00",))
if mibBuilder.loadTexts: aristaPfcMIB.setOrganization("Arista Networks, Inc.")
if mibBuilder.loadTexts: aristaPfcMIB.setContactInfo("Arista Networks, Inc.\n\nPostal: 5470 Great America Parkway\n        Santa Clara, CA 95054\n\nTel: +1 408 547-5500\n\nE-mail: snmp@aristanetworks.com")
if mibBuilder.loadTexts: aristaPfcMIB.setDescription("Extensions for managing IEEE 802.1Qbb Priority-based Flow Control on\nArista devices.  This module extends IEEE8021-PFC-MIB by providing \nper class-of-service information for the supported Arista platforms.")
aristaPfc = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 11, 1))
aristaPfcPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 30065, 3, 11, 1, 1))
if mibBuilder.loadTexts: aristaPfcPriorityTable.setDescription("This table contains the per class-of-service priority-flow-control\ninformation of an interface.")
aristaPfcPriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30065, 3, 11, 1, 1, 1)).setIndexNames((0, "ARISTA-PFC-MIB", "aristaPfcIfIndex"), (0, "ARISTA-PFC-MIB", "aristaPfcPriorityIndex"))
if mibBuilder.loadTexts: aristaPfcPriorityEntry.setDescription("A list of attributes of each ingress class-of-service of an interface.")
aristaPfcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 11, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: aristaPfcIfIndex.setDescription("The interface identified by a particular value of\nthis index is the same interface as identified\nby the same value of ifIndex.")
aristaPfcPriorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 11, 1, 1, 1, 2), AristaPfcCOSIndex()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: aristaPfcPriorityIndex.setDescription("The Ethernet class-of-service index for accessing \nthe per-priority information of an interface.")
aristaPfcPriorityRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 11, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaPfcPriorityRequests.setDescription("A count of the invoked PFC M_CONTROL.request primitives with\nthis priority class asserted.\n\nDiscontinuities in the value of this counter can occur at\nre-initialization of the management system, and at other\ntimes as indicated by the value of\nifCounterDiscontinuityTime.")
aristaPfcPriorityIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 11, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaPfcPriorityIndications.setDescription("A count of the received PFC M_CONTROL.indication primitives\nwith this priority class asserted.\n\nDiscontinuities in the value of this counter can occur at\nre-initialization of the management system, and at other\ntimes as indicated by the value of\nifCounterDiscontinuityTime.")
aristaPfcConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 11, 2))
aristaPfcCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 11, 2, 1))
aristaPfcGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 11, 2, 2))

# Augmentions

# Groups

aristaPfcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 30065, 3, 11, 2, 2, 1)).setObjects(*(("ARISTA-PFC-MIB", "aristaPfcPriorityIndications"), ("ARISTA-PFC-MIB", "aristaPfcPriorityRequests"), ) )
if mibBuilder.loadTexts: aristaPfcGroup.setDescription("The group of required PFC objects.")

# Compliances

aristaPfcCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 30065, 3, 11, 2, 1, 1)).setObjects(*(("ARISTA-PFC-MIB", "aristaPfcGroup"), ) )
if mibBuilder.loadTexts: aristaPfcCompliance.setDescription("The compliance statement for Arista switches that support\nPriority Flow Control (PFC).")

# Exports

# Module identity
mibBuilder.exportSymbols("ARISTA-PFC-MIB", PYSNMP_MODULE_ID=aristaPfcMIB)

# Types
mibBuilder.exportSymbols("ARISTA-PFC-MIB", AristaPfcCOSIndex=AristaPfcCOSIndex)

# Objects
mibBuilder.exportSymbols("ARISTA-PFC-MIB", aristaPfcMIB=aristaPfcMIB, aristaPfc=aristaPfc, aristaPfcPriorityTable=aristaPfcPriorityTable, aristaPfcPriorityEntry=aristaPfcPriorityEntry, aristaPfcIfIndex=aristaPfcIfIndex, aristaPfcPriorityIndex=aristaPfcPriorityIndex, aristaPfcPriorityRequests=aristaPfcPriorityRequests, aristaPfcPriorityIndications=aristaPfcPriorityIndications, aristaPfcConformance=aristaPfcConformance, aristaPfcCompliances=aristaPfcCompliances, aristaPfcGroups=aristaPfcGroups)

# Groups
mibBuilder.exportSymbols("ARISTA-PFC-MIB", aristaPfcGroup=aristaPfcGroup)

# Compliances
mibBuilder.exportSymbols("ARISTA-PFC-MIB", aristaPfcCompliance=aristaPfcCompliance)

# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-CHASSIS-CLUSTER-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:51 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( jnxJsChassisCluster, ) = mibBuilder.importSymbols("JUNIPER-JS-SMI", "jnxJsChassisCluster")
( Bits, Counter32, Counter64, Integer32, Integer32, IpAddress, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Counter64", "Integer32", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( DisplayString, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")

# Objects

jnxJsChassisClusterMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1)).setRevisions(("2011-06-28 00:00","2009-05-27 00:00","2009-02-03 00:00",))
if mibBuilder.loadTexts: jnxJsChassisClusterMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxJsChassisClusterMIB.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\n\nE-mail: support@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: jnxJsChassisClusterMIB.setDescription("Chassis Clustering is concerned with ensuring minimal disruption to \ndata and control planes in case of a failover. If one of the chassis in \na cluster fails, the other chassis in the cluster takes over the function \nof the failed chassis with minimal service interruption.\nThis module defines the objects pertaining to Chassis Cluster.")
jnxJsChassisClusterNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 0))
jnxJsChassisClusterTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 1))
jnxJsChClusterSwitchoverInfoRedundancyGroup = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 1, 1), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsChClusterSwitchoverInfoRedundancyGroup.setDescription("This object contains identification of redundancy group\nthat switched over.")
jnxJsChClusterSwitchoverInfoClusterId = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 1, 2), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsChClusterSwitchoverInfoClusterId.setDescription("This object contains cluster identification information\nwhere the switchover occured.")
jnxJsChClusterSwitchoverInfoNodeId = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 1, 3), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsChClusterSwitchoverInfoNodeId.setDescription("This object contains node identification information\nwhere the switchover occured.")
jnxJsChClusterSwitchoverInfoPreviousState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 1, 4), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsChClusterSwitchoverInfoPreviousState.setDescription("This object contains the redundancy state of the cluster \nbefore the occurance of switchover.")
jnxJsChClusterSwitchoverInfoCurrentState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 1, 5), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsChClusterSwitchoverInfoCurrentState.setDescription("This object contains the redundancy state of the cluster \nafter the occurance of switchover.")
jnxJsChClusterSwitchoverInfoReason = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 1, 6), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsChClusterSwitchoverInfoReason.setDescription("This object contains the cause for switchover.")
jnxJsChClusterIntfName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 1, 7), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsChClusterIntfName.setDescription("This object contains the name of the link \nthat changed its state.")
jnxJsChClusterIntfState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 1, 8), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsChClusterIntfState.setDescription("This object contains the state of the link; \nwhether it is UP or DOWN.")
jnxJsChClusterIntfSeverity = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 1, 9), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsChClusterIntfSeverity.setDescription("This object reflects the severity; \nwhether it is minor or major.")
jnxJsChClusterIntfStateReason = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 1, 10), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsChClusterIntfStateReason.setDescription("This object contains the reason why the link state \nchanged.")

# Augmentions

# Notifications

jnxJsChassisClusterSwitchover = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 0, 1)).setObjects(*(("JUNIPER-CHASSIS-CLUSTER-MIB", "jnxJsChClusterSwitchoverInfoClusterId"), ("JUNIPER-CHASSIS-CLUSTER-MIB", "jnxJsChClusterSwitchoverInfoNodeId"), ("JUNIPER-CHASSIS-CLUSTER-MIB", "jnxJsChClusterSwitchoverInfoReason"), ("JUNIPER-CHASSIS-CLUSTER-MIB", "jnxJsChClusterSwitchoverInfoCurrentState"), ("JUNIPER-CHASSIS-CLUSTER-MIB", "jnxJsChClusterSwitchoverInfoPreviousState"), ("JUNIPER-CHASSIS-CLUSTER-MIB", "jnxJsChClusterSwitchoverInfoRedundancyGroup"), ) )
if mibBuilder.loadTexts: jnxJsChassisClusterSwitchover.setDescription("Notification to signal switchover/failover.")
jnxJsChClusterIntfTrap = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 14, 1, 0, 2)).setObjects(*(("JUNIPER-CHASSIS-CLUSTER-MIB", "jnxJsChClusterSwitchoverInfoClusterId"), ("JUNIPER-CHASSIS-CLUSTER-MIB", "jnxJsChClusterIntfState"), ("JUNIPER-CHASSIS-CLUSTER-MIB", "jnxJsChClusterIntfSeverity"), ("JUNIPER-CHASSIS-CLUSTER-MIB", "jnxJsChClusterIntfName"), ("JUNIPER-CHASSIS-CLUSTER-MIB", "jnxJsChClusterIntfStateReason"), ) )
if mibBuilder.loadTexts: jnxJsChClusterIntfTrap.setDescription("Notification to signal change in HA interface state.")

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-CHASSIS-CLUSTER-MIB", PYSNMP_MODULE_ID=jnxJsChassisClusterMIB)

# Objects
mibBuilder.exportSymbols("JUNIPER-CHASSIS-CLUSTER-MIB", jnxJsChassisClusterMIB=jnxJsChassisClusterMIB, jnxJsChassisClusterNotifications=jnxJsChassisClusterNotifications, jnxJsChassisClusterTrapObjects=jnxJsChassisClusterTrapObjects, jnxJsChClusterSwitchoverInfoRedundancyGroup=jnxJsChClusterSwitchoverInfoRedundancyGroup, jnxJsChClusterSwitchoverInfoClusterId=jnxJsChClusterSwitchoverInfoClusterId, jnxJsChClusterSwitchoverInfoNodeId=jnxJsChClusterSwitchoverInfoNodeId, jnxJsChClusterSwitchoverInfoPreviousState=jnxJsChClusterSwitchoverInfoPreviousState, jnxJsChClusterSwitchoverInfoCurrentState=jnxJsChClusterSwitchoverInfoCurrentState, jnxJsChClusterSwitchoverInfoReason=jnxJsChClusterSwitchoverInfoReason, jnxJsChClusterIntfName=jnxJsChClusterIntfName, jnxJsChClusterIntfState=jnxJsChClusterIntfState, jnxJsChClusterIntfSeverity=jnxJsChClusterIntfSeverity, jnxJsChClusterIntfStateReason=jnxJsChClusterIntfStateReason)

# Notifications
mibBuilder.exportSymbols("JUNIPER-CHASSIS-CLUSTER-MIB", jnxJsChassisClusterSwitchover=jnxJsChassisClusterSwitchover, jnxJsChClusterIntfTrap=jnxJsChClusterIntfTrap)


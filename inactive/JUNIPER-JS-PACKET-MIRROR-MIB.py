# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-JS-PACKET-MIRROR-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:51 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( Ipv6AddressPrefix, ) = mibBuilder.importSymbols("IPV6-TC", "Ipv6AddressPrefix")
( jnxJsPacketMirror, ) = mibBuilder.importSymbols("JUNIPER-JS-SMI", "jnxJsPacketMirror")
( Bits, Counter64, Integer32, IpAddress, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( DateAndTime, DisplayString, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention")

# Objects

jnxJsPacketMirrorMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1)).setRevisions(("2011-11-23 00:00","2011-06-07 00:00","2011-03-23 00:00","2011-03-16 00:00","2010-12-16 00:00","2010-02-25 00:00","2009-10-29 00:00",))
if mibBuilder.loadTexts: jnxJsPacketMirrorMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxJsPacketMirrorMIB.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\n\nE-mail: support@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: jnxJsPacketMirrorMIB.setDescription("The packet mirror MIB for the Juniper Networks enterprise.")
jnxJsPacketMirrorNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 0))
jnxJsPacketMirrorObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1))
jnxJsPacketMirrorTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1))
jnxJsPacketMirrorIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 1), Unsigned32()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorIdentifier.setDescription("The mirror identifier.")
jnxJsPacketMirrorSessionIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 2), Unsigned32()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorSessionIdentifier.setDescription("The session identifier.")
jnxJsPacketMirrorTrigger = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 3), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorTrigger.setDescription("The trigger that caused mirroring.")
jnxJsPacketMirrorTriggerType = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 4), Integer().subtype(subtypeSpec=SingleValueConstraint(3,5,4,2,8,6,1,0,7,)).subtype(namedValues=NamedValues(("interfaceString", 0), ("ipAddress", 1), ("nasPortId", 2), ("username", 3), ("callingStationId", 4), ("acctSessionId", 5), ("option82", 6), ("remoteId", 7), ("circuitId", 8), ))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorTriggerType.setDescription("The trigger type.")
jnxJsPacketMirrorConfigurationSource = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 5), Integer().subtype(subtypeSpec=SingleValueConstraint(3,0,2,4,1,)).subtype(namedValues=NamedValues(("radiusLogin", 0), ("radiusCoa", 1), ("cliTrigger", 2), ("cliStatic", 3), ("dtcp", 4), ))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorConfigurationSource.setDescription("The configuration source of this mirroring.")
jnxJsPacketMirrorErrorCause = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 6), Integer().subtype(subtypeSpec=SingleValueConstraint(9,0,8,7,5,10,3,1,2,4,6,)).subtype(namedValues=NamedValues(("genericFailure", 0), ("noResourcesAvailable", 1), ("dfcdNak", 10), ("memoryExhausted", 2), ("noSuchName", 3), ("invalidAnalyzerAddress", 4), ("noSuchUserOrInterface", 5), ("featureNotSupported", 6), ("missingOrInvalidAttribute", 7), ("routerMismatch", 8), ("nameLengthExceeded", 9), ))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorErrorCause.setDescription("The error cause.")
jnxJsPacketMirrorErrorString = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 7), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorErrorString.setDescription("The error string as reported by the JUNOS application.")
jnxJsPacketMirrorApplicationName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 8), Integer().subtype(subtypeSpec=SingleValueConstraint(0,)).subtype(namedValues=NamedValues(("authd", 0), ))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorApplicationName.setDescription("The name of the JUNOS application reporting the trap.")
jnxJsPacketMirrorAnalyzerAddress = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 9), IpAddress()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorAnalyzerAddress.setDescription("The IP address of analyzer.")
jnxJsPacketMirrorUserName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorUserName.setDescription("The login name of the user who's traffic is being mirrored.")
jnxJsPacketMirrorDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 11), DateAndTime()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorDateAndTime.setDescription("The time of event.")
jnxJsPacketMirrorRouterId = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 257))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorRouterId.setDescription("The VRF ID in JUNOS. Represented as the Logical Router (LR)\nName followed by the Router Instance (RI) Name.")
jnxJsPacketMirrorDirection = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 13), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,2,)).subtype(namedValues=NamedValues(("ingress", 0), ("egress", 1), ("bidirection", 2), ))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorDirection.setDescription("The mirroring direction.")
jnxJsPacketMirrorTargetIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 14), IpAddress()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorTargetIpAddress.setDescription("IP address of the mirrored interface.")
jnxJsPacketMirrorTerminationReason = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 15), Integer().subtype(subtypeSpec=SingleValueConstraint(17,19,6,0,21,1,23,13,18,5,22,10,3,11,8,24,12,14,2,4,15,16,7,9,20,)).subtype(namedValues=NamedValues(("genericFailure", 0), ("userRequest", 1), ("nasRequest0", 10), ("nasReboot1", 11), ("portUnneeded", 12), ("portPreempted", 13), ("portSuspended", 14), ("serviceUnavailable", 15), ("callback", 16), ("userError", 17), ("hostRequest", 18), ("supplicantRestart", 19), ("lostCarrier", 2), ("reauthenticationFailure", 20), ("portReinitialized", 21), ("portAdministrativelyDisabled", 22), ("authenticationReject", 23), ("interfaceDeleted", 24), ("lostService", 3), ("idleTimeout", 4), ("sessionTimeout", 5), ("adminReset", 6), ("adminReboot", 7), ("portError", 8), ("nasError", 9), ))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorTerminationReason.setDescription("The reason for ending a mirroring session which the analyzer may\ninterpret as an access or packet session event.")
jnxPacketMirrorCallingStationIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxPacketMirrorCallingStationIdentifier.setDescription("The calling station id of the subscriber who's traffic is being monitored.")
jnxPacketMirrorNasIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxPacketMirrorNasIdentifier.setDescription("The Nas identification where the traffic is being monitored.")
jnxJsPacketMirrorOctetsReceived = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 18), Counter64()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorOctetsReceived.setDescription("The subscriber octet count received.")
jnxJsPacketMirrorOctetsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 19), Counter64()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorOctetsTransmitted.setDescription("The subscriber octet count transmitted.")
jnxJsPacketMirrorTargetIpv6Address = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 20), Ipv6AddressPrefix()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorTargetIpv6Address.setDescription("IPv6 address of the mirrored interface.")
jnxJsPacketMirrorTrgtIpv6PfxLen = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 1, 1, 21), Unsigned32()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxJsPacketMirrorTrgtIpv6PfxLen.setDescription("IPv6 prefix length of the mirrored interface.")

# Augmentions

# Notifications

jnxJsPacketMirrorMirroringFailure = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 0, 1)).setObjects(*(("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTriggerType"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorApplicationName"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorSessionIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorConfigurationSource"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorRouterId"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrigger"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorErrorString"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorErrorCause"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDateAndTime"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorUserName"), ) )
if mibBuilder.loadTexts: jnxJsPacketMirrorMirroringFailure.setDescription("The jnxJsPacketMirrorMirroringFailure Trap indicates that \nthe packet mirroring operation failed.")
jnxJsPacketMirrorLiSubscriberLoggedIn = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 0, 2)).setObjects(*(("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxPacketMirrorNasIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpv6Address"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorSessionIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorConfigurationSource"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorRouterId"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxPacketMirrorCallingStationIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrigger"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorAnalyzerAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTriggerType"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDirection"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrgtIpv6PfxLen"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDateAndTime"), ) )
if mibBuilder.loadTexts: jnxJsPacketMirrorLiSubscriberLoggedIn.setDescription("The jnxJsPacketMirrorLiSubscriberLoggedIn Trap indicates that \nthe target has logged in.")
jnxJsPacketMirrorLiSubscriberLogInFailed = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 0, 3)).setObjects(*(("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpv6Address"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorSessionIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorConfigurationSource"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorRouterId"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxPacketMirrorCallingStationIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrigger"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorAnalyzerAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorErrorString"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorErrorCause"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTriggerType"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDirection"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrgtIpv6PfxLen"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDateAndTime"), ) )
if mibBuilder.loadTexts: jnxJsPacketMirrorLiSubscriberLogInFailed.setDescription("The jnxJsPacketMirrorLiSubscriberLogInFailed Trap indicates that \na request for the subscriber log in request failed due to the\nreason in jnxJsPacketMirrorTerminationReason.")
jnxJsPacketMirrorLiSubscriberLoggedOut = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 0, 4)).setObjects(*(("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpv6Address"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorSessionIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorOctetsReceived"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorConfigurationSource"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorRouterId"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrigger"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorAnalyzerAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrgtIpv6PfxLen"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTriggerType"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDirection"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTerminationReason"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorOctetsTransmitted"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDateAndTime"), ) )
if mibBuilder.loadTexts: jnxJsPacketMirrorLiSubscriberLoggedOut.setDescription("The jnxJsPacketMirrorLiSubscriberLoggedOut Trap indicates that \nthe target has logged out with one of the reasons in \njnxJsPacketMirrorTerminationReason.")
jnxJsPacketMirrorLiServiceActivated = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 0, 5)).setObjects(*(("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxPacketMirrorNasIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpv6Address"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxPacketMirrorCallingStationIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorConfigurationSource"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorRouterId"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorSessionIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrigger"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorAnalyzerAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTriggerType"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDirection"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrgtIpv6PfxLen"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDateAndTime"), ) )
if mibBuilder.loadTexts: jnxJsPacketMirrorLiServiceActivated.setDescription("The jnxJsPacketMirrorLiServiceActivated Trap indicates that \npacket mirroring on an interface has been activated.")
jnxJsPacketMirrorLiServiceActivationFailed = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 0, 6)).setObjects(*(("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpv6Address"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorSessionIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorConfigurationSource"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorRouterId"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxPacketMirrorCallingStationIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrigger"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorAnalyzerAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorErrorString"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorErrorCause"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTriggerType"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDirection"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrgtIpv6PfxLen"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDateAndTime"), ) )
if mibBuilder.loadTexts: jnxJsPacketMirrorLiServiceActivationFailed.setDescription("The jnxJsPacketMirrorLiServiceActivationFailed Trap indicates  \nthat the LI service on an interface has failed due to the reason\nin jnxJsPacketMirrorTerminationReason.")
jnxJsPacketMirrorLiServiceDeactivated = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 16, 1, 0, 7)).setObjects(*(("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTargetIpv6Address"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorSessionIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorConfigurationSource"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorRouterId"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorIdentifier"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrigger"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorAnalyzerAddress"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTrgtIpv6PfxLen"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTriggerType"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDirection"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorTerminationReason"), ("JUNIPER-JS-PACKET-MIRROR-MIB", "jnxJsPacketMirrorDateAndTime"), ) )
if mibBuilder.loadTexts: jnxJsPacketMirrorLiServiceDeactivated.setDescription("The jnxJsPacketMirrorLiServiceDeactivated Trap indicates that \nthe LI service on an interface has been deactivated due to \nthe reason in jnxJsPacketMirrorTerminationReason.")

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-JS-PACKET-MIRROR-MIB", PYSNMP_MODULE_ID=jnxJsPacketMirrorMIB)

# Objects
mibBuilder.exportSymbols("JUNIPER-JS-PACKET-MIRROR-MIB", jnxJsPacketMirrorMIB=jnxJsPacketMirrorMIB, jnxJsPacketMirrorNotifications=jnxJsPacketMirrorNotifications, jnxJsPacketMirrorObjects=jnxJsPacketMirrorObjects, jnxJsPacketMirrorTrapVars=jnxJsPacketMirrorTrapVars, jnxJsPacketMirrorIdentifier=jnxJsPacketMirrorIdentifier, jnxJsPacketMirrorSessionIdentifier=jnxJsPacketMirrorSessionIdentifier, jnxJsPacketMirrorTrigger=jnxJsPacketMirrorTrigger, jnxJsPacketMirrorTriggerType=jnxJsPacketMirrorTriggerType, jnxJsPacketMirrorConfigurationSource=jnxJsPacketMirrorConfigurationSource, jnxJsPacketMirrorErrorCause=jnxJsPacketMirrorErrorCause, jnxJsPacketMirrorErrorString=jnxJsPacketMirrorErrorString, jnxJsPacketMirrorApplicationName=jnxJsPacketMirrorApplicationName, jnxJsPacketMirrorAnalyzerAddress=jnxJsPacketMirrorAnalyzerAddress, jnxJsPacketMirrorUserName=jnxJsPacketMirrorUserName, jnxJsPacketMirrorDateAndTime=jnxJsPacketMirrorDateAndTime, jnxJsPacketMirrorRouterId=jnxJsPacketMirrorRouterId, jnxJsPacketMirrorDirection=jnxJsPacketMirrorDirection, jnxJsPacketMirrorTargetIpAddress=jnxJsPacketMirrorTargetIpAddress, jnxJsPacketMirrorTerminationReason=jnxJsPacketMirrorTerminationReason, jnxPacketMirrorCallingStationIdentifier=jnxPacketMirrorCallingStationIdentifier, jnxPacketMirrorNasIdentifier=jnxPacketMirrorNasIdentifier, jnxJsPacketMirrorOctetsReceived=jnxJsPacketMirrorOctetsReceived, jnxJsPacketMirrorOctetsTransmitted=jnxJsPacketMirrorOctetsTransmitted, jnxJsPacketMirrorTargetIpv6Address=jnxJsPacketMirrorTargetIpv6Address, jnxJsPacketMirrorTrgtIpv6PfxLen=jnxJsPacketMirrorTrgtIpv6PfxLen)

# Notifications
mibBuilder.exportSymbols("JUNIPER-JS-PACKET-MIRROR-MIB", jnxJsPacketMirrorMirroringFailure=jnxJsPacketMirrorMirroringFailure, jnxJsPacketMirrorLiSubscriberLoggedIn=jnxJsPacketMirrorLiSubscriberLoggedIn, jnxJsPacketMirrorLiSubscriberLogInFailed=jnxJsPacketMirrorLiSubscriberLogInFailed, jnxJsPacketMirrorLiSubscriberLoggedOut=jnxJsPacketMirrorLiSubscriberLoggedOut, jnxJsPacketMirrorLiServiceActivated=jnxJsPacketMirrorLiServiceActivated, jnxJsPacketMirrorLiServiceActivationFailed=jnxJsPacketMirrorLiServiceActivationFailed, jnxJsPacketMirrorLiServiceDeactivated=jnxJsPacketMirrorLiServiceDeactivated)


# PySNMP SMI module. Autogenerated from smidump -f python ARISTA-BRIDGE-EXT-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:32 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( aristaMibs, ) = mibBuilder.importSymbols("ARISTA-SMI-MIB", "aristaMibs")
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( dot1qFdbId, dot1qTpFdbAddress, ) = mibBuilder.importSymbols("Q-BRIDGE-MIB", "dot1qFdbId", "dot1qTpFdbAddress")
( TimeFilter, ) = mibBuilder.importSymbols("RMON2-MIB", "TimeFilter")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "TimeTicks")

# Objects

aristaBridgeExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 30065, 3, 2)).setRevisions(("2011-03-31 13:00","2010-05-03 00:00",))
if mibBuilder.loadTexts: aristaBridgeExtMIB.setOrganization("Arista Networks, Inc.")
if mibBuilder.loadTexts: aristaBridgeExtMIB.setContactInfo("Arista Networks, Inc.\n\nPostal: 5470 Great America Parkway\n        Santa Clara, CA 95054\n\nTel: +1 408 547-5500\n\nE-mail: snmp@aristanetworks.com")
if mibBuilder.loadTexts: aristaBridgeExtMIB.setDescription("This MIB contains extensions to the BRIDGE-MIB.")
aristaDot1qTpFdbTable = MibTable((1, 3, 6, 1, 4, 1, 30065, 3, 2, 1))
if mibBuilder.loadTexts: aristaDot1qTpFdbTable.setDescription("A table that contains host move information about unicast entries\nfor which the device has forwarding information.")
aristaDot1qTpFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30065, 3, 2, 1, 1)).setIndexNames((0, "ARISTA-BRIDGE-EXT-MIB", "aristaDot1qTpFdbTimeMark"), (0, "Q-BRIDGE-MIB", "dot1qFdbId"), (0, "Q-BRIDGE-MIB", "dot1qTpFdbAddress"))
if mibBuilder.loadTexts: aristaDot1qTpFdbEntry.setDescription("Information about a specific unicast MAC address for\nwhich the device has some forwarding information.")
aristaDot1qTpFdbTimeMark = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 2, 1, 1, 1), TimeFilter()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: aristaDot1qTpFdbTimeMark.setDescription("A TimeFilter that can be used to filter out entries\nthat have not moved recently.  If you don't want to filter, make\nsure to pass '0' for the value of this index component, otherwise\npass the sysUpTime value representing the last time you queried\nthe table.")
aristaDot1qTpFdbNumMoves = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaDot1qTpFdbNumMoves.setDescription("The number of times a given MAC address has changed\nports without having been aged out, or the value 1 for a\nMAC address that was not previously in the table before being\nlearned.")
aristaDot1qTpFdbLastMove = MibTableColumn((1, 3, 6, 1, 4, 1, 30065, 3, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aristaDot1qTpFdbLastMove.setDescription("The value of sysUpTime the last time the value of\naristaDot1qTpFdbNumMoves was incremented.")
aristaBridgeExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 2, 2))
aristaBridgeExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 2, 2, 1))
aristaBridgeExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 30065, 3, 2, 2, 2))

# Augmentions

# Groups

aristaBridgeExtBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 30065, 3, 2, 2, 1, 1)).setObjects(*(("ARISTA-BRIDGE-EXT-MIB", "aristaDot1qTpFdbLastMove"), ("ARISTA-BRIDGE-EXT-MIB", "aristaDot1qTpFdbNumMoves"), ) )
if mibBuilder.loadTexts: aristaBridgeExtBaseGroup.setDescription("A collection of objects providing MAC move count and times.")

# Compliances

aristaBridgeExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 30065, 3, 2, 2, 2, 1)).setObjects(*(("ARISTA-BRIDGE-EXT-MIB", "aristaBridgeExtBaseGroup"), ) )
if mibBuilder.loadTexts: aristaBridgeExtCompliance.setDescription("The compliance statement for device support of MAC move count and\ntimes.")

# Exports

# Module identity
mibBuilder.exportSymbols("ARISTA-BRIDGE-EXT-MIB", PYSNMP_MODULE_ID=aristaBridgeExtMIB)

# Objects
mibBuilder.exportSymbols("ARISTA-BRIDGE-EXT-MIB", aristaBridgeExtMIB=aristaBridgeExtMIB, aristaDot1qTpFdbTable=aristaDot1qTpFdbTable, aristaDot1qTpFdbEntry=aristaDot1qTpFdbEntry, aristaDot1qTpFdbTimeMark=aristaDot1qTpFdbTimeMark, aristaDot1qTpFdbNumMoves=aristaDot1qTpFdbNumMoves, aristaDot1qTpFdbLastMove=aristaDot1qTpFdbLastMove, aristaBridgeExtConformance=aristaBridgeExtConformance, aristaBridgeExtGroups=aristaBridgeExtGroups, aristaBridgeExtCompliances=aristaBridgeExtCompliances)

# Groups
mibBuilder.exportSymbols("ARISTA-BRIDGE-EXT-MIB", aristaBridgeExtBaseGroup=aristaBridgeExtBaseGroup)

# Compliances
mibBuilder.exportSymbols("ARISTA-BRIDGE-EXT-MIB", aristaBridgeExtCompliance=aristaBridgeExtCompliance)

# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-MOBILE-GATEWAY-DHCP-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:53 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( InetAddress, InetAddressPrefixLength, InetAddressType, ) = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
( jnxMobileGatewayMibRoot, ) = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMobileGatewayMibRoot")
( Bits, Counter64, Integer32, Integer32, IpAddress, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Integer32", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( DisplayString, TextualConvention, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")

# Objects

jnxMbgDhcpMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8)).setRevisions(("2011-03-30 12:00",))
if mibBuilder.loadTexts: jnxMbgDhcpMib.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxMbgDhcpMib.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\nE-mail: support@juniper.net")
if mibBuilder.loadTexts: jnxMbgDhcpMib.setDescription("This module defines objects pertaining to Mobile-Edge\nDHCP Services")
jnxMbgDhcpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8, 0))
jnxMbgDhcpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8, 1))
jnxMbgDhcpNotificationVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8, 1, 1))
jnxMbgDhcpServerIP = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8, 1, 1, 1), IpAddress()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgDhcpServerIP.setDescription("IP address of the dhcp server.")
jnxMbgDhcpLogicalSystemName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8, 1, 1, 2), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgDhcpLogicalSystemName.setDescription("The name which identifies the logical-system\non the mobile-gateway")
jnxMbgDhcpRoutingInstanceName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8, 1, 1, 3), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgDhcpRoutingInstanceName.setDescription("The name which identifies the routing instance\non the mobile-gateway.")
jnxMbgDhcpProfileName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8, 1, 1, 4), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgDhcpProfileName.setDescription("The configured dhcp profile name")
jnxMbgDhcpPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8, 1, 1, 5), DisplayString()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgDhcpPoolName.setDescription("The configured dhcp pool name with in a dhcp profile")
jnxMbgDhcpReachability = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8, 1, 1, 6), TruthValue()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: jnxMbgDhcpReachability.setDescription("True  - The server is reachable\nFalse - The server is unreachable.")

# Augmentions

# Notifications

jnxMbgDhcpServerReachability = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8, 0, 1)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", "jnxMbgDhcpRoutingInstanceName"), ("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", "jnxMbgDhcpReachability"), ("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", "jnxMbgDhcpProfileName"), ("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", "jnxMbgDhcpServerIP"), ("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", "jnxMbgDhcpLogicalSystemName"), ) )
if mibBuilder.loadTexts: jnxMbgDhcpServerReachability.setDescription("This notification is used to notify if the given\ndhcp server is reachable/unreachable.")
jnxMbgDhcpAddrPoolExhaust = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 8, 0, 2)).setObjects(*(("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", "jnxMbgDhcpRoutingInstanceName"), ("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", "jnxMbgDhcpPoolName"), ("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", "jnxMbgDhcpProfileName"), ("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", "jnxMbgDhcpServerIP"), ("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", "jnxMbgDhcpLogicalSystemName"), ) )
if mibBuilder.loadTexts: jnxMbgDhcpAddrPoolExhaust.setDescription("This notification signifies that the addresses\nfrom a given address pool have exhusted.")

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", PYSNMP_MODULE_ID=jnxMbgDhcpMib)

# Objects
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", jnxMbgDhcpMib=jnxMbgDhcpMib, jnxMbgDhcpNotifications=jnxMbgDhcpNotifications, jnxMbgDhcpObjects=jnxMbgDhcpObjects, jnxMbgDhcpNotificationVars=jnxMbgDhcpNotificationVars, jnxMbgDhcpServerIP=jnxMbgDhcpServerIP, jnxMbgDhcpLogicalSystemName=jnxMbgDhcpLogicalSystemName, jnxMbgDhcpRoutingInstanceName=jnxMbgDhcpRoutingInstanceName, jnxMbgDhcpProfileName=jnxMbgDhcpProfileName, jnxMbgDhcpPoolName=jnxMbgDhcpPoolName, jnxMbgDhcpReachability=jnxMbgDhcpReachability)

# Notifications
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-DHCP-MIB", jnxMbgDhcpServerReachability=jnxMbgDhcpServerReachability, jnxMbgDhcpAddrPoolExhaust=jnxMbgDhcpAddrPoolExhaust)


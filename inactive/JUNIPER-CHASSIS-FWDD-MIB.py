# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-CHASSIS-FWDD-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:49 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( jnxMibs, ) = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs")
( Bits, Gauge32, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")

# Objects

jnxFwdd = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 34)).setRevisions(("2006-02-16 21:58",))
if mibBuilder.loadTexts: jnxFwdd.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxFwdd.setContactInfo("        Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\nE-mail: support@juniper.net")
if mibBuilder.loadTexts: jnxFwdd.setDescription("This is Juniper Networks' implementation of enterprise\nspecific MIB for J-Series FWDD module from the router chassis box.")
jnxFwddProcess = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 34, 1))
jnxFwddMicroKernelCPUUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 34, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFwddMicroKernelCPUUsage.setDescription("The FWDD Micro Kernel CPU utilization in percentage.\nZero if unavailable or inapplicable.")
jnxFwddRtThreadsCPUUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 34, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFwddRtThreadsCPUUsage.setDescription("The FWDD Realtime threads total CPU utilization in percentage.\nZero if unavailable or inapplicable.")
jnxFwddHeapUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 34, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFwddHeapUsage.setDescription("The FWDD Heap utilization in percentage.\nZero if unavailable or inapplicable.")
jnxFwddDmaMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 34, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFwddDmaMemUsage.setDescription("The FWDD DMA Memory utilization in percentage.\nZero if unavailable or inapplicable.")
jnxFwddUpTime = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 34, 1, 5), Integer32()).setMaxAccess("readonly").setUnits("seconds")
if mibBuilder.loadTexts: jnxFwddUpTime.setDescription("The FWDD Module uptime expressed in seconds.\nZero if unavailable or inapplicable.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-CHASSIS-FWDD-MIB", PYSNMP_MODULE_ID=jnxFwdd)

# Objects
mibBuilder.exportSymbols("JUNIPER-CHASSIS-FWDD-MIB", jnxFwdd=jnxFwdd, jnxFwddProcess=jnxFwddProcess, jnxFwddMicroKernelCPUUsage=jnxFwddMicroKernelCPUUsage, jnxFwddRtThreadsCPUUsage=jnxFwddRtThreadsCPUUsage, jnxFwddHeapUsage=jnxFwddHeapUsage, jnxFwddDmaMemUsage=jnxFwddDmaMemUsage, jnxFwddUpTime=jnxFwddUpTime)


# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-LSYSSP-NATDSTPOOL-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:52 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( jnxLsysSpNATdstpool, ) = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpNATdstpool")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

jnxLsysSpNATdstpoolMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1)).setRevisions(("2010-05-19 16:44",))
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolMIB.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolMIB.setContactInfo("Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\n\nE-mail: support@juniper.net\nHTTP://www.juniper.net")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolMIB.setDescription("This module defines the NAT-destination-pool-specific MIB for \nJuniper Enterprise Logical-System (LSYS) security profiles.  \nJuniper documentation is recommended as the reference. \n\nThe LSYS security profile provides various static and dynamic \nresource management by observing resource quota limits. \nSecurity NAT-destination-pool resource is the focus in this MIB. ")
jnxLsysSpNATdstpoolObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 1))
jnxLsysSpNATdstpoolTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 1, 1))
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolTable.setDescription("LSYSPROFILE NAT-destination-pool objects for NAT-destination-pool \nresource consumption per LSYS.")
jnxLsysSpNATdstpoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 1, 1, 1)).setIndexNames((1, "JUNIPER-LSYSSP-NATDSTPOOL-MIB", "jnxLsysSpNATdstpoolLsysName"))
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolEntry.setDescription("An entry in NAT-destination-pool resource table.")
jnxLsysSpNATdstpoolLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolLsysName.setDescription("The name of the logical system for which NAT-destination-pool \nresource information is retrieved. ")
jnxLsysSpNATdstpoolProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolProfileName.setDescription("The security profile name string for the LSYS.")
jnxLsysSpNATdstpoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolUsage.setDescription("The current resource usage count for the LSYS.")
jnxLsysSpNATdstpoolReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolReserved.setDescription("The reserved resource count for the LSYS.")
jnxLsysSpNATdstpoolMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolMaximum.setDescription("The maximum allowed resource usage count for the LSYS.")
jnxLsysSpNATdstpoolSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 2))
jnxLsysSpNATdstpoolUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolUsedAmount.setDescription("The NAT-destination-pool resource consumption over all LSYS.")
jnxLsysSpNATdstpoolMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolMaxQuota.setDescription("The NAT-destination-pool resource maximum quota for the whole \ndevice for all LSYS.")
jnxLsysSpNATdstpoolAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolAvailableAmount.setDescription("The NAT-destination-pool resource available in the whole device.")
jnxLsysSpNATdstpoolHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolHeaviestUsage.setDescription("The most amount of NAT-destination-pool resource consumed of a \nLSYS.")
jnxLsysSpNATdstpoolHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolHeaviestUser.setDescription("The LSYS name that consume the most NAT-destination-pool resource.")
jnxLsysSpNATdstpoolLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolLightestUsage.setDescription("The least amount of NAT-destination-pool resource consumed of a \nLSYS.")
jnxLsysSpNATdstpoolLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 9, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATdstpoolLightestUser.setDescription("The LSYS name that consume the least NAT-destination-pool resource.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-LSYSSP-NATDSTPOOL-MIB", PYSNMP_MODULE_ID=jnxLsysSpNATdstpoolMIB)

# Objects
mibBuilder.exportSymbols("JUNIPER-LSYSSP-NATDSTPOOL-MIB", jnxLsysSpNATdstpoolMIB=jnxLsysSpNATdstpoolMIB, jnxLsysSpNATdstpoolObjects=jnxLsysSpNATdstpoolObjects, jnxLsysSpNATdstpoolTable=jnxLsysSpNATdstpoolTable, jnxLsysSpNATdstpoolEntry=jnxLsysSpNATdstpoolEntry, jnxLsysSpNATdstpoolLsysName=jnxLsysSpNATdstpoolLsysName, jnxLsysSpNATdstpoolProfileName=jnxLsysSpNATdstpoolProfileName, jnxLsysSpNATdstpoolUsage=jnxLsysSpNATdstpoolUsage, jnxLsysSpNATdstpoolReserved=jnxLsysSpNATdstpoolReserved, jnxLsysSpNATdstpoolMaximum=jnxLsysSpNATdstpoolMaximum, jnxLsysSpNATdstpoolSummary=jnxLsysSpNATdstpoolSummary, jnxLsysSpNATdstpoolUsedAmount=jnxLsysSpNATdstpoolUsedAmount, jnxLsysSpNATdstpoolMaxQuota=jnxLsysSpNATdstpoolMaxQuota, jnxLsysSpNATdstpoolAvailableAmount=jnxLsysSpNATdstpoolAvailableAmount, jnxLsysSpNATdstpoolHeaviestUsage=jnxLsysSpNATdstpoolHeaviestUsage, jnxLsysSpNATdstpoolHeaviestUser=jnxLsysSpNATdstpoolHeaviestUser, jnxLsysSpNATdstpoolLightestUsage=jnxLsysSpNATdstpoolLightestUsage, jnxLsysSpNATdstpoolLightestUser=jnxLsysSpNATdstpoolLightestUser)


# PySNMP SMI module. Autogenerated from smidump -f python JUNIPER-MAC-MIB
# by libsmi2pysnmp-0.1.3 at Thu May 22 11:57:53 2014,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( ifIndex, ) = mibBuilder.importSymbols("IF-MIB", "ifIndex")
( jnxMibs, ) = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs")
( Bits, Counter64, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( MacAddress, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention")

# Types

class JnxVlanIndex(Unsigned32):
    pass


# Objects

jnxMac = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 23)).setRevisions(("2003-07-18 21:53","2002-10-10 00:00",))
if mibBuilder.loadTexts: jnxMac.setOrganization("Juniper Networks, Inc.")
if mibBuilder.loadTexts: jnxMac.setContactInfo("        Juniper Technical Assistance Center\nJuniper Networks, Inc.\n1194 N. Mathilda Avenue\nSunnyvale, CA 94089\nE-mail: support@juniper.net")
if mibBuilder.loadTexts: jnxMac.setDescription("This is Juniper Networks' implementation of enterprise\nspecific MIB for Ethernet Mac Stats")
jnxMacStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 23, 1))
jnxMacStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 23, 1, 1))
if mibBuilder.loadTexts: jnxMacStatsTable.setDescription("a list of MacStats entry for GE ethernet interfaces")
jnxMacStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 23, 1, 1, 1)).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "JUNIPER-MAC-MIB", "jnxVlanIndex"), (0, "JUNIPER-MAC-MIB", "jnxSourceMacAddress"))
if mibBuilder.loadTexts: jnxMacStatsEntry.setDescription("An entry containing statistics information applicable to a\nparticular GE ethernet interfaces.")
jnxVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 23, 1, 1, 1, 1), JnxVlanIndex()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxVlanIndex.setDescription("The VLAN ID refering to this VLAN.")
jnxSourceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 23, 1, 1, 1, 2), MacAddress()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: jnxSourceMacAddress.setDescription("The Source MAC address.")
jnxMacHCInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 23, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMacHCInOctets.setDescription("The number of total octets received in this VLAN/MAC Address.")
jnxMacHCInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 23, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMacHCInFrames.setDescription("The number of total frames received in this VLAN/MAC Address.")
jnxMacHCOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 23, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMacHCOutOctets.setDescription("The number of total octets transmitted in this VLAN/MAC Address.")
jnxMacHCOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 23, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMacHCOutFrames.setDescription("The number of total frames transmitted in this VLAN/MAC Address.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("JUNIPER-MAC-MIB", PYSNMP_MODULE_ID=jnxMac)

# Types
mibBuilder.exportSymbols("JUNIPER-MAC-MIB", JnxVlanIndex=JnxVlanIndex)

# Objects
mibBuilder.exportSymbols("JUNIPER-MAC-MIB", jnxMac=jnxMac, jnxMacStats=jnxMacStats, jnxMacStatsTable=jnxMacStatsTable, jnxMacStatsEntry=jnxMacStatsEntry, jnxVlanIndex=jnxVlanIndex, jnxSourceMacAddress=jnxSourceMacAddress, jnxMacHCInOctets=jnxMacHCInOctets, jnxMacHCInFrames=jnxMacHCInFrames, jnxMacHCOutOctets=jnxMacHCOutOctets, jnxMacHCOutFrames=jnxMacHCOutFrames)

